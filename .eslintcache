[{"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\index.js":"1","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\App.js":"2","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\serviceWorker.js":"3","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Store\\store.js":"4","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\PageRouter\\UserStatusProvider.jsx":"5","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Providers\\StateWrapper.jsx":"6","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\PageRouter\\index.jsx":"7","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\States\\menuSlice.js":"8","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\States\\headerSlice.js":"9","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\States\\orderSlice.js":"10","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Pages\\index.jsx":"11","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\States\\userSlice.js":"12","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\PageRouter\\PrivateRoute.jsx":"13","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Pages\\NotExist.jsx":"14","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Pages\\PhotoGallery.jsx":"15","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Pages\\Footer.jsx":"16","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Pages\\Home.jsx":"17","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Pages\\Header.jsx":"18","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Pages\\styles.js":"19","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\AdminPages\\index.jsx":"20","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\OrderProcess\\index.jsx":"21","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\OrderProcess\\OrderReceipt.jsx":"22","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\OrderProcess\\Cart.jsx":"23","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\OrderProcess\\Payment.jsx":"24","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\ImageBlock\\ReactResponsiveCarousel.jsx":"25","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\Card\\CardItem.jsx":"26","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\StaticDatas\\index.js":"27","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\AdminPages\\AdminLogin.jsx":"28","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\AdminPages\\Admin.jsx":"29","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\MenuBox\\index.jsx":"30","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\Card\\styles.js":"31","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\AdminPages\\AdminMenu.jsx":"32","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\AdminPages\\AdminOrders.jsx":"33","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\StaticDatas\\socialMedia.js":"34","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\StaticDatas\\footerData.js":"35","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\Forms\\SplitStripeForm.jsx":"36","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\StaticDatas\\headerData.js":"37","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\MUI\\index.jsx":"38","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\MUI\\MuiTabs.jsx":"39","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\Card\\ItemCard.jsx":"40","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\AdminComponents\\OrderBlock.jsx":"41","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\AdminComponents\\MenuBlock.jsx":"42","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\Card\\ItemDetails.jsx":"43","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\Card\\ItemCardList.jsx":"44","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\Forms\\AddMenuItem.jsx":"45","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\MUI\\MuiNumberInput.jsx":"46","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\MUI\\MuiInputField.jsx":"47","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\MUI\\MuiButton.jsx":"48","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\MUI\\styles.js":"49","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\ImageUpload\\ImageUpload.jsx":"50","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\Forms\\ItemEdit.jsx":"51","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\ImageUpload\\styles.js":"52","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\Forms\\useResponsiveFontSize.js":"53","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\Forms\\AddCategory.jsx":"54"},{"size":841,"mtime":1608252514066,"results":"55","hashOfConfig":"56"},{"size":370,"mtime":1609078738995,"results":"57","hashOfConfig":"56"},{"size":5086,"mtime":1608252514067,"results":"58","hashOfConfig":"56"},{"size":545,"mtime":1608947840623,"results":"59","hashOfConfig":"56"},{"size":679,"mtime":1610490291207,"results":"60","hashOfConfig":"56"},{"size":1013,"mtime":1610490291219,"results":"61","hashOfConfig":"56"},{"size":981,"mtime":1610490291209,"results":"62","hashOfConfig":"56"},{"size":1988,"mtime":1610070979132,"results":"63","hashOfConfig":"56"},{"size":1102,"mtime":1608252514064,"results":"64","hashOfConfig":"56"},{"size":2482,"mtime":1609172049510,"results":"65","hashOfConfig":"56"},{"size":272,"mtime":1609886728055,"results":"66","hashOfConfig":"56"},{"size":2937,"mtime":1610490291221,"results":"67","hashOfConfig":"56"},{"size":493,"mtime":1608846419950,"results":"68","hashOfConfig":"56"},{"size":365,"mtime":1608845921139,"results":"69","hashOfConfig":"56"},{"size":419,"mtime":1609886728055,"results":"70","hashOfConfig":"56"},{"size":795,"mtime":1609346075811,"results":"71","hashOfConfig":"56"},{"size":2083,"mtime":1610490291213,"results":"72","hashOfConfig":"56"},{"size":900,"mtime":1610490291211,"results":"73","hashOfConfig":"56"},{"size":2677,"mtime":1610490291215,"results":"74","hashOfConfig":"56"},{"size":120,"mtime":1609886728039,"results":"75","hashOfConfig":"56"},{"size":153,"mtime":1609094135516,"results":"76","hashOfConfig":"56"},{"size":1818,"mtime":1609377337099,"results":"77","hashOfConfig":"56"},{"size":7270,"mtime":1610490677138,"results":"78","hashOfConfig":"56"},{"size":246,"mtime":1610490291205,"results":"79","hashOfConfig":"56"},{"size":1236,"mtime":1609886728055,"results":"80","hashOfConfig":"56"},{"size":725,"mtime":1610490291170,"results":"81","hashOfConfig":"56"},{"size":6822,"mtime":1609886728070,"results":"82","hashOfConfig":"56"},{"size":3909,"mtime":1609886728102,"results":"83","hashOfConfig":"56"},{"size":2211,"mtime":1610490291160,"results":"84","hashOfConfig":"56"},{"size":828,"mtime":1610070979120,"results":"85","hashOfConfig":"56"},{"size":1959,"mtime":1610490291186,"results":"86","hashOfConfig":"56"},{"size":1517,"mtime":1610490291163,"results":"87","hashOfConfig":"56"},{"size":1744,"mtime":1610490291165,"results":"88","hashOfConfig":"56"},{"size":365,"mtime":1608905644545,"results":"89","hashOfConfig":"56"},{"size":53,"mtime":1608914707674,"results":"90","hashOfConfig":"56"},{"size":3939,"mtime":1610494203123,"results":"91","hashOfConfig":"56"},{"size":465,"mtime":1610490291223,"results":"92","hashOfConfig":"56"},{"size":180,"mtime":1608836500236,"results":"93","hashOfConfig":"56"},{"size":1842,"mtime":1610490291201,"results":"94","hashOfConfig":"56"},{"size":1404,"mtime":1610490291180,"results":"95","hashOfConfig":"56"},{"size":2174,"mtime":1610490291169,"results":"96","hashOfConfig":"56"},{"size":1394,"mtime":1610490291167,"results":"97","hashOfConfig":"56"},{"size":2673,"mtime":1610490291184,"results":"98","hashOfConfig":"56"},{"size":1711,"mtime":1610490291182,"results":"99","hashOfConfig":"56"},{"size":5415,"mtime":1610490291190,"results":"100","hashOfConfig":"56"},{"size":1798,"mtime":1608844434863,"results":"101","hashOfConfig":"56"},{"size":834,"mtime":1609886728055,"results":"102","hashOfConfig":"56"},{"size":621,"mtime":1610491512514,"results":"103","hashOfConfig":"56"},{"size":1040,"mtime":1609886728055,"results":"104","hashOfConfig":"56"},{"size":1616,"mtime":1608252514056,"results":"105","hashOfConfig":"56"},{"size":5646,"mtime":1610490291192,"results":"106","hashOfConfig":"56"},{"size":432,"mtime":1610070979115,"results":"107","hashOfConfig":"56"},{"size":476,"mtime":1610490291199,"results":"108","hashOfConfig":"56"},{"size":4146,"mtime":1610490291188,"results":"109","hashOfConfig":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"1gqzz9k",{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"112"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"112"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"112"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"112"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"112"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"112"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"112"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"112"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"112"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"112"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"112"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"112"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"112"},"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\index.js",[],["232","233"],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\App.js",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\serviceWorker.js",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Store\\store.js",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\PageRouter\\UserStatusProvider.jsx",["234"],"import React, { createContext, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  userIsLoggedIn,\n  userLoginCheck\n} from 'States/userSlice';\n\nconst UserStatusCheck = createContext({});\n\nconst UserStatusProvider = ({ children }) => {\n  const dispatch = useDispatch();\n  const userIsSignIn = useSelector(userIsLoggedIn)\n\n  // check user status and make up date if necessary.\n  useEffect(()=>{\n    !userIsSignIn && dispatch(userLoginCheck());\n  },[userIsSignIn])\n  \n    return (\n        <UserStatusCheck.Provider value={userIsSignIn}>\n            {children}\n        </UserStatusCheck.Provider>\n    );\n};\n\nexport default UserStatusProvider;","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Providers\\StateWrapper.jsx",["235"],"import React, { useEffect } from 'react';\nimport { setMenu } from 'States/menuSlice';\nimport { useDispatch } from 'react-redux';\nimport axios from 'axios';\nimport {Elements} from '@stripe/react-stripe-js';\nimport {loadStripe} from '@stripe/stripe-js';\nimport \"./styles.scss\";\n\nconst StateWrapper = ({children}) => {\n    const dispatch = useDispatch();\n    const stripePromise = loadStripe(\"pk_test_51I8WMcEFoepYxM6pCNMtpNb0Tvh8pTLqzYMNrocMJoqBjSQ4Eo5ls4lplxrmSLTGWydlBrAkJp0a9Zgr6tKK8jTw00fquGZFlE\");\n\n    // const currentMenuState = useSelector(menuListState)\n    useEffect(()=>{\n        axios.get(process.env.REACT_APP_API_RESTAURANT_MENU)\n            .then(res => {\n                dispatch(setMenu(res.data.menu));\n            })\n            .catch(err => console.log(err))\n    },[])\n    return(\n        <Elements stripe={stripePromise}>\n            <div id=\"state-wrapper\" className=\"StateWrapperBody\">\n                {children}\n            </div>\n        </Elements>\n    );\n};\n\nexport default StateWrapper;","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\PageRouter\\index.jsx",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\States\\menuSlice.js",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\States\\headerSlice.js",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\States\\orderSlice.js",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Pages\\index.jsx",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\States\\userSlice.js",["236","237","238"],"import { createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport {\n    CognitoUserPool,\n    CognitoUserAttribute,\n    CognitoUser,\n    AuthenticationDetails\n} from 'amazon-cognito-identity-js';\n\nconst poolData = {\n    UserPoolId: process.env.REACT_APP_USER_POOL,\n    ClientId: process.env.REACT_APP_CLIENT_ID\n};\n// const postURL = process.env.REACT_APP_API_GATEWAY_URL;\nconst userPool = new CognitoUserPool(poolData);\nconst ApiGateWayUserURL = process.env.REACT_APP_API_GATEWAY_URL;\nconst initState = {\n    isLoggedIn: false,\n}\nexport const userSlice = createSlice({\n    name: 'userState',\n    initialState: initState,\n    reducers: {\n        setUserState: (state, action) => {\n            return {...state, ...action.payload};\n        },\n        setIsLoggedIn: (state, action) => {\n            state.isLoggedIn = action.payload;\n        },\n    },\n});\n\nexport const {\n    setUserState,\n    setIsLoggedIn,\n} = userSlice.actions;\n\n// AWS User Login\nexport const userLogin = ({userName, password, history}) => dispatch => {\n    const authenticationData = {\n        Username: userName,\n        Password: password,\n    };\n    const authenticationDetails = new AuthenticationDetails(\n        authenticationData\n    );\n\n    const userData = {\n        Username: userName,\n        Pool: userPool,\n    };\n    const cognitoUser = new CognitoUser(userData);\n\n    cognitoUser.authenticateUser(authenticationDetails, {\n        onSuccess: (result) => {\n            dispatch(setIsLoggedIn(true));\n            history.push('/admin');\n         },\n        onFailure: (err) => {\n            alert(err.message || JSON.stringify(err));\n        },\n    });\n};\n\n// AWS cognito Logout\nexport const userLogout = ({history}) => dispatch => {\n    if(userPool.getCurrentUser()){\n        // To Do: clear init data\n        userPool.getCurrentUser().signOut();\n        dispatch(setUserState(initState))\n        history.push('/');\n    };\n};\n\n// AWS Cognito Get User Data\nexport const userLoginCheck = () => dispatch => {\n    if (userPool.getCurrentUser() != null) {\n        userPool.getCurrentUser().getSession((err, session) => {\n            if(err){console.log('userPool.getCurrentUser() err---->', err)};\n                dispatch(setIsLoggedIn(true));\n            // axios.get(`${ApiGateWayUserURL}?subId=${session?.idToken?.payload?.sub}`, {\n            //     headers: { 'Authorization' : session?.getIdToken()?.getJwtToken() }\n            // })\n            //     .then(res => {\n            //         console.log('userLoginCheck-trigger--->: ', res.data)\n            //         dispatch(setUserState(res.data));\n            //         dispatch(setIsLoggedIn(true));\n            //     })\n            //     .catch(error => console.log('get user error: ', error))\n          });\n    } \n};\n\nexport const userCognitoState = state => state.userState;\nexport const userIsLoggedIn = state => state.userState.isLoggedIn;\nexport default userSlice.reducer;\n","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\PageRouter\\PrivateRoute.jsx",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Pages\\NotExist.jsx",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Pages\\PhotoGallery.jsx",["239"],"import React from 'react';\nimport { photoGallery } from 'StaticDatas';\n\nconst PhotoGallery = () => {\n    return(\n        <ul className=\"PhotoGallery-wrapper\">\n            {photoGallery.map((image, index)=> \n                <li key={`image-${index}-gallery`}>\n                    <img src={image} alt={`image-${index}-gallery`}/>\n                </li>\n            )}\n        </ul>\n    );\n};\n\nexport default PhotoGallery;","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Pages\\Footer.jsx",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Pages\\Home.jsx",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Pages\\Header.jsx",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Pages\\styles.js",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\AdminPages\\index.jsx",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\OrderProcess\\index.jsx",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\OrderProcess\\OrderReceipt.jsx",["240"],"import React, { useEffect } from 'react';\r\nimport { MuiButton } from 'Components/MUI';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './styles.scss';\r\n\r\nconst OrderReceipt = () => {\r\n    let history = useHistory();\r\n    const wsUri = process.env.REACT_APP_API_WEBSOCKETS;\r\n    const websocket = new WebSocket(wsUri);\r\n    \r\n    // triiger websocket to send order on load, and disable button until websocket successfully update the order\r\n    useEffect(()=>{\r\n        websocket.onopen = (event) => {        \r\n            // console.log('event on open -->: ', event)  \r\n            const sendMessage = {\r\n                message : \"New order available\", \r\n                action : \"message\"\r\n            }\r\n            // console.log('websocket state-->: ', websocket.readyState)\r\n            websocket.send(JSON.stringify(sendMessage));\r\n        }\r\n    },[])\r\n    // const onMessage = (evt) => {\r\n    //     console.log('evnt-data----->: ', evt.data)\r\n    //     evt?.data && setDisableClose(false)\r\n    //     evt?.data && websocket.close();\r\n    // }\r\n    // websocket.onmessage = function(evt) { onMessage(evt) };\r\n    const handleOnClick = () => {\r\n        websocket.close();\r\n        history.push('/')\r\n    };\r\n\r\n    return(\r\n        <div className=\"OrderReceipt-wrapper\">\r\n            <h2>Order Receipt</h2>\r\n            <div>\r\n                YOUR ORDER DETAIL\r\n            </div>\r\n            <MuiButton \r\n                props={{\r\n                    color: '#717171',\r\n                    bgColor: '#a2e6fd',\r\n                    hColor: \"white\",\r\n                    hbgColor: \"#287d9a\"\r\n                }}\r\n                label='CLOSE'\r\n                onClick={handleOnClick}\r\n                onKeyPress={handleOnClick}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OrderReceipt;","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\OrderProcess\\Cart.jsx",["241","242","243","244"],"import React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n// import { useHistory } from 'react-router-dom';\nimport { orderDetailState, setCartUpdate, setDeleteItem } from 'States/orderSlice';\nimport { AddCircle, RemoveCircle } from '@material-ui/icons';\nimport TextField from '@material-ui/core/TextField';\nimport { FormControl } from '@material-ui/core';\n// import { MuiButton } from 'Components/MUI';\nimport SplitStripeForm from 'Components/Forms/SplitStripeForm';\n// import moment from 'moment';\nimport './styles.scss';\n\nconst Cart = ({}) => { \n    // let history = useHistory();\n    // const dispatch = useDispatch();\n    const [totalAmount, setTotalAmount] = useState(0)\n    const [buyerDetails, setBuyerDetails] = useState({})\n    const [disableCheckout, setDisableCheckout] = useState(true)\n    const cartOrderList = useSelector(orderDetailState);\n    // const wsUri = process.env.REACT_APP_API_WEBSOCKETS;\n    // const websocket = new WebSocket(wsUri);\n    useEffect(()=>{\n        cartOrderList && \n        setTotalAmount(cartOrderList.reduce((accumulator, current) => {\n            return (accumulator + (parseInt(current.orderAmount) * current.price))\n        }, 0));\n    },[cartOrderList])\n    useEffect(()=>{\n        if(!buyerDetails.name || !buyerDetails.phoneNumber){ setDisableCheckout(true)} \n        if(buyerDetails.name && buyerDetails.phoneNumber) {setDisableCheckout(false)}\n    },[buyerDetails])\n    \n    // const onPaymentSuccessful = (param) => {\n    //     dispatch(postNewOrder(param))\n    // }\n    const dollarAndTax = (a) => {return parseInt((a * 1.07 * 100).toFixed(2))};\n    // const handleCheckOut = () => {\n    //     const param = {\n    //         orderNumber: '',\n    //         orderTime: moment().format('MMMM Do YYYY, h:mm:ss a'),\n    //         fullFillTime: '',\n    //         fullFillStatus: false,\n    //         itemDetails: cartOrderList,\n    //         buyerDetails: {...buyerDetails}\n    //     }\n    //     console.log('param--->: ', param)\n        // onPaymentSuccessful(param)\n        // history.push('/order-receipt') \n    // }\n\n    const buyerInputChange = (event) => {\n        event.preventDefault();\n        setBuyerDetails({...buyerDetails, [event.target.name]: event.target.value})\n    }\n\n    const CartItemList = ({ cartItemDetail }) => {\n        const {\n            imgSrc,\n            itemNumber,\n            itemDetails,\n            title,\n            price,\n            orderAmount,\n        } = cartItemDetail;\n        const dispatch = useDispatch();\n        const [currentOrderAmount, setCurrentOrderAmount] = useState(orderAmount)\n        const updatePrice = (parseInt(orderAmount) * price).toFixed(2);\n        \n        const handleCheckoutAddUpdate = (num) => {\n            if(parseInt(currentOrderAmount) < num){\n                setCurrentOrderAmount(parseInt(currentOrderAmount + 1))\n                dispatch(setCartUpdate({...cartItemDetail, orderAmount: parseInt(currentOrderAmount) + 1}))\n            }\n        }\n        const handleCheckoutMinusUpdate = (num) => {\n            if(parseInt(currentOrderAmount) > num){\n                setCurrentOrderAmount(parseInt(currentOrderAmount) - 1)\n                dispatch(setCartUpdate({...cartItemDetail, orderAmount: parseInt(currentOrderAmount) - 1}))\n            }\n            if (parseInt(currentOrderAmount) <= num) {\n                dispatch(setDeleteItem({...cartItemDetail}))\n            }\n        }\n\n        return(\n            <ul className=\"CartItemList-block\">\n                <li className=\"CartItemList-img-block\"><img src={imgSrc} alt={`${title}-img`} /></li>\n                <li className=\"CartItemList-desc-block\">\n                    <span>{itemNumber}</span>\n                    <span>{title}</span>\n                </li>\n                <li className=\"CartItemList-price-block\">\n                    <span className=\"InputNumberWrapper\">\n                        <TextField\n                            id=\"filled-number\"\n                            label=\"\"\n                            type=\"number\"\n                            value={currentOrderAmount}\n                            variant=\"outlined\"\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            InputProps={{\n                                endAdornment: (\n                                    <span className=\"AddMinusIconWrapper\">\n                                        <AddCircle onClick={()=>handleCheckoutAddUpdate(10)} style={{color: 'green', size: '16px', cursor: 'pointer'}}/>\n                                        <RemoveCircle onClick={()=>handleCheckoutMinusUpdate(1)} style={{color: 'red', size: '16px', cursor: 'pointer'}}/>\n                                    </span>\n                            )}}/>\n                        \n                    </span>\n                    ${updatePrice}\n                </li>\n            </ul>\n        )\n    };\n\n    return (\n        <div className=\"Cart-Wrapper\">\n            <h1>ORDER DETAILS</h1>\n            \n            <h2 className=\"Cart-Items-in-cart-title\">Items in Cart</h2>\n            <div className=\"Cart-Added-Items\">                \n                { (cartOrderList.length < 1) \n                    ? <h2>YOU HAVE NO ADDED ITEM</h2>\n                    : cartOrderList.map((item, idx)=>(\n                        <CartItemList \n                            key={`${item.title}-${idx}`}\n                            cartItemDetail={item} />\n                    ))\n                }\n            </div>\n            <div className=\"Cart-Total-Amount\">\n                <h4>tax: ${(totalAmount * .07).toFixed(2)}</h4>\n                <h3>TOTAL: ${(totalAmount * 1.07).toFixed(2)}</h3>\n            </div>\n            {/* <button onClick={handleCheckOut}>CHECK OUT</button> */}\n            {/* <MuiButton \n                props={{\n                    color: '#717171',\n                    bgColor: '#a2e6fd',\n                    hColor: \"white\",\n                    hbgColor: \"#287d9a\"\n                }}\n                disabled={ (disableCheckout || (cartOrderList.length < 1)) ? true : false }\n                label='CHECK OUT'\n                onClick={handleCheckOut}\n                onKeyPress={handleCheckOut}\n            /> */}\n\n            <div className=\"Cart-User-Info\">\n                <FormControl>\n                    <TextField required name=\"name\" id=\"Checkout-Name\" label=\"Name\" onChange={buyerInputChange} />\n                    <TextField name=\"address\" id=\"Checkout-Address\" label=\"Address\" onChange={buyerInputChange} />\n                    <TextField required name=\"phoneNumber\" id=\"Checkout-PhoneNumber\" label=\"Phone Number\" onChange={buyerInputChange} />\n                    <TextField name=\"eMail\" id=\"Checkout-EMail\" label=\"E-Mail\" onChange={buyerInputChange} />\n                </FormControl>\n                <SplitStripeForm \n                    disableCheckout={ disableCheckout }\n                    itemDetails={ cartOrderList }\n                    buyerDetails={ buyerDetails }\n                    dollarAmount={ dollarAndTax(totalAmount) }\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default Cart;","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\OrderProcess\\Payment.jsx",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\ImageBlock\\ReactResponsiveCarousel.jsx",["245"],"import React from 'react';\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport { Carousel } from 'react-responsive-carousel';\n\nconst ReactResponsiveCarousel = ({imgList}) => {\n\n    const createCarouselItemImage = (image, index, options = {}) => (\n        <div key={`ReactResponsiveCarousel-${index}`}>\n            <img src={image} />\n        </div>\n    );\n    \n    const baseChildren = <div>{imgList.map(createCarouselItemImage)}</div>;\n\n    const getConfigurableProps  = {\n        showArrows:  true,\n        showStatus:  true,\n        showIndicators:  false,\n        infiniteLoop:  true,\n        showThumbs:  false,\n        useKeyboardArrows:  true,\n        autoPlay:  true,\n        stopOnHover:  true,\n        swipeable:  true,\n        dynamicHeight:  true,\n        emulateTouch:  true,\n        thumbWidth:  100, \n        selectedItem:  0, \n        interval:  3000, \n        transitionTime:  150, \n        swipeScrollTolerance:  5,\n        centerSlidePercentage: 80,\n    };\n\n    return (\n        <Carousel \n            infiniteLoop\n            centerMode\n            {...getConfigurableProps}\n        >\n            {baseChildren.props.children}\n        </Carousel>\n    );\n};\n\nexport default ReactResponsiveCarousel;","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\Card\\CardItem.jsx",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\StaticDatas\\index.js",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\AdminPages\\AdminLogin.jsx",["246"],"import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { MuiButton, MuiInputField } from 'Components/MUI';\nimport { userIsLoggedIn, userLogin, userLogout } from 'States/userSlice';\n\nimport './styles.scss';\n\nconst AdminLogin = () => {\n    const userSignIn = useSelector(userIsLoggedIn);\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const [authInput, setAuthInput] = useState({});\n    const [inputErrorMessage, setInputErrorMessage] = useState('');\n\n    useEffect(()=>{\n        (userSignIn === true) && (history.push(\"/admin\"));\n    },[userSignIn]);\n    const LoginSubmitKeyPress = (e) => {\n        if(e.keyCode === 13 || e.charCode === 13 ||  e.key === 'Enter'){\n            e.preventDefault();\n            (authInput.userName && authInput.password) && dispatch(userLogin({...authInput, history}));\n            (!authInput.userName || !authInput.password) \n                ? setInputErrorMessage('FILL IN MISSING INPUT FIELD') \n                : setInputErrorMessage('');\n        }\n    }\n    const LoginSubmit = () => {\n        (authInput.userName && authInput.password) && dispatch(userLogin({...authInput, history}));\n        (!authInput.userName || !authInput.password) \n            ? setInputErrorMessage('FILL IN MISSING INPUT FIELD') \n            : setInputErrorMessage('');\n    };\n\n    // store all input changes\n    const formInputChange = (e) => {\n        const inputValue = (\n            ((e.target.name === 'number') && parseInt(e.target.value)) || \n            ((e.target.name === 'userName') && e.target.value.toLowerCase()) ||\n            e.target.value\n        );\n\n        setAuthInput({ \n            ...authInput, \n            [e.target.name] : inputValue\n        })\n    };\n\n    const inputSettings = [\n        {\n            type: \"text\",\n            name: \"userName\", \n            label: \"E-Mail\",\n            required: true\n        },{\n            type: \"password\",\n            name: \"password\", \n            label: \"password\",\n            required: true\n        }\n    ];\n    \n    return(\n        <div className=\"outter-block-log\">\n            <div className=\"inner-block-log\">\n                {inputErrorMessage && <div>{inputErrorMessage}</div>}\n                <h2>ADMIN LOGIN PAGE</h2>\n                <div className=\"form-container\">\n                    {\n                        inputSettings.map((inputSetting)=>\n                            <MuiInputField \n                                key={inputSetting.name} \n                                { ...inputSetting } \n                                onChange={ formInputChange } \n                                onKeyPress={ LoginSubmitKeyPress }/>\n                        )\n                    }\n                    <MuiButton \n                        label=\"LOGIN\"\n                        props={{\n                            color: \"black\",\n                            bgColor: \"#3f51b5\",\n                            boxShadow: \"2px 2px 23px rgba(0, 0, 0, 0.2) inset\",\n                            hColor: \"white\",\n                            hbgColor: \"#6495ED\"\n                        }}\n                        onClick={LoginSubmit} />\n                    <MuiButton\n                        label=\"LOGOUT\"\n                        props={{\n                            color: \"black\",\n                            bgColor: \"#cf142b\",\n                            boxShadow: \"2px 2px 23px rgba(0, 0, 0, 0.2) inset\",\n                            hColor: \"white\",\n                            hbgColor: \"#DC143C\"\n                        }}\n                        onClick={ ()=> dispatch(userLogout({history})) } />\n                </div>\n                {/* <span>Dont have a account? <Link to=\"/signup\"> click here</Link></span> */}\n            </div>\n        </div>\n    )\n}\n\nexport default AdminLogin;\n","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\AdminPages\\Admin.jsx",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\MenuBox\\index.jsx",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\Card\\styles.js",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\AdminPages\\AdminMenu.jsx",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\AdminPages\\AdminOrders.jsx",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\StaticDatas\\socialMedia.js",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\StaticDatas\\footerData.js",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\Forms\\SplitStripeForm.jsx",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\StaticDatas\\headerData.js",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\MUI\\index.jsx",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\MUI\\MuiTabs.jsx",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\Card\\ItemCard.jsx",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\AdminComponents\\OrderBlock.jsx",["247"],"import React from 'react';\nimport { MuiButton } from 'Components/MUI';\nimport moment from 'moment';\nimport axios from 'axios';\nimport './styles.scss';\n\nconst OrderBlock = ({ order, currentOrders, setCurrentOrders, index}) => {\n    const {\n        orderNumber,\n        orderTime,\n        ordId,\n        itemDetails,\n        buyerDetails,\n    } = order; \n\n    const handleOrderFullfill = (orderId) => {\n        const param = {\n            ordId: orderId,\n            fullFillStatus: true,\n            fullFillTime: moment().format('MMMM Do YYYY, h:mm:ss a'),\n        }\n        axios.put(process.env.REACT_APP_API_RESTAURANT_ORDER, param)\n            .then(res=> {\n                console.log(res.data)\n                if(res.data.update_status === \"fullfilled success\"){\n                    setCurrentOrders(currentOrders.filter(order => order.ordId !== ordId));\n                }\n            })\n            .catch(err=> console.log(err))\n    }\n    const OrderItemList = ({itemNumber, title, orderAmount}) => (\n        <div className=\"OrderItemListWrapper\">\n            <h3>{itemNumber}</h3>\n            <p>{title}</p>\n            <h3>X {orderAmount}</h3>\n        </div>\n    );\n\n    // const BuyerDetails = ({buyerDetails}) =>{\n    //     const {\n    //         address,\n    //         eMail,\n    //         name,\n    //         phoneNumber,\n    //     } = buyerDetails;\n    // }\n    return (\n        <div className=\"OrderBlock-wrapper\">\n            <h3>{index}, order-number: {orderNumber}</h3>\n            <span>order time: {orderTime}</span>\n            {  itemDetails?.map((item, index) => {\n               return <OrderItemList key={`orderItem-${index}`} {...item}/>\n            })}\n            <MuiButton \n                props={{\n                    color: '#717171',\n                    bgColor: '#a2e6fd',\n                    hColor: \"white\",\n                    hbgColor: \"#287d9a\",\n                    margin: \"auto 0 0 0\",\n                }}\n                label='ORDER READY'\n                onClick={()=> handleOrderFullfill(ordId)}\n                onKeyPress={()=> handleOrderFullfill(ordId)}\n            />\n        </div>\n    );\n};\n\nexport default OrderBlock;","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\AdminComponents\\MenuBlock.jsx",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\Card\\ItemDetails.jsx",["248"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { orderDetailState, setCart, setCartUpdate } from 'States/orderSlice';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { MuiButton, MuiNumberInput } from 'Components/MUI';\nimport './styles.scss';\n\n\nconst ItemDetails = ({itemDetails, handleClose}) => {\n    const dispatch = useDispatch();\n    const cartOrderList = useSelector(orderDetailState);\n    const {\n        imgSrc,\n        itemNumber,\n        title,\n        description,\n        price,\n    } = itemDetails;\n    const [currentOrderAmount, setCurrentOrderAmount] = useState(\"1\")\n\n    useEffect(()=>{\n        const findDetailHistory = cartOrderList.find(itm => itm.itemNumber === itemDetails.itemNumber);\n        findDetailHistory && setCurrentOrderAmount(findDetailHistory.orderAmount);\n    },[]);\n\n    const handleAddItemToCart = async() => {\n        const findDetailHistory = cartOrderList.find(itm => itm.itemNumber === itemNumber);\n\n        findDetailHistory\n            ? dispatch(setCartUpdate({...itemDetails, orderAmount: currentOrderAmount}))\n            : dispatch(setCart(cartOrderList.concat({...itemDetails, orderAmount: currentOrderAmount})));\n            handleClose();\n    };\n\n    return (\n        <div className=\"Item-Details-Wrapper\">\n            <div className=\"Item-Details-Close\">\n                <FontAwesomeIcon onClick={handleClose} icon={faTimes} style={{margin: '1rem', cursor: 'pointer'}} className=\"fa-2x\"/>\n            </div>\n            <div>\n                <div className=\"Item-Card-Img-block\">\n                    <span>{itemNumber}</span>\n                    <img src={imgSrc} alt={title}/>\n                </div>\n            </div>\n            <div className=\"Item-Details-Text\">\n                <h2>{title}</h2>\n                <p>{description}</p>\n                <span>${price}</span>\n                <MuiNumberInput \n                    min=\"1\"\n                    max=\"50\"\n                    currentNumber={currentOrderAmount}\n                    setCurrentNumber={setCurrentOrderAmount}\n                />\n                <MuiButton \n                    props={{\n                        color: '#717171',\n                        bgColor: '#a2e6fd',\n                        hColor: \"white\",\n                        hbgColor: \"#287d9a\"\n                    }}\n                    label='ADD TO CART'\n                    onClick={handleAddItemToCart}\n                    onKeyPress={handleAddItemToCart}/>\n            </div>\n        </div>\n    );\n};\n\nexport default ItemDetails;","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\Card\\ItemCardList.jsx",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\Forms\\AddMenuItem.jsx",["249"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { menuListState, setAddNewMenuCategory } from 'States/menuSlice';\nimport { MuiButton, MuiInputField } from 'Components/MUI';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport ImageUpload from '../ImageUpload/ImageUpload';\nimport Modal from '@material-ui/core/Modal';\nimport './styles.scss';\n\nconst initItemState = {\n    imgSrc: '',\n    itemNumber: '',\n    title: '',\n    description: '',\n    price: '',\n}\n\nconst AddMenuItem = ({thisCategory, open, handleToggle}) => {\n    const dispatch = useDispatch();\n    const  menuState= useSelector(menuListState);\n    const [formInputs, setFormInputs] = useState({...initItemState});\n    const [imageURL, setImageURL] = useState('');\n    const [inputError, setInputError] = useState(false);\n    const [toggleUploadImg, setToggleUploadImg] = useState(true);\n    useEffect(()=>{\n        if(imageURL){\n            setFormInputs({\n                ...formInputs,\n                imgSrc: imageURL\n            })\n        }\n    },[imageURL])\n\n    const formInputChange = (e) => {\n        if(e.target.name === 'itemNumber'){\n            setInputError(false)\n            setFormInputs({ \n                ...formInputs,\n                [e.target.name] :  e.target.value.toUpperCase()\n            })\n        } else {\n            setInputError(false)\n            setFormInputs({ \n                ...formInputs,\n                [e.target.name] :  e.target.value\n            })\n        }\n    };\n\n    const handleSubmitEdit = () => {\n        const checkItemNumberExist = formInputs?.itemNumber && (thisCategory.menuList.find(item => item.itemNumber === formInputs?.itemNumber) !== undefined);\n        if(!checkItemNumberExist){\n            const fullMenu = menuState.map((category)=>\n                (category.title === thisCategory.title)\n                    ?  {\n                        ...category,\n                        menuList: category.menuList.concat([formInputs])\n                    }\n                    : category\n            );\n            // console.log('formInputs-->: ', formInputs)\n            dispatch(setAddNewMenuCategory(fullMenu));\n            setFormInputs({});\n            setImageURL('');\n            handleToggle();\n        } else {\n            // console.log('item number already exist')\n            setInputError(true)\n        }\n\n    };\n\n    const inputSettings = [{\n        type: \"text\",\n        name: \"itemNumber\",\n        placeholder: \"itemNumber\",\n        ...inputError && {color: \"red\"}\n    },{\n        type: \"text\",\n        name: \"title\",\n        placeholder: \"title\",\n    },{\n        type: \"text\",\n        name: \"description\",\n        placeholder: \"description\",\n    },{\n        type: \"text\",\n        name: \"price\",\n        placeholder: \"price\",\n    }];\n\n    return(\n        <Modal\n            open={open}\n            onClose={handleToggle}\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\"\n            style={{\n                overflow: 'auto',\n                display: 'flex',\n                justifyContent: 'center',\n                alignContent: 'center',\n            }}>\n            <div className=\"AddMenuItem-Wrapper\">\n                <div className=\"inner-block\">\n                    <div className=\"form-container\" >\n                        <div className=\"Item-Details-Close\">\n                            <FontAwesomeIcon onClick={handleToggle} icon={faTimes} style={{margin: '1rem', cursor: 'pointer'}} className=\"fa-2x\"/>\n                        </div>\n                        <button onClick={()=> setToggleUploadImg(!toggleUploadImg)}>\n                            {toggleUploadImg ? \"upload image link\" : \"upload image\"}\n                        </button>\n                        { toggleUploadImg \n                            ? <ImageUpload setImageURL={setImageURL}/>\n                            : <MuiInputField\n                                bgColor=\"#fff\"\n                                type=\"text\"\n                                name=\"imgSrc\"\n                                label=\"image link\"\n                                onChange={(e)=> setImageURL(e.target.value)}/>}\n                        {inputError && <h2 style={{color: 'red'}}>This item number already exist</h2>}\n                            \n                        {\n                            inputSettings.map((inputSetting, index)=>\n                                <MuiInputField\n                                    key={`${index}-inputsetting`}\n                                    {...inputSetting}\n                                    bgColor=\"#fff\"\n                                    name={inputSetting.name}\n                                    label={inputSetting.placeholder}\n                                    onChange={ formInputChange }/>\n                            )\n                        }\n                        <MuiButton \n                            bgColor=\"#fff\"\n                            labelColor=\"#000\"\n                            label=\"ADD ITEM\"\n                            disabled={ inputError }\n                            onClick={ handleSubmitEdit }/>\n                    </div>\n                </div>\n            </div>\n        </Modal>\n    )\n};\n\nexport default AddMenuItem;","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\MUI\\MuiNumberInput.jsx",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\MUI\\MuiInputField.jsx",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\MUI\\MuiButton.jsx",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\MUI\\styles.js",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\ImageUpload\\ImageUpload.jsx",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\Forms\\ItemEdit.jsx",["250"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setUpdateMenu } from 'States/menuSlice';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { MuiButton, MuiInputField } from 'Components/MUI';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ImageUpload from '../ImageUpload/ImageUpload';\nimport './styles.scss';\n\nconst ItemEdit = ({itemDetails, handleClose}) => {\n    const {\n        imgSrc,\n        itemNumber,\n        title,\n        description,\n        price,\n    } = itemDetails;\n    const dispatch = useDispatch();\n    const [checked, setChecked] = useState(itemDetails.itemDisable ? itemDetails.itemDisable : false);\n    const [formInputs, setFormInputs] = useState({...itemDetails});\n    const [imageURL, setImageURL] = useState('');\n    const [inputError, setInputError] = useState(false)\n    const [toggleUploadImg, setToggleUploadImg] = useState(true)\n\n    useEffect(()=>{\n        if(imageURL){\n            setFormInputs({\n                ...formInputs,\n                imgSrc: imageURL\n            })\n        }\n    },[imageURL])\n    const formInputChange = (e) => {\n        if(e.target.name === 'points' && (/[^\\d]/g).test(e.target.value)){\n            setInputError(true)\n        } else if (e.target.name === 'itemDisable'){\n            setChecked(!checked);\n            setFormInputs({ \n                ...formInputs,\n                [e.target.name] : !checked\n            })\n        }else {\n            setInputError(false)\n            setFormInputs({ \n                ...formInputs,\n                [e.target.name] : e.target.name === 'points' ? parseInt(e.target.value) : e.target.value\n            })\n        }\n    };\n\n    const handleSubmitEdit = () => {\n        const fullUpdateMenu = (formInputs.itemDisable === undefined) ? {...formInputs, itemDisable: false} : formInputs;\n        dispatch(setUpdateMenu(fullUpdateMenu))\n        handleClose();\n    };\n\n    // input box setting\n    const inputSettings = [\n        {\n            type: \"text\",\n            name: \"title\", \n            defaultValue: title,\n            placeholder: \"title\"\n        },{\n            type: \"text\",\n            name: \"price\", \n            defaultValue: price,\n            placeholder: \"price\",\n            className: inputError ? 'inputError' : ''\n        },{\n            type: \"text\",\n            name: \"description\", \n            rows: 4,\n            defaultValue: description,\n            placeholder: \"item description\",\n            className: inputError ? 'inputError' : ''\n        }\n    ];\n\n    return (\n        <div className=\"ItemEdit-Wrapper\">\n            <div className=\"Item-Details-Edit-Wrapper\">\n                <div className=\"inner-block\">\n                    <div className=\"form-container\" >\n                        <button onClick={()=> setToggleUploadImg(!toggleUploadImg)}>\n                            {toggleUploadImg ? \"upload image link\" : \"upload image\"}\n                        </button>\n                        { toggleUploadImg \n                            ? <ImageUpload setImageURL={setImageURL}/>\n                            : <MuiInputField\n                                bgColor=\"#fff\"\n                                type=\"text\"\n                                name=\"imgSrc\"\n                                label=\"image link\"\n                                defaultValue={imgSrc}\n                                onChange={(e)=> setImageURL(e.target.value)}/>}\n                        <FormControlLabel\n                            control={\n                                <Checkbox \n                                    checked={checked} \n                                    onChange={formInputChange} \n                                    name=\"itemDisable\" />}\n                            label=\"Disable\"\n                        />\n                            \n                        {\n                            inputSettings.map((inputSetting, index)=>\n                                <MuiInputField\n                                    key={`${index}-inputsetting`}\n                                    {...inputSetting}\n                                    bgColor=\"#fff\"\n                                    name={inputSetting.name}\n                                    label={inputSetting.placeholder}\n                                    onChange={ formInputChange }/>\n                            )\n                        }\n                        <MuiButton \n                            bgColor=\"#fff\"\n                            labelColor=\"#000\"\n                            label=\"SUBMIT UPDATE\"\n                            onClick={ handleSubmitEdit }/>\n                    </div>\n                </div>\n            </div>\n            <div className=\"Item-Details-Edit-Wrapper\">\n                <div className=\"Item-Details-Close\">\n                    <FontAwesomeIcon onClick={handleClose} icon={faTimes} style={{margin: '1rem', cursor: 'pointer'}} className=\"fa-2x\"/>\n                </div>\n                <div>\n                    <div className=\"Item-Card-Img-block\">\n                        <span>{itemNumber}</span>\n                        <img src={imgSrc} alt={title}/>\n                    </div>\n                </div>\n                <div className=\"Item-Details-Text\">\n                    <h2>{title}</h2>\n                    <p>{description}</p>\n                    <span>${price}</span>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ItemEdit;","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\ImageUpload\\styles.js",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\Forms\\useResponsiveFontSize.js",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\Forms\\AddCategory.jsx",["251","252"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { menuListState, setAddNewMenuCategory } from 'States/menuSlice';\nimport { MuiButton, MuiInputField } from 'Components/MUI';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport ImageUpload from '../ImageUpload/ImageUpload';\nimport Modal from '@material-ui/core/Modal';\nimport './styles.scss';\n\nconst AddCategory = ({open, handleToggle}) => {\n    const dispatch = useDispatch();\n    const  menuState= useSelector(menuListState);\n    const [formInputs, setFormInputs] = useState({menuList: []});\n    const [imageURL, setImageURL] = useState('');\n    const [inputError, setInputError] = useState(false);\n    const [toggleUploadImg, setToggleUploadImg] = useState(true);\n    useEffect(()=>{\n        if(imageURL){\n            setFormInputs({\n                ...formInputs,\n                imgSrc: imageURL\n            })\n        }\n    },[imageURL])\n\n    const formInputChange = (e) => {\n        if(e.target.name === 'points' && (/[^\\d]/g).test(e.target.value)){\n            setInputError(true)\n        } else {\n            setInputError(false)\n            setFormInputs({ \n                ...formInputs,\n                [e.target.name] :  e.target.value\n            })\n        }\n    };\n\n    const handleSubmitEdit = () => {\n        dispatch(setAddNewMenuCategory([...menuState, formInputs]));\n        setFormInputs({});\n        setImageURL('');\n        handleToggle();\n    };\n\n    const inputSettings = [{\n            type: \"text\",\n            name: \"title\",\n            placeholder: \"title\"\n        },{\n            type: \"text\",\n            name: \"descriptions\",\n            placeholder: \"descriptions\"\n    }];\n\n\n    return(\n        <Modal\n            open={open}\n            onClose={handleToggle}\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\"\n            style={{\n                overflow: 'auto',\n                display: 'flex',\n                justifyContent: 'center',\n                alignContent: 'center',\n            }}>\n            <div className=\"AddMenuItem-Wrapper\">\n                <div className=\"inner-block\">\n                    <div className=\"form-container\" >\n                        <div className=\"Item-Details-Close\">\n                            <FontAwesomeIcon onClick={handleToggle} icon={faTimes} style={{margin: '1rem', cursor: 'pointer'}} className=\"fa-2x\"/>\n                        </div>\n                        <button onClick={()=> setToggleUploadImg(!toggleUploadImg)}>\n                            {toggleUploadImg ? \"upload image link\" : \"upload image\"}\n                        </button>\n                        { toggleUploadImg \n                            ? <ImageUpload setImageURL={setImageURL}/>\n                            : <MuiInputField\n                                bgColor=\"#fff\"\n                                type=\"text\"\n                                name=\"imgSrc\"\n                                label=\"image link\"\n                                onChange={(e)=> setImageURL(e.target.value)}/>}\n                            \n                        {\n                            inputSettings.map((inputSetting, index)=>\n                                <MuiInputField\n                                    key={`${index}-inputsetting`}\n                                    {...inputSetting}\n                                    bgColor=\"#fff\"\n                                    name={inputSetting.name}\n                                    label={inputSetting.placeholder}\n                                    onChange={ formInputChange }/>\n                            )\n                        }\n                        <MuiButton \n                            bgColor=\"#fff\"\n                            labelColor=\"#000\"\n                            label=\"ADD\"\n                            onClick={ handleSubmitEdit }/>\n                    </div>\n                </div>\n            </div>\n        </Modal>\n    )\n};\n\nexport default AddCategory;",{"ruleId":"253","replacedBy":"254"},{"ruleId":"255","replacedBy":"256"},{"ruleId":"257","severity":1,"message":"258","line":17,"column":5,"nodeType":"259","endLine":17,"endColumn":19,"suggestions":"260"},{"ruleId":"257","severity":1,"message":"258","line":20,"column":7,"nodeType":"259","endLine":20,"endColumn":9,"suggestions":"261"},{"ruleId":"262","severity":1,"message":"263","line":2,"column":8,"nodeType":"264","messageId":"265","endLine":2,"endColumn":13},{"ruleId":"262","severity":1,"message":"266","line":5,"column":5,"nodeType":"264","messageId":"265","endLine":5,"endColumn":25},{"ruleId":"262","severity":1,"message":"267","line":16,"column":7,"nodeType":"264","messageId":"265","endLine":16,"endColumn":24},{"ruleId":"268","severity":1,"message":"269","line":9,"column":21,"nodeType":"270","endLine":9,"endColumn":70},{"ruleId":"257","severity":1,"message":"271","line":22,"column":7,"nodeType":"259","endLine":22,"endColumn":9,"suggestions":"272"},{"ruleId":"262","severity":1,"message":"273","line":1,"column":38,"nodeType":"264","messageId":"265","endLine":1,"endColumn":49},{"ruleId":"262","severity":1,"message":"274","line":1,"column":51,"nodeType":"264","messageId":"265","endLine":1,"endColumn":58},{"ruleId":"275","severity":1,"message":"276","line":13,"column":15,"nodeType":"277","messageId":"278","endLine":13,"endColumn":17},{"ruleId":"262","severity":1,"message":"279","line":60,"column":13,"nodeType":"264","messageId":"265","endLine":60,"endColumn":24},{"ruleId":"280","severity":1,"message":"281","line":9,"column":13,"nodeType":"270","endLine":9,"endColumn":32},{"ruleId":"257","severity":1,"message":"282","line":18,"column":7,"nodeType":"259","endLine":18,"endColumn":19,"suggestions":"283"},{"ruleId":"262","severity":1,"message":"284","line":13,"column":9,"nodeType":"264","messageId":"265","endLine":13,"endColumn":21},{"ruleId":"257","severity":1,"message":"285","line":25,"column":7,"nodeType":"259","endLine":25,"endColumn":9,"suggestions":"286"},{"ruleId":"257","severity":1,"message":"287","line":33,"column":7,"nodeType":"259","endLine":33,"endColumn":17,"suggestions":"288"},{"ruleId":"257","severity":1,"message":"287","line":34,"column":7,"nodeType":"259","endLine":34,"endColumn":17,"suggestions":"289"},{"ruleId":"262","severity":1,"message":"290","line":16,"column":12,"nodeType":"264","messageId":"265","endLine":16,"endColumn":22},{"ruleId":"257","severity":1,"message":"287","line":25,"column":7,"nodeType":"259","endLine":25,"endColumn":17,"suggestions":"291"},"no-native-reassign",["292"],"no-negated-in-lhs",["293"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["294"],["295"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'CognitoUserAttribute' is defined but never used.","'ApiGateWayUserURL' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'websocket'. Either include it or remove the dependency array.",["296"],"'useCallback' is defined but never used.","'useMemo' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'itemDetails' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["297"],"'buyerDetails' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'cartOrderList' and 'itemDetails.itemNumber'. Either include them or remove the dependency array.",["298"],"React Hook useEffect has a missing dependency: 'formInputs'. Either include it or remove the dependency array. You can also do a functional update 'setFormInputs(f => ...)' if you only need 'formInputs' in the 'setFormInputs' call.",["299"],["300"],"'inputError' is assigned a value but never used.",["301"],"no-global-assign","no-unsafe-negation",{"desc":"302","fix":"303"},{"desc":"304","fix":"305"},{"desc":"306","fix":"307"},{"desc":"308","fix":"309"},{"desc":"310","fix":"311"},{"desc":"312","fix":"313"},{"desc":"312","fix":"314"},{"desc":"312","fix":"315"},"Update the dependencies array to be: [dispatch, userIsSignIn]",{"range":"316","text":"317"},"Update the dependencies array to be: [dispatch]",{"range":"318","text":"319"},"Update the dependencies array to be: [websocket]",{"range":"320","text":"321"},"Update the dependencies array to be: [history, userSignIn]",{"range":"322","text":"323"},"Update the dependencies array to be: [cartOrderList, itemDetails.itemNumber]",{"range":"324","text":"325"},"Update the dependencies array to be: [formInputs, imageURL]",{"range":"326","text":"327"},{"range":"328","text":"327"},{"range":"329","text":"327"},[487,501],"[dispatch, userIsSignIn]",[784,786],"[dispatch]",[864,866],"[websocket]",[668,680],"[history, userSignIn]",[950,952],"[cartOrderList, itemDetails.itemNumber]",[1161,1171],"[formInputs, imageURL]",[1243,1253],[1029,1039]]