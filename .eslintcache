[{"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\index.js":"1","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\App.js":"2","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\serviceWorker.js":"3","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Store\\store.js":"4","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\PageRouter\\UserStatusProvider.jsx":"5","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\PageRouter\\index.jsx":"6","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\States\\headerSlice.js":"7","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\States\\userSlice.js":"8","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Pages\\index.jsx":"9","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Pages\\Header.jsx":"10","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Pages\\Home.jsx":"11","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Pages\\styles.js":"12","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\ImageBlock\\ImgPreNextCarousel.jsx":"13","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Card\\CardItem.jsx":"14","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\MenuBox\\index.jsx":"15","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\ImageBlock\\styles.js":"16","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Card\\styles.js":"17","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Card\\ItemCard.jsx":"18","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Pages\\Footer.jsx":"19"},{"size":841,"mtime":1608053556333,"results":"20","hashOfConfig":"21"},{"size":274,"mtime":1608221330601,"results":"22","hashOfConfig":"21"},{"size":5227,"mtime":1608053646508,"results":"23","hashOfConfig":"21"},{"size":401,"mtime":1608054108419,"results":"24","hashOfConfig":"21"},{"size":395,"mtime":1608054051789,"results":"25","hashOfConfig":"21"},{"size":275,"mtime":1608053813701,"results":"26","hashOfConfig":"21"},{"size":1140,"mtime":1608053948816,"results":"27","hashOfConfig":"21"},{"size":8879,"mtime":1608053948827,"results":"28","hashOfConfig":"21"},{"size":157,"mtime":1608221426485,"results":"29","hashOfConfig":"21"},{"size":1105,"mtime":1608210785708,"results":"30","hashOfConfig":"21"},{"size":6708,"mtime":1608210909445,"results":"31","hashOfConfig":"21"},{"size":2218,"mtime":1608221234190,"results":"32","hashOfConfig":"21"},{"size":2186,"mtime":1608058575690,"results":"33","hashOfConfig":"21"},{"size":992,"mtime":1608209902775,"results":"34","hashOfConfig":"21"},{"size":1406,"mtime":1608217653328,"results":"35","hashOfConfig":"21"},{"size":1650,"mtime":1608060182712,"results":"36","hashOfConfig":"21"},{"size":2066,"mtime":1608211813905,"results":"37","hashOfConfig":"21"},{"size":2923,"mtime":1608219891939,"results":"38","hashOfConfig":"21"},{"size":1148,"mtime":1608224583605,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"8tjafe",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"42"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\index.js",[],["86","87"],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\App.js",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\serviceWorker.js",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Store\\store.js",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\PageRouter\\UserStatusProvider.jsx",["88"],"import React, { createContext, useEffect } from 'react';\r\n\r\nconst UserStatusCheck = createContext({});\r\n\r\nconst UserStatusProvider = ({ children }) => {\r\n\r\n  \r\n  \r\n  // console.log('UserStatusProvider-userIsSignIn--->', userIsSignIn)\r\n    return (\r\n        <UserStatusCheck.Provider >\r\n            {children}\r\n        </UserStatusCheck.Provider>\r\n    );\r\n};\r\n\r\nexport default UserStatusProvider;","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\PageRouter\\index.jsx",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\States\\headerSlice.js",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\States\\userSlice.js",["89"],"import { createSlice } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nimport {\r\n    CognitoUserPool,\r\n    CognitoUserAttribute,\r\n    CognitoUser,\r\n    AuthenticationDetails\r\n} from 'amazon-cognito-identity-js';\r\n\r\nconst poolData = {\r\n    UserPoolId: process.env.REACT_APP_USER_POOL,\r\n    ClientId: process.env.REACT_APP_CLIENT_ID\r\n};\r\n// const postURL = process.env.REACT_APP_API_GATEWAY_URL;\r\nconst userPool = new CognitoUserPool(poolData);\r\nconst ApiGateWayUserURL = process.env.REACT_APP_API_GATEWAY_USER;\r\nconst initState = {\r\n    picture: '',\r\n    preferredUsername: '',\r\n    familyName: '',\r\n    givenName: '',\r\n    currency: 'USD',\r\n    phoneNumber: '',\r\n    isAgent: false,\r\n    isLoggedIn: false,\r\n}\r\nexport const userSlice = createSlice({\r\n    name: 'userState',\r\n    initialState: initState,\r\n    reducers: {\r\n        setUserState: (state, action) => {\r\n            return {...state, ...action.payload};\r\n        },\r\n        setPicture: (state, action) => {\r\n            state.profilePicUrl = action.payload;\r\n        },\r\n        setPreferredUsername: (state, action) => {\r\n            state.preferred_username = action.payload;\r\n        },\r\n        setFamilyName: (state, action) => {\r\n            state.family_name = action.payload;\r\n        },\r\n        setGivenName: (state, action) => {\r\n            state.given_name = action.payload;\r\n        },\r\n        setCurrency: (state, action) => {\r\n            state.currency = action.payload;\r\n        },\r\n        setPhoneNumber: (state, action) => {\r\n            state.phoneNumber = action.payload;\r\n        },\r\n        setIsLoggedIn: (state, action) => {\r\n            state.isLoggedIn = action.payload;\r\n        },\r\n        setIsAgent: (state, action) => {\r\n            state.isAgent = action.payload;\r\n        },\r\n    },\r\n});\r\n\r\nexport const {\r\n    setUserState,\r\n    setPicture,\r\n    setPreferredUsername,\r\n    setFamilyName,\r\n    setGivenName,\r\n    setCurrency,\r\n    setPhoneNumber,\r\n    setIsLoggedIn,\r\n    setIsAgent,\r\n} = userSlice.actions;\r\n\r\n// AWS Cognito User Sign Up\r\nexport const userSignUp = ({\r\n    eMail, \r\n    phoneNumber, \r\n    password,\r\n    picture = null,\r\n    preferredUsername = null,\r\n    familyName = null,\r\n    givenName = null,\r\n    isAgent = null,\r\n    history\r\n}) => dispatch => {\r\n\r\n    const attributeList = [\r\n        new CognitoUserAttribute({Name: 'email', Value: eMail}),\r\n        new CognitoUserAttribute({Name: 'phone_number', Value: `+1${phoneNumber}`}),\r\n        new CognitoUserAttribute({Name: 'custom:isAgent', Value: isAgent }),\r\n        new CognitoUserAttribute({Name: 'picture', Value: picture }),\r\n        new CognitoUserAttribute({Name: 'preferred_username', Value: preferredUsername }),\r\n        new CognitoUserAttribute({Name: 'family_name', Value: familyName }),\r\n        new CognitoUserAttribute({Name: 'given_name', Value: givenName })\r\n    ];\r\n    // console.log('attributeList--->: ', attributeList)\r\n\r\n    userPool.signUp( eMail, password, attributeList, null, (err, result) => {\r\n        if (err) {\r\n            alert(('cognitoSlice' + err.message) || JSON.stringify('cognitoSlice' + err));\r\n            return;\r\n        } else {\r\n            var cognitoUser = result.user;\r\n            alert('user name is ' + cognitoUser.getUsername() + 'Please check your email for verification code');\r\n            history.push('/verify-account');\r\n\r\n             const params = {\r\n                subId: result.userSub,\r\n                eMail: eMail,\r\n                isAgent: isAgent,\r\n                picture: picture,\r\n                preferredUsername: preferredUsername,\r\n                familyName: familyName,\r\n                givenName: givenName,\r\n                phoneNumber: phoneNumber\r\n            }\r\n            \r\n            axios.post(ApiGateWayUserURL, params)\r\n                .then(res=> {\r\n                    console.log('signUp-res------------>: ', res);\r\n                })\r\n                .catch(error => console.log(error))\r\n        }\r\n    });\r\n};\r\n\r\n// AWS Cognito User Verification by Email\r\nexport const verificationAccount = (eMail, code, history) => dispatch => {\r\n    const userData = {\r\n        Username: eMail,\r\n        Pool: userPool,\r\n    };\r\n    const cognitoUser = new CognitoUser(userData);\r\n    cognitoUser.confirmRegistration(code, true, (err, result) => {\r\n        if (err) {\r\n            alert(err.message || JSON.stringify(err));\r\n            return;\r\n        } else {\r\n            alert('call result: ' + result);\r\n            history.push('/');\r\n            // trigger user data update for giving and recieving list card Id\r\n        }\r\n    })\r\n};\r\n\r\nexport const resendVerificationCode = (eMail) => dispatch => {\r\n    const userData = {\r\n        Username: eMail,\r\n        Pool: userPool,\r\n    };\r\n    const cognitoUser = new CognitoUser(userData);\r\n    cognitoUser.resendConfirmationCode(function(err, result) {\r\n        if (err) {\r\n            alert(err.message || JSON.stringify(err));\r\n            return;\r\n        }\r\n        alert(`your new code is send to: ${eMail}`)\r\n    });\r\n};\r\n\r\n// AWS Cognito Send Change Password Link\r\nexport const getForgotPassworCode= (eMail) => dispatch => {\r\n    const userData = {\r\n        Username: eMail,\r\n        Pool: userPool,\r\n    };\r\n    const cognitoUser = new CognitoUser(userData);\r\n\r\n    cognitoUser.forgotPassword({\r\n        onSuccess: (data) => {\r\n            // successfully initiated reset password request\r\n            console.log('CodeDeliveryData from forgotPassword: ' + data);\r\n        },\r\n        onFailure: (err) => {\r\n            alert(err.message || JSON.stringify(err));\r\n        },\r\n    });\r\n}\r\n\r\n// AWS Cognito Set New Password\r\nexport const setUpNewPassword = (eMail, code, newPassword) => dispatch => {\r\n    const userData = {\r\n        Username: eMail,\r\n        Pool: userPool,\r\n    };\r\n    const cognitoUser = new CognitoUser(userData);\r\n    cognitoUser.confirmPassword(code, newPassword, {\r\n        onSuccess() {\r\n            console.log('Password confirmed!');\r\n            alert('password successfully changed')\r\n        },\r\n        onFailure(err) {\r\n            console.log('Password not confirmed!');\r\n            alert('change password failed')\r\n        },\r\n    });\r\n}\r\n\r\n// AWS User Login\r\nexport const userLogin = ({eMail, password}) => dispatch => {\r\n    const authenticationData = {\r\n        Username: eMail,\r\n        Password: password,\r\n    };\r\n    const authenticationDetails = new AuthenticationDetails(\r\n        authenticationData\r\n    );\r\n\r\n    const userData = {\r\n        Username: eMail,\r\n        Pool: userPool,\r\n    };\r\n    const cognitoUser = new CognitoUser(userData);\r\n\r\n    cognitoUser.authenticateUser(authenticationDetails, {\r\n        onSuccess: (result) => {\r\n            axios.get(`${ApiGateWayUserURL}?subId=${result.idToken.payload.sub}`, {\r\n                headers: { 'Authorization' : result.idToken.jwtToken }\r\n            })\r\n                .then(res => {\r\n                    dispatch(setUserState(res.data));\r\n                    dispatch(setIsLoggedIn(true));\r\n                })\r\n                .catch(error => console.log('get user error: ', error))\r\n         },\r\n        onFailure: (err) => {\r\n            alert(err.message || JSON.stringify(err));\r\n        },\r\n    });\r\n};\r\n\r\n// AWS cognito Logout\r\nexport const userLogout = ({history}) => dispatch => {\r\n    if(userPool.getCurrentUser()){\r\n        // To Do: clear init data\r\n        userPool.getCurrentUser().signOut();\r\n        dispatch(setUserState(initState))\r\n        history.push('/');\r\n    };\r\n};\r\n\r\n// AWS Cognito Get User Data\r\nexport const userLoginCheck = () => dispatch => {\r\n    if (userPool.getCurrentUser() != null) {\r\n        userPool.getCurrentUser().getSession((err, session) => {\r\n            if(err){console.log('userPool.getCurrentUser() err---->', err)};\r\n\r\n            axios.get(`${ApiGateWayUserURL}?subId=${session?.idToken?.payload?.sub}`, {\r\n                headers: { 'Authorization' : session?.getIdToken()?.getJwtToken() }\r\n            })\r\n                .then(res => {\r\n                    dispatch(setUserState(res.data));\r\n                    dispatch(setIsLoggedIn(true));\r\n                })\r\n                .catch(error => console.log('get user error: ', error))\r\n          });\r\n    } \r\n};\r\n\r\n\r\n\r\nexport const userUserName = state => state?.userState?.preferredUsername || (`${state?.userState?.familyName} ${state?.userState?.givenName}`);\r\nexport const userProfileImage = state => state. userState.picture;\r\nexport const userCognitoState = state => state.userState;\r\nexport const userIsLoggedIn = state => state.userState.isLoggedIn;\r\nexport const userIsAgent = state => state.userState.isAgent;\r\nexport default userSlice.reducer;\r\n\r\n// https://www.youtube.com/watch?v=-qo5GFdN-Ck\r\n\r\n// Google\r\n// Google id: 215313791418-apetni40hv97o9g8cuafa0h7nhrvoooi.apps.googleusercontent.com\r\n// Google secret: xR4LA1FGWOrH_GwAIK8HSOP3\r\n","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Pages\\index.jsx",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Pages\\Header.jsx",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Pages\\Home.jsx",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Pages\\styles.js",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\ImageBlock\\ImgPreNextCarousel.jsx",["90","91"],"import React, { useState, useEffect } from 'react';\r\nimport { useStyles } from './styles';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { useSwipeable, Swipeable } from 'react-swipeable';\r\nimport { \r\n    faChevronRight,\r\n    faChevronLeft\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst ImgPreNextCarousel = ({imgSrc=[], selectedIndex, arrowEnabled=false}) => {\r\n    const classes = useStyles();\r\n    const [currentIndex, setCurrentIndex] = useState(0);\r\n    const [bgImgSrc, setBgImgSrc] = useState({\r\n        backgroundImage: `url(${imgSrc[currentIndex]})`,\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'center',\r\n        backgroundSize: 'cover'\r\n    })\r\n\r\n    useEffect(()=>{\r\n        setCurrentIndex(selectedIndex)\r\n    },[selectedIndex])\r\n    useEffect(()=>{\r\n        setBgImgSrc({\r\n            ...bgImgSrc,\r\n            backgroundImage: `url(${imgSrc[currentIndex]})`\r\n        })\r\n    },[currentIndex, imgSrc])\r\n    \r\n\r\n    const onClickNext = () => {\r\n        if(currentIndex === (imgSrc.length-1)){\r\n            setCurrentIndex(0)\r\n        } else {\r\n            setCurrentIndex(currentIndex + 1)\r\n        }\r\n    }\r\n\r\n    const onClickPrev = () => {\r\n        if(currentIndex === 0){\r\n            setCurrentIndex(imgSrc.length-1)\r\n        } else {\r\n            setCurrentIndex(currentIndex - 1)\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className={classes.carouselWrapper}>\r\n            {arrowEnabled && <div className={classes.prevBtn} onClick={onClickNext}>\r\n                <FontAwesomeIcon icon={faChevronLeft} className=\"fa-2x\"/>\r\n            </div>}\r\n            <div className={classes.ImgBKSnow}/>\r\n            <Swipeable \r\n                onSwipedLeft={ onClickNext } \r\n                onSwipedRight={ onClickPrev } \r\n                className={classes.imageBlock} \r\n                style={bgImgSrc}/>\r\n            {arrowEnabled && <div className={classes.nextBtn} onClick={onClickPrev}>\r\n                <FontAwesomeIcon icon={faChevronRight} className=\"fa-2x\"/>\r\n            </div>}\r\n            <div className={classes.ImgBKSnowBottom}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ImgPreNextCarousel;","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Card\\CardItem.jsx",["92","93"],"import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { CardItemStyle } from './styles';\r\n\r\nconst CardItem = ({cardStatus, index, setSelected}) => {\r\n    let history = useHistory();\r\n    const classes = CardItemStyle();\r\n        \r\n    return(\r\n        <ul className={classes.CardItem} onClick={()=> setSelected(index)}>\r\n            <li className={classes.CardTitleLi}>\r\n                {cardStatus.title}\r\n            </li>\r\n            <li className={classes.CardImgWrapper}>\r\n                <img\r\n                    className={classes.img} \r\n                    src={cardStatus.imgSrc}\r\n                    alt='card image' />\r\n            </li>\r\n            <li className={classes.CardTitleShowMenu}>\r\n                SHOW MENU\r\n                {/* <span>\r\n                    {cardStatus.descriptions}\r\n                </span> */}\r\n                {/* <button>SHOW MENU</button> */}\r\n            </li>\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default CardItem;","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\MenuBox\\index.jsx",["94"],"import React from 'react';\r\nimport ItemCard from 'Components/Card/ItemCard';\r\nimport './styles.scss';\r\n\r\nconst ItemCardS = ({\r\n    imgSrc,\r\n    itemNumber,\r\n    title,\r\n    description,\r\n    price,\r\n}) => {\r\n    return(\r\n        <div className=\"Item-Card-Wrapper\">\r\n            <div className=\"Item-Card-Img-block\">\r\n                <span>{itemNumber}</span>\r\n                <img src={imgSrc} alt={title}/>\r\n            </div>\r\n            <div className=\"Item-Card-Text\">\r\n                <h2>{title}</h2>\r\n                <p>{description}</p>\r\n                <span>${price}</span>\r\n                <button>Detail</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst MenuBox = ({title, descriptions, menuList}) => {\r\n    return(\r\n        <div className=\"Menu-Box-Wrapper\">\r\n            <div className=\"Menu-Box-title\">\r\n                <h1>{title}</h1>\r\n                <p>{descriptions}</p>\r\n            </div>\r\n            <div className=\"Menu-Box-Item-Wrapper\">\r\n                {menuList.map((item, index)=> <ItemCard key={`item-${index}`} {...item}/>)}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nMenuBox.defaultProps = {\r\n    titel: \"Title\",\r\n    description: \"Description\",\r\n    menuList: [{\r\n        imgSrc: 'abc.jpg',\r\n        itemNumber: '1',\r\n        title: 'item name',\r\n        description: 'item description',\r\n        price: 10.99\r\n    }]\r\n}\r\n\r\nexport default MenuBox;","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\ImageBlock\\styles.js",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Card\\styles.js",["95","96"],"import { createUseStyles } from 'react-jss'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { WrapText } from '@material-ui/icons';\r\n\r\nexport const CardItemStyle = createUseStyles({\r\n    CardItem: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        listStyle: 'none',\r\n        margin: '0px',\r\n        padding: '.5rem',\r\n        '& :hover': {\r\n            '& img': {\r\n                boxShadow: '0px 0px 7px 2px #69c8e6',\r\n            },\r\n        },\r\n    },\r\n    CardImgWrapper: {\r\n        height: '70%',\r\n        // '& :hover': {\r\n        //     boxShadow: '0px 0px 7px 2px #69c8e6',\r\n        // },\r\n    },\r\n    img: {\r\n        width: '100%',\r\n        borderRadius: '25%',\r\n    },\r\n    CardLocationLi: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        '& span:first-child': {\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            fontSize: '.75rem',\r\n        },\r\n        '& span:last-child': {\r\n            fontSize: '.75rem',\r\n        },\r\n    },\r\n    CardTitleLi: {\r\n        textAlign: 'center',\r\n        fontSize: '1.63rem',\r\n        fontWeight: '600',\r\n        margin: ' 0',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        cursor: 'pointer',\r\n        '& span': {\r\n            textAlign: 'center',\r\n            fontSize: '1rem',\r\n            fontFamily: 'Caveat, cursive',\r\n        },\r\n    },\r\n    CardBtnWrapper: {\r\n        margin: '8px 0',\r\n    },\r\n    CardByLi: {\r\n        fontSize: '.75rem',\r\n        fontWeight: '600',\r\n        display: 'flex',\r\n        justifyContent: 'flex-end'\r\n    },\r\n    CardTitleShowMenu: {\r\n        fontSize: '.75rem',\r\n    },\r\n    '@media only screen and (max-width: 960px) and (min-width: 600px)': {\r\n        CardTitleLi: {\r\n            fontSize: '18px',\r\n        },\r\n    },\r\n    '@media only screen and (max-width: 599px)': {\r\n        CardItem: {\r\n            padding: '.2rem',\r\n        },\r\n        CardTitleLi: {\r\n            fontSize: '.75rem',\r\n        },\r\n    },\r\n});\r\n\r\n        ","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Card\\ItemCard.jsx",["97","98"],"import React from 'react';\r\nimport './styles.scss';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst rand = () => {\r\n  return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nconst getModalStyle = () => {\r\n  const top = 50 + rand();\r\n  const left = 50 + rand();\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nconst ItemCard = ({\r\n    imgSrc,\r\n    itemNumber,\r\n    title,\r\n    description,\r\n    price,\r\n}) => {\r\n\r\n    const classes = useStyles();\r\n    // getModalStyle is not a pure function, we roll the style only on the first render\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    const [open, setOpen] = React.useState(false);\r\n  \r\n    const handleOpen = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n\r\n    const ItemDetails = () => {\r\n        return (\r\n            <div className=\"Item-Details-Wrapper\">\r\n                <div className=\"Item-Details-Close\">\r\n                    <FontAwesomeIcon onClick={handleClose} icon={faTimes} style={{margin: '1rem', cursor: 'pointer'}} className=\"fa-2x\"/>\r\n                </div>\r\n                <div>\r\n                    <div className=\"Item-Card-Img-block\">\r\n                        <span>{itemNumber}</span>\r\n                        <img src={imgSrc} alt={title}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"Item-Details-Text\">\r\n                    <h2>{title}</h2>\r\n                    <p>{description}</p>\r\n                    <span>${price}</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return(\r\n        <div className=\"Item-Card-Wrapper\">\r\n            <div className=\"Item-Card-Img-block\">\r\n                <span>{itemNumber}</span>\r\n                <img src={imgSrc} alt={title}/>\r\n            </div>\r\n            <div className=\"Item-Card-Text\">\r\n                <h2>{title}</h2>\r\n                {/* <p>{description}</p> */}\r\n                <span>${price}</span>\r\n                <button type=\"button\" onClick={handleOpen}>Detail</button>\r\n            </div>\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n            >\r\n                <ItemDetails />\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ItemCard;","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Pages\\Footer.jsx",["99"],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":1,"column":32,"nodeType":"106","messageId":"107","endLine":1,"endColumn":41},{"ruleId":"108","severity":1,"message":"109","line":262,"column":42,"nodeType":"110","messageId":"111","endLine":262,"endColumn":58,"fix":"112"},{"ruleId":"104","severity":1,"message":"113","line":4,"column":10,"nodeType":"106","messageId":"107","endLine":4,"endColumn":22},{"ruleId":"114","severity":1,"message":"115","line":28,"column":7,"nodeType":"116","endLine":28,"endColumn":29,"suggestions":"117"},{"ruleId":"104","severity":1,"message":"118","line":6,"column":9,"nodeType":"106","messageId":"107","endLine":6,"endColumn":16},{"ruleId":"119","severity":1,"message":"120","line":15,"column":17,"nodeType":"121","endLine":18,"endColumn":40},{"ruleId":"104","severity":1,"message":"122","line":5,"column":7,"nodeType":"106","messageId":"107","endLine":5,"endColumn":16},{"ruleId":"104","severity":1,"message":"123","line":2,"column":10,"nodeType":"106","messageId":"107","endLine":2,"endColumn":20},{"ruleId":"104","severity":1,"message":"124","line":3,"column":10,"nodeType":"106","messageId":"107","endLine":3,"endColumn":18},{"ruleId":"104","severity":1,"message":"125","line":42,"column":11,"nodeType":"106","messageId":"107","endLine":42,"endColumn":18},{"ruleId":"104","severity":1,"message":"126","line":44,"column":12,"nodeType":"106","messageId":"107","endLine":44,"endColumn":22},{"ruleId":"127","severity":1,"message":"128","line":25,"column":1,"nodeType":"129","messageId":"130","endLine":25,"endColumn":67},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-whitespace-before-property","Unexpected whitespace before property userState.","MemberExpression","unexpectedWhitespace",{"range":"133","text":"134"},"'useSwipeable' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'bgImgSrc'. Either include it or remove the dependency array. You can also do a functional update 'setBgImgSrc(b => ...)' if you only need 'bgImgSrc' in the 'setBgImgSrc' call.","ArrayExpression",["135"],"'history' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'ItemCardS' is assigned a value but never used.","'makeStyles' is defined but never used.","'WrapText' is defined but never used.","'classes' is assigned a value but never used.","'modalStyle' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-global-assign","no-unsafe-negation",[8438,8440],".",{"desc":"136","fix":"137"},"Update the dependencies array to be: [bgImgSrc, currentIndex, imgSrc]",{"range":"138","text":"139"},[953,975],"[bgImgSrc, currentIndex, imgSrc]"]