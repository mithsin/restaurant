[{"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\index.js":"1","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\serviceWorker.js":"2","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\App.js":"3","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Store\\store.js":"4","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\PageRouter\\UserStatusProvider.jsx":"5","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Providers\\StateWrapper.jsx":"6","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\States\\menuSlice.js":"7","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\States\\orderSlice.js":"8","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\States\\userSlice.js":"9","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\States\\headerSlice.js":"10","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Pages\\index.jsx":"11","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\PageRouter\\index.jsx":"12","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Pages\\Home.jsx":"13","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\PageRouter\\PrivateRoute.jsx":"14","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Pages\\Header.jsx":"15","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Pages\\Footer.jsx":"16","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Pages\\NotExist.jsx":"17","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Pages\\PhotoGallery.jsx":"18","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Pages\\styles.js":"19","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\AdminPages\\index.jsx":"20","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\OrderProcess\\index.jsx":"21","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\ImageBlock\\ReactResponsiveCarousel.jsx":"22","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Card\\CardItem.jsx":"23","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\OrderProcess\\OrderReceipt.jsx":"24","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\OrderProcess\\Cart.jsx":"25","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\StaticDatas\\index.js":"26","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\MenuBox\\index.jsx":"27","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\AdminPages\\AdminLogin.jsx":"28","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\AdminPages\\Admin.jsx":"29","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Card\\styles.js":"30","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\AdminPages\\AdminMenu.jsx":"31","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\AdminPages\\AdminOrders.jsx":"32","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\StaticDatas\\footerData.js":"33","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\StaticDatas\\socialMedia.js":"34","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\StaticDatas\\headerData.js":"35","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Forms\\SplitStripeForm.jsx":"36","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Card\\ItemCard.jsx":"37","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\MUI\\MuiTabs.jsx":"38","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\MUI\\index.jsx":"39","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\MUI\\MuiNumberInput.jsx":"40","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\MUI\\MuiInputField.jsx":"41","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\MUI\\MuiButton.jsx":"42","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Forms\\AddCategory.jsx":"43","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\AdminComponents\\MenuBlock.jsx":"44","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\AdminComponents\\OrderBlock.jsx":"45","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\MUI\\styles.js":"46","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Card\\ItemDetails.jsx":"47","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\ImageUpload\\ImageUpload.jsx":"48","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\ImageUpload\\styles.js":"49","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Card\\ItemCardList.jsx":"50","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Forms\\AddMenuItem.jsx":"51","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Forms\\ItemEdit.jsx":"52","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Forms\\useResponsiveFontSize.js":"53"},{"size":841,"mtime":1608053556333,"results":"54","hashOfConfig":"55"},{"size":5227,"mtime":1608053646508,"results":"56","hashOfConfig":"55"},{"size":389,"mtime":1609761940340,"results":"57","hashOfConfig":"55"},{"size":561,"mtime":1609761940359,"results":"58","hashOfConfig":"55"},{"size":704,"mtime":1610109149514,"results":"59","hashOfConfig":"55"},{"size":1042,"mtime":1610395241870,"results":"60","hashOfConfig":"55"},{"size":2059,"mtime":1609974322205,"results":"61","hashOfConfig":"55"},{"size":2655,"mtime":1610562840931,"results":"62","hashOfConfig":"55"},{"size":3033,"mtime":1610115904439,"results":"63","hashOfConfig":"55"},{"size":1140,"mtime":1608053948816,"results":"64","hashOfConfig":"55"},{"size":277,"mtime":1609872922676,"results":"65","hashOfConfig":"55"},{"size":932,"mtime":1610541063868,"results":"66","hashOfConfig":"55"},{"size":2137,"mtime":1610115754588,"results":"67","hashOfConfig":"55"},{"size":510,"mtime":1609761940350,"results":"68","hashOfConfig":"55"},{"size":927,"mtime":1610393779876,"results":"69","hashOfConfig":"55"},{"size":819,"mtime":1609761940352,"results":"70","hashOfConfig":"55"},{"size":375,"mtime":1609761974153,"results":"71","hashOfConfig":"55"},{"size":434,"mtime":1609869976657,"results":"72","hashOfConfig":"55"},{"size":2786,"mtime":1610457504705,"results":"73","hashOfConfig":"55"},{"size":122,"mtime":1609872819173,"results":"74","hashOfConfig":"55"},{"size":104,"mtime":1610541032646,"results":"75","hashOfConfig":"55"},{"size":1281,"mtime":1609867128980,"results":"76","hashOfConfig":"55"},{"size":749,"mtime":1610115229918,"results":"77","hashOfConfig":"55"},{"size":1628,"mtime":1610565063322,"results":"78","hashOfConfig":"55"},{"size":6099,"mtime":1610564098062,"results":"79","hashOfConfig":"55"},{"size":6958,"mtime":1609869942535,"results":"80","hashOfConfig":"55"},{"size":858,"mtime":1610033787023,"results":"81","hashOfConfig":"55"},{"size":4014,"mtime":1609872652459,"results":"82","hashOfConfig":"55"},{"size":2280,"mtime":1610391755790,"results":"83","hashOfConfig":"55"},{"size":2041,"mtime":1610393270244,"results":"84","hashOfConfig":"55"},{"size":1556,"mtime":1610115095714,"results":"85","hashOfConfig":"55"},{"size":1941,"mtime":1610561768812,"results":"86","hashOfConfig":"55"},{"size":53,"mtime":1609761940357,"results":"87","hashOfConfig":"55"},{"size":365,"mtime":1609761940358,"results":"88","hashOfConfig":"55"},{"size":476,"mtime":1610394129922,"results":"89","hashOfConfig":"55"},{"size":4366,"mtime":1610564006903,"results":"90","hashOfConfig":"55"},{"size":2647,"mtime":1610570343791,"results":"91","hashOfConfig":"55"},{"size":1915,"mtime":1610052106289,"results":"92","hashOfConfig":"55"},{"size":183,"mtime":1609761940346,"results":"93","hashOfConfig":"55"},{"size":1798,"mtime":1609761940345,"results":"94","hashOfConfig":"55"},{"size":869,"mtime":1610113923081,"results":"95","hashOfConfig":"55"},{"size":640,"mtime":1610540697160,"results":"96","hashOfConfig":"55"},{"size":4255,"mtime":1610115535834,"results":"97","hashOfConfig":"55"},{"size":1425,"mtime":1610115119384,"results":"98","hashOfConfig":"55"},{"size":2327,"mtime":1610561340459,"results":"99","hashOfConfig":"55"},{"size":1078,"mtime":1609882117699,"results":"100","hashOfConfig":"55"},{"size":2762,"mtime":1610568921630,"results":"101","hashOfConfig":"55"},{"size":1663,"mtime":1608057515894,"results":"102","hashOfConfig":"55"},{"size":448,"mtime":1609972514599,"results":"103","hashOfConfig":"55"},{"size":1768,"mtime":1610115289677,"results":"104","hashOfConfig":"55"},{"size":5562,"mtime":1610114711152,"results":"105","hashOfConfig":"55"},{"size":5792,"mtime":1610050739525,"results":"106","hashOfConfig":"55"},{"size":496,"mtime":1610395685247,"results":"107","hashOfConfig":"55"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"8tjafe",{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"110"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"110"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"110"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"110"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"110"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"110"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"110"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"110"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"110"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"110"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"110"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"110"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"110"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\index.js",[],["228","229"],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\serviceWorker.js",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\App.js",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Store\\store.js",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\PageRouter\\UserStatusProvider.jsx",["230"],"import React, { createContext, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  userIsLoggedIn,\r\n  userLoginCheck\r\n} from 'States/userSlice';\r\n\r\nconst UserStatusCheck = createContext({});\r\n\r\nconst UserStatusProvider = ({ children }) => {\r\n  const dispatch = useDispatch();\r\n  const userIsSignIn = useSelector(userIsLoggedIn)\r\n\r\n  // check user status and make up date if necessary.\r\n  useEffect(()=>{\r\n    !userIsSignIn && dispatch(userLoginCheck());\r\n  },[userIsSignIn])\r\n  \r\n    return (\r\n        <UserStatusCheck.Provider value={userIsSignIn}>\r\n            {children}\r\n        </UserStatusCheck.Provider>\r\n    );\r\n};\r\n\r\nexport default UserStatusProvider;","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Providers\\StateWrapper.jsx",["231"],"import React, { useEffect } from 'react';\r\nimport { setMenu } from 'States/menuSlice';\r\nimport { useDispatch } from 'react-redux';\r\nimport axios from 'axios';\r\nimport {Elements} from '@stripe/react-stripe-js';\r\nimport {loadStripe} from '@stripe/stripe-js';\r\nimport \"./styles.scss\";\r\n\r\nconst StateWrapper = ({children}) => {\r\n    const dispatch = useDispatch();\r\n    const stripePromise = loadStripe(\"pk_test_51I8WMcEFoepYxM6pCNMtpNb0Tvh8pTLqzYMNrocMJoqBjSQ4Eo5ls4lplxrmSLTGWydlBrAkJp0a9Zgr6tKK8jTw00fquGZFlE\");\r\n\r\n    // const currentMenuState = useSelector(menuListState)\r\n    useEffect(()=>{\r\n        axios.get(process.env.REACT_APP_API_RESTAURANT_MENU)\r\n            .then(res => {\r\n                dispatch(setMenu(res.data.menu));\r\n            })\r\n            .catch(err => console.log(err))\r\n    },[])\r\n    return(\r\n        <Elements stripe={stripePromise}>\r\n            <div id=\"state-wrapper\" className=\"StateWrapperBody\">\r\n                {children}\r\n            </div>\r\n        </Elements>\r\n    );\r\n};\r\n\r\nexport default StateWrapper;","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\States\\menuSlice.js",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\States\\orderSlice.js",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\States\\userSlice.js",["232","233","234"],"import { createSlice } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nimport {\r\n    CognitoUserPool,\r\n    CognitoUserAttribute,\r\n    CognitoUser,\r\n    AuthenticationDetails\r\n} from 'amazon-cognito-identity-js';\r\n\r\nconst poolData = {\r\n    UserPoolId: process.env.REACT_APP_USER_POOL,\r\n    ClientId: process.env.REACT_APP_CLIENT_ID\r\n};\r\n// const postURL = process.env.REACT_APP_API_GATEWAY_URL;\r\nconst userPool = new CognitoUserPool(poolData);\r\nconst ApiGateWayUserURL = process.env.REACT_APP_API_GATEWAY_URL;\r\nconst initState = {\r\n    isLoggedIn: false,\r\n}\r\nexport const userSlice = createSlice({\r\n    name: 'userState',\r\n    initialState: initState,\r\n    reducers: {\r\n        setUserState: (state, action) => {\r\n            return {...state, ...action.payload};\r\n        },\r\n        setIsLoggedIn: (state, action) => {\r\n            state.isLoggedIn = action.payload;\r\n        },\r\n    },\r\n});\r\n\r\nexport const {\r\n    setUserState,\r\n    setIsLoggedIn,\r\n} = userSlice.actions;\r\n\r\n// AWS User Login\r\nexport const userLogin = ({userName, password, history}) => dispatch => {\r\n    const authenticationData = {\r\n        Username: userName,\r\n        Password: password,\r\n    };\r\n    const authenticationDetails = new AuthenticationDetails(\r\n        authenticationData\r\n    );\r\n\r\n    const userData = {\r\n        Username: userName,\r\n        Pool: userPool,\r\n    };\r\n    const cognitoUser = new CognitoUser(userData);\r\n\r\n    cognitoUser.authenticateUser(authenticationDetails, {\r\n        onSuccess: (result) => {\r\n            dispatch(setIsLoggedIn(true));\r\n            history.push('/admin');\r\n         },\r\n        onFailure: (err) => {\r\n            alert(err.message || JSON.stringify(err));\r\n        },\r\n    });\r\n};\r\n\r\n// AWS cognito Logout\r\nexport const userLogout = ({history}) => dispatch => {\r\n    if(userPool.getCurrentUser()){\r\n        // To Do: clear init data\r\n        userPool.getCurrentUser().signOut();\r\n        dispatch(setUserState(initState))\r\n        history.push('/');\r\n    };\r\n};\r\n\r\n// AWS Cognito Get User Data\r\nexport const userLoginCheck = () => dispatch => {\r\n    if (userPool.getCurrentUser() != null) {\r\n        userPool.getCurrentUser().getSession((err, session) => {\r\n            if(err){console.log('userPool.getCurrentUser() err---->', err)};\r\n                dispatch(setIsLoggedIn(true));\r\n            // axios.get(`${ApiGateWayUserURL}?subId=${session?.idToken?.payload?.sub}`, {\r\n            //     headers: { 'Authorization' : session?.getIdToken()?.getJwtToken() }\r\n            // })\r\n            //     .then(res => {\r\n            //         console.log('userLoginCheck-trigger--->: ', res.data)\r\n            //         dispatch(setUserState(res.data));\r\n            //         dispatch(setIsLoggedIn(true));\r\n            //     })\r\n            //     .catch(error => console.log('get user error: ', error))\r\n          });\r\n    } \r\n};\r\n\r\nexport const userCognitoState = state => state.userState;\r\nexport const userIsLoggedIn = state => state.userState.isLoggedIn;\r\nexport default userSlice.reducer;\r\n","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\States\\headerSlice.js",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Pages\\index.jsx",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\PageRouter\\index.jsx",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Pages\\Home.jsx",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\PageRouter\\PrivateRoute.jsx",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Pages\\Header.jsx",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Pages\\Footer.jsx",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Pages\\NotExist.jsx",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Pages\\PhotoGallery.jsx",["235"],"import React from 'react';\r\nimport { photoGallery } from 'StaticDatas';\r\n\r\nconst PhotoGallery = () => {\r\n    return(\r\n        <ul className=\"PhotoGallery-wrapper\">\r\n            {photoGallery.map((image, index)=> \r\n                <li key={`image-${index}-gallery`}>\r\n                    <img src={image} alt={`image-${index}-gallery`}/>\r\n                </li>\r\n            )}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default PhotoGallery;","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Pages\\styles.js",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\AdminPages\\index.jsx",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\OrderProcess\\index.jsx",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\ImageBlock\\ReactResponsiveCarousel.jsx",["236"],"import React from 'react';\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport { Carousel } from 'react-responsive-carousel';\r\n\r\nconst ReactResponsiveCarousel = ({imgList}) => {\r\n\r\n    const createCarouselItemImage = (image, index, options = {}) => (\r\n        <div key={`ReactResponsiveCarousel-${index}`}>\r\n            <img src={image} />\r\n        </div>\r\n    );\r\n    \r\n    const baseChildren = <div>{imgList.map(createCarouselItemImage)}</div>;\r\n\r\n    const getConfigurableProps  = {\r\n        showArrows:  true,\r\n        showStatus:  true,\r\n        showIndicators:  false,\r\n        infiniteLoop:  true,\r\n        showThumbs:  false,\r\n        useKeyboardArrows:  true,\r\n        autoPlay:  true,\r\n        stopOnHover:  true,\r\n        swipeable:  true,\r\n        dynamicHeight:  true,\r\n        emulateTouch:  true,\r\n        thumbWidth:  100, \r\n        selectedItem:  0, \r\n        interval:  3000, \r\n        transitionTime:  150, \r\n        swipeScrollTolerance:  5,\r\n        centerSlidePercentage: 80,\r\n    };\r\n\r\n    return (\r\n        <Carousel \r\n            infiniteLoop\r\n            centerMode\r\n            {...getConfigurableProps}\r\n        >\r\n            {baseChildren.props.children}\r\n        </Carousel>\r\n    );\r\n};\r\n\r\nexport default ReactResponsiveCarousel;","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Card\\CardItem.jsx",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\OrderProcess\\OrderReceipt.jsx",["237"],"import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setClearOrderList } from 'States/orderSlice';\r\nimport { MuiButton } from 'Components/MUI';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './styles.scss'; \r\n\r\nconst OrderReceipt = () => {\r\n    let history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const wsUri = process.env.REACT_APP_API_WEBSOCKETS;\r\n    const websocket = new WebSocket(wsUri);\r\n    \r\n    // triiger websocket to send order on load, and disable button until websocket successfully update the order\r\n    useEffect(()=>{\r\n        websocket.onopen = (event) => {\r\n            const sendMessage = {\r\n                message : \"New order available\", \r\n                action : \"message\"\r\n            }\r\n            dispatch(setClearOrderList());\r\n            websocket.send(JSON.stringify(sendMessage));\r\n        }\r\n    },[])\r\n\r\n    const handleOnClick = () => {\r\n        websocket.close();\r\n        history.push('/')\r\n    };\r\n\r\n    return(\r\n        <div className=\"OrderReceipt-wrapper\">\r\n            <h2>Order Receipt</h2>\r\n            <div>\r\n                THANK YOU AND YOUR ORDER WILL BE READY SOON\r\n            </div>\r\n            <MuiButton \r\n                props={{\r\n                    color: '#717171',\r\n                    bgColor: '#a2e6fd',\r\n                    hColor: \"white\",\r\n                    hbgColor: \"#287d9a\"\r\n                }}\r\n                label='CLOSE'\r\n                onClick={handleOnClick}\r\n                onKeyPress={handleOnClick}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OrderReceipt;","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\OrderProcess\\Cart.jsx",["238"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { orderDetailState, setCartUpdate, setDeleteItem } from 'States/orderSlice';\r\nimport { AddCircle, RemoveCircle } from '@material-ui/icons';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { FormControl } from '@material-ui/core';\r\nimport SplitStripeForm from 'Components/Forms/SplitStripeForm';\r\nimport './styles.scss';\r\n\r\nconst Cart = ({}) => { \r\n    const [totalAmount, setTotalAmount] = useState(0)\r\n    const [buyerDetails, setBuyerDetails] = useState({})\r\n    const [disableCheckout, setDisableCheckout] = useState(true)\r\n    const [haveError, setHaveError] = useState('')\r\n    const cartOrderList = useSelector(orderDetailState);\r\n    useEffect(()=>{\r\n        cartOrderList && \r\n        setTotalAmount(cartOrderList.reduce((accumulator, current) => {\r\n            return (accumulator + (parseInt(current.orderAmount) * current.price))\r\n        }, 0));\r\n    },[cartOrderList])\r\n    useEffect(()=>{\r\n        if(!buyerDetails.name || !buyerDetails.phoneNumber){ setDisableCheckout(true)} \r\n        if(buyerDetails.name && buyerDetails.phoneNumber) {setDisableCheckout(false)}\r\n    },[buyerDetails])\r\n    \r\n    const dollarAndTax = (a) => {return parseInt((a * 1.07 * 100).toFixed(2))};\r\n    const buyerInputChange = (event) => {\r\n        event.preventDefault();\r\n        setBuyerDetails({...buyerDetails, [event.target.name]: event.target.value})\r\n    }\r\n\r\n    const CartItemList = ({ cartItemDetail }) => {\r\n        const {\r\n            imgSrc,\r\n            itemNumber,\r\n            title,\r\n            price,\r\n            orderAmount,\r\n        } = cartItemDetail;\r\n        const dispatch = useDispatch();\r\n        const [currentOrderAmount, setCurrentOrderAmount] = useState(orderAmount)\r\n        const updatePrice = (parseInt(orderAmount) * price).toFixed(2);\r\n        \r\n        const handleCheckoutAddUpdate = (num) => {\r\n            if(parseInt(currentOrderAmount) < num){\r\n                setCurrentOrderAmount(parseInt(currentOrderAmount + 1))\r\n                dispatch(setCartUpdate({...cartItemDetail, orderAmount: parseInt(currentOrderAmount) + 1}))\r\n            }\r\n        }\r\n        const handleCheckoutMinusUpdate = (num) => {\r\n            if(parseInt(currentOrderAmount) > num){\r\n                setCurrentOrderAmount(parseInt(currentOrderAmount) - 1)\r\n                dispatch(setCartUpdate({...cartItemDetail, orderAmount: parseInt(currentOrderAmount) - 1}))\r\n            }\r\n            if (parseInt(currentOrderAmount) <= num) {\r\n                dispatch(setDeleteItem({...cartItemDetail}))\r\n            }\r\n        }\r\n\r\n        return(\r\n            <ul className=\"CartItemList-block\">\r\n                <li className=\"CartItemList-img-block\"><img src={imgSrc} alt={`${title}-img`} /></li>\r\n                <li className=\"CartItemList-desc-block\">\r\n                    <span>{itemNumber}</span>\r\n                    <span>{title}</span>\r\n                </li>\r\n                <li className=\"CartItemList-price-block\">\r\n                    <span className=\"InputNumberWrapper\">\r\n                        <TextField\r\n                            id=\"filled-number\"\r\n                            label=\"\"\r\n                            type=\"number\"\r\n                            value={currentOrderAmount}\r\n                            variant=\"outlined\"\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            InputProps={{\r\n                                endAdornment: (\r\n                                    <span className=\"AddMinusIconWrapper\">\r\n                                        <AddCircle onClick={()=>handleCheckoutAddUpdate(10)} style={{color: 'green', size: '16px', cursor: 'pointer'}}/>\r\n                                        <RemoveCircle onClick={()=>handleCheckoutMinusUpdate(1)} style={{color: 'red', size: '16px', cursor: 'pointer'}}/>\r\n                                    </span>\r\n                            )}}/>\r\n                        \r\n                    </span>\r\n                    ${updatePrice}\r\n                </li>\r\n            </ul>\r\n        )\r\n    };\r\n\r\n    return (\r\n        <div className=\"Cart-Wrapper\">\r\n            <h1>ORDER DETAILS</h1>\r\n            <h2 className=\"Cart-Items-in-cart-title\">Items in Cart</h2>\r\n            <div className=\"Cart-Added-Items\">                \r\n                { (cartOrderList.length < 1) \r\n                    ? <h2>YOU HAVE NO ADDED ITEM</h2>\r\n                    : cartOrderList.map((item, idx)=>(\r\n                        <CartItemList \r\n                            key={`${item.title}-${idx}`}\r\n                            cartItemDetail={item} />\r\n                    ))\r\n                }\r\n            </div>\r\n            <div className=\"Cart-Total-Amount\">\r\n                <h4>tax: ${(totalAmount * .07).toFixed(2)}</h4>\r\n                <h3>TOTAL: ${(totalAmount * 1.07).toFixed(2)}</h3>\r\n            </div>\r\n\r\n            {haveError && <p style={{color: 'red'}}>{haveError}</p>}\r\n            <div className=\"Cart-User-Info\">\r\n                <FormControl>\r\n                    <TextField required name=\"name\" id=\"Checkout-Name\" label=\"Name\" onChange={buyerInputChange} />\r\n                    <TextField name=\"address\" id=\"Checkout-Address\" label=\"Address\" onChange={buyerInputChange} />\r\n                    <TextField required name=\"phoneNumber\" id=\"Checkout-PhoneNumber\" label=\"Phone Number\" onChange={buyerInputChange} />\r\n                    <TextField name=\"eMail\" id=\"Checkout-EMail\" label=\"E-Mail\" onChange={buyerInputChange} />\r\n                </FormControl>\r\n                <SplitStripeForm \r\n                    disableCheckout={ disableCheckout }\r\n                    itemDetails={ cartOrderList }\r\n                    buyerDetails={ buyerDetails }\r\n                    dollarAmount={ dollarAndTax(totalAmount) }\r\n                    setHaveError={ setHaveError }\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cart;","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\StaticDatas\\index.js",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\MenuBox\\index.jsx",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\AdminPages\\AdminLogin.jsx",["239"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { MuiButton, MuiInputField } from 'Components/MUI';\r\nimport { userIsLoggedIn, userLogin, userLogout } from 'States/userSlice';\r\n\r\nimport './styles.scss';\r\n\r\nconst AdminLogin = () => {\r\n    const userSignIn = useSelector(userIsLoggedIn);\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const [authInput, setAuthInput] = useState({});\r\n    const [inputErrorMessage, setInputErrorMessage] = useState('');\r\n\r\n    useEffect(()=>{\r\n        (userSignIn === true) && (history.push(\"/admin\"));\r\n    },[userSignIn]);\r\n    const LoginSubmitKeyPress = (e) => {\r\n        if(e.keyCode === 13 || e.charCode === 13 ||  e.key === 'Enter'){\r\n            e.preventDefault();\r\n            (authInput.userName && authInput.password) && dispatch(userLogin({...authInput, history}));\r\n            (!authInput.userName || !authInput.password) \r\n                ? setInputErrorMessage('FILL IN MISSING INPUT FIELD') \r\n                : setInputErrorMessage('');\r\n        }\r\n    }\r\n    const LoginSubmit = () => {\r\n        (authInput.userName && authInput.password) && dispatch(userLogin({...authInput, history}));\r\n        (!authInput.userName || !authInput.password) \r\n            ? setInputErrorMessage('FILL IN MISSING INPUT FIELD') \r\n            : setInputErrorMessage('');\r\n    };\r\n\r\n    // store all input changes\r\n    const formInputChange = (e) => {\r\n        const inputValue = (\r\n            ((e.target.name === 'number') && parseInt(e.target.value)) || \r\n            ((e.target.name === 'userName') && e.target.value.toLowerCase()) ||\r\n            e.target.value\r\n        );\r\n\r\n        setAuthInput({ \r\n            ...authInput, \r\n            [e.target.name] : inputValue\r\n        })\r\n    };\r\n\r\n    const inputSettings = [\r\n        {\r\n            type: \"text\",\r\n            name: \"userName\", \r\n            label: \"E-Mail\",\r\n            required: true\r\n        },{\r\n            type: \"password\",\r\n            name: \"password\", \r\n            label: \"password\",\r\n            required: true\r\n        }\r\n    ];\r\n    \r\n    return(\r\n        <div className=\"outter-block-log\">\r\n            <div className=\"inner-block-log\">\r\n                {inputErrorMessage && <div>{inputErrorMessage}</div>}\r\n                <h2>ADMIN LOGIN PAGE</h2>\r\n                <div className=\"form-container\">\r\n                    {\r\n                        inputSettings.map((inputSetting)=>\r\n                            <MuiInputField \r\n                                key={inputSetting.name} \r\n                                { ...inputSetting } \r\n                                onChange={ formInputChange } \r\n                                onKeyPress={ LoginSubmitKeyPress }/>\r\n                        )\r\n                    }\r\n                    <MuiButton \r\n                        label=\"LOGIN\"\r\n                        props={{\r\n                            color: \"black\",\r\n                            bgColor: \"#3f51b5\",\r\n                            boxShadow: \"2px 2px 23px rgba(0, 0, 0, 0.2) inset\",\r\n                            hColor: \"white\",\r\n                            hbgColor: \"#6495ED\"\r\n                        }}\r\n                        onClick={LoginSubmit} />\r\n                    <MuiButton\r\n                        label=\"LOGOUT\"\r\n                        props={{\r\n                            color: \"black\",\r\n                            bgColor: \"#cf142b\",\r\n                            boxShadow: \"2px 2px 23px rgba(0, 0, 0, 0.2) inset\",\r\n                            hColor: \"white\",\r\n                            hbgColor: \"#DC143C\"\r\n                        }}\r\n                        onClick={ ()=> dispatch(userLogout({history})) } />\r\n                </div>\r\n                {/* <span>Dont have a account? <Link to=\"/signup\"> click here</Link></span> */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminLogin;\r\n","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\AdminPages\\Admin.jsx",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Card\\styles.js",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\AdminPages\\AdminMenu.jsx",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\AdminPages\\AdminOrders.jsx",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\StaticDatas\\footerData.js",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\StaticDatas\\socialMedia.js",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\StaticDatas\\headerData.js",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Forms\\SplitStripeForm.jsx",["240","241"],"import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { postNewOrder } from 'States/orderSlice';\r\nimport { MuiButton } from 'Components/MUI';\r\nimport {\r\n  useStripe,\r\n  useElements,\r\n  CardNumberElement,\r\n  CardCvcElement,\r\n  CardExpiryElement\r\n} from \"@stripe/react-stripe-js\";\r\nimport moment from 'moment';\r\nimport useResponsiveFontSize from \"./useResponsiveFontSize\";\r\n\r\nconst useOptions = () => {\r\n  const fontSize = useResponsiveFontSize();\r\n  const options = useMemo(\r\n    () => ({\r\n      style: {\r\n        base: {\r\n          fontSize,\r\n          color: \"#424770\",\r\n          letterSpacing: \"0.025em\",\r\n          fontFamily: \"Source Code Pro, monospace\",\r\n          \"::placeholder\": {\r\n            color: \"#aab7c4\"\r\n          }\r\n        },\r\n        invalid: {\r\n          color: \"#9e2146\"\r\n        }\r\n      }\r\n    }),\r\n    [fontSize]\r\n  );\r\n\r\n  return options;\r\n};\r\n\r\nconst stripeTokenHandler = async(\r\n  token, \r\n  amount,\r\n  itemDetails,\r\n  buyerDetails,\r\n  dispatch,\r\n  history\r\n) => {\r\n  const handlePurchaseDispatch = () => {\r\n    const param = {\r\n        orderNumber: '',\r\n        orderTime: new Date(),\r\n        // orderTime: moment().format('MMMM Do YYYY, h:mm:ss a'),\r\n        fullFillTime: '',\r\n        fullFillStatus: false,\r\n        itemDetails: itemDetails,\r\n        buyerDetails: {...buyerDetails}\r\n    }\r\n    dispatch(postNewOrder(param))\r\n    history.push('/order-receipt') \r\n  }\r\n\r\n  const paymentData = {\r\n    token: token.id,\r\n    amount: amount,\r\n    description: itemDetails.toString()\r\n  };\r\n  // Use fetch to send the token ID and any other payment data to your server.\r\n  // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch\r\n  const response = await fetch(`${process.env.REACT_APP_API_STRIPE_CHECKOUT}`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify(paymentData),\r\n  });\r\n\r\n  // Return and display the result of the charge.\r\n  response.json()\r\n    .then(res => {\r\n      if(res.statusCode === 200){\r\n        handlePurchaseDispatch();\r\n      } else {\r\n        console.log(\"not 200, something else is wrong\")\r\n      }})\r\n    .catch(err=> err)\r\n  // return response.json();\r\n}\r\n\r\nconst SplitStripeForm = ({\r\n    disableCheckout,\r\n    itemDetails,\r\n    buyerDetails,\r\n    dollarAmount,\r\n    setHaveError,\r\n}) => {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const options = useOptions();\r\n  const dispatch = useDispatch();\r\n  let history = useHistory();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n    setIsLoading(true);\r\n    if (!stripe || !elements) {\r\n      setIsLoading(false);\r\n      // Stripe.js has not loaded yet. Make sure to disable\r\n      // form submission until Stripe.js has loaded.\r\n      return;\r\n    }\r\n\r\n    const card = elements.getElement(CardNumberElement);\r\n    const result = await stripe.createToken(card);\r\n    if(result.error){\r\n      setIsLoading(false);\r\n      console.log('result-err---->: ', result.error.message);\r\n      setHaveError(result.error.message);\r\n    } else {\r\n      setHaveError('')\r\n      stripeTokenHandler(\r\n        result.token, \r\n        dollarAmount, \r\n        itemDetails, \r\n        buyerDetails,\r\n        dispatch,\r\n        history);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label>\r\n        Card number\r\n        <CardNumberElement\r\n          options={options}\r\n          onChange={event => event}\r\n        />\r\n      </label>\r\n      <label>\r\n        Expiration date\r\n        <CardExpiryElement\r\n          options={options}\r\n          onChange={event => event}\r\n        />\r\n      </label>\r\n      <label>\r\n        CVC\r\n        <CardCvcElement\r\n          options={options}\r\n          onChange={event => event}\r\n        />\r\n      </label>\r\n      <MuiButton \r\n          props={{\r\n              color: '#717171',\r\n              bgColor: '#a2e6fd',\r\n              hColor: \"white\",\r\n              hbgColor: \"#287d9a\"\r\n          }}\r\n          disabled={ (!stripe || isLoading || disableCheckout || (itemDetails.length < 1)) ? true : false }\r\n          label='CHECK OUT'\r\n          type=\"submit\"\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SplitStripeForm;\r\n","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Card\\ItemCard.jsx",["242"],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\MUI\\MuiTabs.jsx",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\MUI\\index.jsx",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\MUI\\MuiNumberInput.jsx",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\MUI\\MuiInputField.jsx",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\MUI\\MuiButton.jsx",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Forms\\AddCategory.jsx",["243","244"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { menuListState, setAddNewMenuCategory } from 'States/menuSlice';\r\nimport { MuiButton, MuiInputField } from 'Components/MUI';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport ImageUpload from '../ImageUpload/ImageUpload';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport './styles.scss';\r\n\r\nconst AddCategory = ({open, handleToggle}) => {\r\n    const dispatch = useDispatch();\r\n    const  menuState= useSelector(menuListState);\r\n    const [formInputs, setFormInputs] = useState({menuList: []});\r\n    const [imageURL, setImageURL] = useState('');\r\n    const [inputError, setInputError] = useState(false);\r\n    const [toggleUploadImg, setToggleUploadImg] = useState(true);\r\n    useEffect(()=>{\r\n        if(imageURL){\r\n            setFormInputs({\r\n                ...formInputs,\r\n                imgSrc: imageURL\r\n            })\r\n        }\r\n    },[imageURL])\r\n\r\n    const formInputChange = (e) => {\r\n        if(e.target.name === 'points' && (/[^\\d]/g).test(e.target.value)){\r\n            setInputError(true)\r\n        } else {\r\n            setInputError(false)\r\n            setFormInputs({ \r\n                ...formInputs,\r\n                [e.target.name] :  e.target.value\r\n            })\r\n        }\r\n    };\r\n\r\n    const handleSubmitEdit = () => {\r\n        dispatch(setAddNewMenuCategory([...menuState, formInputs]));\r\n        setFormInputs({});\r\n        setImageURL('');\r\n        handleToggle();\r\n    };\r\n\r\n    const inputSettings = [{\r\n            type: \"text\",\r\n            name: \"title\",\r\n            placeholder: \"title\"\r\n        },{\r\n            type: \"text\",\r\n            name: \"descriptions\",\r\n            placeholder: \"descriptions\"\r\n    }];\r\n\r\n\r\n    return(\r\n        <Modal\r\n            open={open}\r\n            onClose={handleToggle}\r\n            aria-labelledby=\"simple-modal-title\"\r\n            aria-describedby=\"simple-modal-description\"\r\n            style={{\r\n                overflow: 'auto',\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignContent: 'center',\r\n            }}>\r\n            <div className=\"AddMenuItem-Wrapper\">\r\n                <div className=\"inner-block\">\r\n                    <div className=\"form-container\" >\r\n                        <div className=\"Item-Details-Close\">\r\n                            <FontAwesomeIcon onClick={handleToggle} icon={faTimes} style={{margin: '1rem', cursor: 'pointer'}} className=\"fa-2x\"/>\r\n                        </div>\r\n                        <button onClick={()=> setToggleUploadImg(!toggleUploadImg)}>\r\n                            {toggleUploadImg ? \"upload image link\" : \"upload image\"}\r\n                        </button>\r\n                        { toggleUploadImg \r\n                            ? <ImageUpload setImageURL={setImageURL}/>\r\n                            : <MuiInputField\r\n                                bgColor=\"#fff\"\r\n                                type=\"text\"\r\n                                name=\"imgSrc\"\r\n                                label=\"image link\"\r\n                                onChange={(e)=> setImageURL(e.target.value)}/>}\r\n                            \r\n                        {\r\n                            inputSettings.map((inputSetting, index)=>\r\n                                <MuiInputField\r\n                                    key={`${index}-inputsetting`}\r\n                                    {...inputSetting}\r\n                                    bgColor=\"#fff\"\r\n                                    name={inputSetting.name}\r\n                                    label={inputSetting.placeholder}\r\n                                    onChange={ formInputChange }/>\r\n                            )\r\n                        }\r\n                        <MuiButton \r\n                            bgColor=\"#fff\"\r\n                            labelColor=\"#000\"\r\n                            label=\"ADD\"\r\n                            onClick={ handleSubmitEdit }/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n};\r\n\r\nexport default AddCategory;","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\AdminComponents\\MenuBlock.jsx",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\AdminComponents\\OrderBlock.jsx",["245"],"import React from 'react';\r\nimport { MuiButton } from 'Components/MUI';\r\nimport moment from 'moment';\r\nimport axios from 'axios';\r\nimport './styles.scss';\r\n\r\nconst OrderBlock = ({ order, currentOrders, setCurrentOrders, index}) => {\r\n    const {\r\n        orderNumber,\r\n        orderTime,\r\n        ordId,\r\n        itemDetails,\r\n        buyerDetails,\r\n    } = order; \r\n\r\n    const handleOrderFullfill = (orderId) => {\r\n        const param = {\r\n            ordId: orderId,\r\n            fullFillStatus: true,\r\n            fullFillTime: new Date(),\r\n            // fullFillTime: moment().format('MMMM Do YYYY, h:mm:ss a'),\r\n        }\r\n        axios.put(process.env.REACT_APP_API_RESTAURANT_ORDER, param)\r\n            .then(res=> {\r\n                console.log(res.data)\r\n                if(res.data.update_status === \"fullfilled success\"){\r\n                    setCurrentOrders(currentOrders.filter(order => order.ordId !== ordId));\r\n                }\r\n            })\r\n            .catch(err=> console.log(err))\r\n    }\r\n    const OrderItemList = ({itemNumber, title, orderAmount}) => (\r\n        <div className=\"OrderItemListWrapper\">\r\n            <h3>{itemNumber}</h3>\r\n            <p>{title}</p>\r\n            <h3>X {orderAmount}</h3>\r\n        </div>\r\n    );\r\n\r\n    // const BuyerDetails = ({buyerDetails}) =>{\r\n    //     const {\r\n    //         address,\r\n    //         eMail,\r\n    //         name,\r\n    //         phoneNumber,\r\n    //     } = buyerDetails;\r\n    // }\r\n    return (\r\n        <div className=\"OrderBlock-wrapper\">\r\n            <h3>{index}, order-number: {orderNumber}</h3>\r\n            <span>order time: {moment(orderTime).format('MMMM Do YYYY, h:mm:ss a')}</span>\r\n            {  itemDetails?.map((item, index) => {\r\n               return <OrderItemList key={`orderItem-${index}`} {...item}/>\r\n            })}\r\n            <MuiButton \r\n                props={{\r\n                    color: '#717171',\r\n                    bgColor: '#a2e6fd',\r\n                    hColor: \"white\",\r\n                    hbgColor: \"#287d9a\",\r\n                    margin: \"auto 0 0 0\",\r\n                }}\r\n                label='ORDER READY'\r\n                onClick={()=> handleOrderFullfill(ordId)}\r\n                onKeyPress={()=> handleOrderFullfill(ordId)}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OrderBlock;","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\MUI\\styles.js",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Card\\ItemDetails.jsx",["246","247","248"],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\ImageUpload\\ImageUpload.jsx",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\ImageUpload\\styles.js",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Card\\ItemCardList.jsx",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Forms\\AddMenuItem.jsx",["249"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { menuListState, setAddNewMenuCategory } from 'States/menuSlice';\r\nimport { MuiButton, MuiInputField } from 'Components/MUI';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport ImageUpload from '../ImageUpload/ImageUpload';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport './styles.scss';\r\n\r\nconst initItemState = {\r\n    imgSrc: '',\r\n    itemNumber: '',\r\n    title: '',\r\n    description: '',\r\n    price: '',\r\n}\r\n\r\nconst AddMenuItem = ({thisCategory, open, handleToggle}) => {\r\n    const dispatch = useDispatch();\r\n    const  menuState= useSelector(menuListState);\r\n    const [formInputs, setFormInputs] = useState({...initItemState});\r\n    const [imageURL, setImageURL] = useState('');\r\n    const [inputError, setInputError] = useState(false);\r\n    const [toggleUploadImg, setToggleUploadImg] = useState(true);\r\n    useEffect(()=>{\r\n        if(imageURL){\r\n            setFormInputs({\r\n                ...formInputs,\r\n                imgSrc: imageURL\r\n            })\r\n        }\r\n    },[imageURL])\r\n\r\n    const formInputChange = (e) => {\r\n        if(e.target.name === 'itemNumber'){\r\n            setInputError(false)\r\n            setFormInputs({ \r\n                ...formInputs,\r\n                [e.target.name] :  e.target.value.toUpperCase()\r\n            })\r\n        } else {\r\n            setInputError(false)\r\n            setFormInputs({ \r\n                ...formInputs,\r\n                [e.target.name] :  e.target.value\r\n            })\r\n        }\r\n    };\r\n\r\n    const handleSubmitEdit = () => {\r\n        const checkItemNumberExist = formInputs?.itemNumber && (thisCategory.menuList.find(item => item.itemNumber === formInputs?.itemNumber) !== undefined);\r\n        if(!checkItemNumberExist){\r\n            const fullMenu = menuState.map((category)=>\r\n                (category.title === thisCategory.title)\r\n                    ?  {\r\n                        ...category,\r\n                        menuList: category.menuList.concat([formInputs])\r\n                    }\r\n                    : category\r\n            );\r\n            // console.log('formInputs-->: ', formInputs)\r\n            dispatch(setAddNewMenuCategory(fullMenu));\r\n            setFormInputs({});\r\n            setImageURL('');\r\n            handleToggle();\r\n        } else {\r\n            // console.log('item number already exist')\r\n            setInputError(true)\r\n        }\r\n\r\n    };\r\n\r\n    const inputSettings = [{\r\n        type: \"text\",\r\n        name: \"itemNumber\",\r\n        placeholder: \"itemNumber\",\r\n        ...inputError && {color: \"red\"}\r\n    },{\r\n        type: \"text\",\r\n        name: \"title\",\r\n        placeholder: \"title\",\r\n    },{\r\n        type: \"text\",\r\n        name: \"description\",\r\n        placeholder: \"description\",\r\n    },{\r\n        type: \"text\",\r\n        name: \"price\",\r\n        placeholder: \"price\",\r\n    }];\r\n\r\n    return(\r\n        <Modal\r\n            open={open}\r\n            onClose={handleToggle}\r\n            aria-labelledby=\"simple-modal-title\"\r\n            aria-describedby=\"simple-modal-description\"\r\n            style={{\r\n                overflow: 'auto',\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignContent: 'center',\r\n            }}>\r\n            <div className=\"AddMenuItem-Wrapper\">\r\n                <div className=\"inner-block\">\r\n                    <div className=\"form-container\" >\r\n                        <div className=\"Item-Details-Close\">\r\n                            <FontAwesomeIcon onClick={handleToggle} icon={faTimes} style={{margin: '1rem', cursor: 'pointer'}} className=\"fa-2x\"/>\r\n                        </div>\r\n                        <button onClick={()=> setToggleUploadImg(!toggleUploadImg)}>\r\n                            {toggleUploadImg ? \"upload image link\" : \"upload image\"}\r\n                        </button>\r\n                        { toggleUploadImg \r\n                            ? <ImageUpload setImageURL={setImageURL}/>\r\n                            : <MuiInputField\r\n                                bgColor=\"#fff\"\r\n                                type=\"text\"\r\n                                name=\"imgSrc\"\r\n                                label=\"image link\"\r\n                                onChange={(e)=> setImageURL(e.target.value)}/>}\r\n                        {inputError && <h2 style={{color: 'red'}}>This item number already exist</h2>}\r\n                            \r\n                        {\r\n                            inputSettings.map((inputSetting, index)=>\r\n                                <MuiInputField\r\n                                    key={`${index}-inputsetting`}\r\n                                    {...inputSetting}\r\n                                    bgColor=\"#fff\"\r\n                                    name={inputSetting.name}\r\n                                    label={inputSetting.placeholder}\r\n                                    onChange={ formInputChange }/>\r\n                            )\r\n                        }\r\n                        <MuiButton \r\n                            bgColor=\"#fff\"\r\n                            labelColor=\"#000\"\r\n                            label=\"ADD ITEM\"\r\n                            disabled={ inputError }\r\n                            onClick={ handleSubmitEdit }/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n};\r\n\r\nexport default AddMenuItem;","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Forms\\ItemEdit.jsx",["250"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setUpdateMenu } from 'States/menuSlice';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { MuiButton, MuiInputField } from 'Components/MUI';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport ImageUpload from '../ImageUpload/ImageUpload';\r\nimport './styles.scss';\r\n\r\nconst ItemEdit = ({itemDetails, handleClose}) => {\r\n    const {\r\n        imgSrc,\r\n        itemNumber,\r\n        title,\r\n        description,\r\n        price,\r\n    } = itemDetails;\r\n    const dispatch = useDispatch();\r\n    const [checked, setChecked] = useState(itemDetails.itemDisable ? itemDetails.itemDisable : false);\r\n    const [formInputs, setFormInputs] = useState({...itemDetails});\r\n    const [imageURL, setImageURL] = useState('');\r\n    const [inputError, setInputError] = useState(false)\r\n    const [toggleUploadImg, setToggleUploadImg] = useState(true)\r\n\r\n    useEffect(()=>{\r\n        if(imageURL){\r\n            setFormInputs({\r\n                ...formInputs,\r\n                imgSrc: imageURL\r\n            })\r\n        }\r\n    },[imageURL])\r\n    const formInputChange = (e) => {\r\n        if(e.target.name === 'points' && (/[^\\d]/g).test(e.target.value)){\r\n            setInputError(true)\r\n        } else if (e.target.name === 'itemDisable'){\r\n            setChecked(!checked);\r\n            setFormInputs({ \r\n                ...formInputs,\r\n                [e.target.name] : !checked\r\n            })\r\n        }else {\r\n            setInputError(false)\r\n            setFormInputs({ \r\n                ...formInputs,\r\n                [e.target.name] : e.target.name === 'points' ? parseInt(e.target.value) : e.target.value\r\n            })\r\n        }\r\n    };\r\n\r\n    const handleSubmitEdit = () => {\r\n        const fullUpdateMenu = (formInputs.itemDisable === undefined) ? {...formInputs, itemDisable: false} : formInputs;\r\n        dispatch(setUpdateMenu(fullUpdateMenu))\r\n        handleClose();\r\n    };\r\n\r\n    // input box setting\r\n    const inputSettings = [\r\n        {\r\n            type: \"text\",\r\n            name: \"title\", \r\n            defaultValue: title,\r\n            placeholder: \"title\"\r\n        },{\r\n            type: \"text\",\r\n            name: \"price\", \r\n            defaultValue: price,\r\n            placeholder: \"price\",\r\n            className: inputError ? 'inputError' : ''\r\n        },{\r\n            type: \"text\",\r\n            name: \"description\", \r\n            rows: 4,\r\n            defaultValue: description,\r\n            placeholder: \"item description\",\r\n            className: inputError ? 'inputError' : ''\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <div className=\"ItemEdit-Wrapper\">\r\n            <div className=\"Item-Details-Edit-Wrapper\">\r\n                <div className=\"inner-block\">\r\n                    <div className=\"form-container\" >\r\n                        <button onClick={()=> setToggleUploadImg(!toggleUploadImg)}>\r\n                            {toggleUploadImg ? \"upload image link\" : \"upload image\"}\r\n                        </button>\r\n                        { toggleUploadImg \r\n                            ? <ImageUpload setImageURL={setImageURL}/>\r\n                            : <MuiInputField\r\n                                bgColor=\"#fff\"\r\n                                type=\"text\"\r\n                                name=\"imgSrc\"\r\n                                label=\"image link\"\r\n                                defaultValue={imgSrc}\r\n                                onChange={(e)=> setImageURL(e.target.value)}/>}\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox \r\n                                    checked={checked} \r\n                                    onChange={formInputChange} \r\n                                    name=\"itemDisable\" />}\r\n                            label=\"Disable\"\r\n                        />\r\n                            \r\n                        {\r\n                            inputSettings.map((inputSetting, index)=>\r\n                                <MuiInputField\r\n                                    key={`${index}-inputsetting`}\r\n                                    {...inputSetting}\r\n                                    bgColor=\"#fff\"\r\n                                    name={inputSetting.name}\r\n                                    label={inputSetting.placeholder}\r\n                                    onChange={ formInputChange }/>\r\n                            )\r\n                        }\r\n                        <MuiButton \r\n                            bgColor=\"#fff\"\r\n                            labelColor=\"#000\"\r\n                            label=\"SUBMIT UPDATE\"\r\n                            onClick={ handleSubmitEdit }/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"Item-Details-Edit-Wrapper\">\r\n                <div className=\"Item-Details-Close\">\r\n                    <FontAwesomeIcon onClick={handleClose} icon={faTimes} style={{margin: '1rem', cursor: 'pointer'}} className=\"fa-2x\"/>\r\n                </div>\r\n                <div>\r\n                    <div className=\"Item-Card-Img-block\">\r\n                        <span>{itemNumber}</span>\r\n                        <img src={imgSrc} alt={title}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"Item-Details-Text\">\r\n                    <h2>{title}</h2>\r\n                    <p>{description}</p>\r\n                    <span>${price}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ItemEdit;","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Forms\\useResponsiveFontSize.js",[],{"ruleId":"251","replacedBy":"252"},{"ruleId":"253","replacedBy":"254"},{"ruleId":"255","severity":1,"message":"256","line":17,"column":5,"nodeType":"257","endLine":17,"endColumn":19,"suggestions":"258"},{"ruleId":"255","severity":1,"message":"256","line":20,"column":7,"nodeType":"257","endLine":20,"endColumn":9,"suggestions":"259"},{"ruleId":"260","severity":1,"message":"261","line":2,"column":8,"nodeType":"262","messageId":"263","endLine":2,"endColumn":13},{"ruleId":"260","severity":1,"message":"264","line":5,"column":5,"nodeType":"262","messageId":"263","endLine":5,"endColumn":25},{"ruleId":"260","severity":1,"message":"265","line":16,"column":7,"nodeType":"262","messageId":"263","endLine":16,"endColumn":24},{"ruleId":"266","severity":1,"message":"267","line":9,"column":21,"nodeType":"268","endLine":9,"endColumn":70},{"ruleId":"269","severity":1,"message":"270","line":9,"column":13,"nodeType":"268","endLine":9,"endColumn":32},{"ruleId":"255","severity":1,"message":"271","line":24,"column":7,"nodeType":"257","endLine":24,"endColumn":9,"suggestions":"272"},{"ruleId":"273","severity":1,"message":"274","line":10,"column":15,"nodeType":"275","messageId":"276","endLine":10,"endColumn":17},{"ruleId":"255","severity":1,"message":"277","line":18,"column":7,"nodeType":"257","endLine":18,"endColumn":19,"suggestions":"278"},{"ruleId":"260","severity":1,"message":"279","line":1,"column":27,"nodeType":"262","messageId":"263","endLine":1,"endColumn":36},{"ruleId":"260","severity":1,"message":"280","line":13,"column":8,"nodeType":"262","messageId":"263","endLine":13,"endColumn":14},{"ruleId":"260","severity":1,"message":"281","line":6,"column":21,"nodeType":"262","messageId":"263","endLine":6,"endColumn":34},{"ruleId":"260","severity":1,"message":"282","line":16,"column":12,"nodeType":"262","messageId":"263","endLine":16,"endColumn":22},{"ruleId":"255","severity":1,"message":"283","line":25,"column":7,"nodeType":"257","endLine":25,"endColumn":17,"suggestions":"284"},{"ruleId":"260","severity":1,"message":"285","line":13,"column":9,"nodeType":"262","messageId":"263","endLine":13,"endColumn":21},{"ruleId":"260","severity":1,"message":"286","line":2,"column":23,"nodeType":"262","messageId":"263","endLine":2,"endColumn":34},{"ruleId":"260","severity":1,"message":"287","line":3,"column":10,"nodeType":"262","messageId":"263","endLine":3,"endColumn":26},{"ruleId":"255","severity":1,"message":"288","line":25,"column":7,"nodeType":"257","endLine":25,"endColumn":9,"suggestions":"289"},{"ruleId":"255","severity":1,"message":"283","line":33,"column":7,"nodeType":"257","endLine":33,"endColumn":17,"suggestions":"290"},{"ruleId":"255","severity":1,"message":"283","line":34,"column":7,"nodeType":"257","endLine":34,"endColumn":17,"suggestions":"291"},"no-native-reassign",["292"],"no-negated-in-lhs",["293"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["294"],["295"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'CognitoUserAttribute' is defined but never used.","'ApiGateWayUserURL' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has missing dependencies: 'dispatch' and 'websocket'. Either include them or remove the dependency array.",["296"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["297"],"'useEffect' is defined but never used.","'moment' is defined but never used.","'MuiInputField' is defined but never used.","'inputError' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'formInputs'. Either include it or remove the dependency array. You can also do a functional update 'setFormInputs(f => ...)' if you only need 'formInputs' in the 'setFormInputs' call.",["298"],"'buyerDetails' is assigned a value but never used.","'useSelector' is defined but never used.","'orderDetailState' is defined but never used.","React Hook useEffect has missing dependencies: 'cartOrderList' and 'itemDetails.itemNumber'. Either include them or remove the dependency array.",["299"],["300"],["301"],"no-global-assign","no-unsafe-negation",{"desc":"302","fix":"303"},{"desc":"304","fix":"305"},{"desc":"306","fix":"307"},{"desc":"308","fix":"309"},{"desc":"310","fix":"311"},{"desc":"312","fix":"313"},{"desc":"310","fix":"314"},{"desc":"310","fix":"315"},"Update the dependencies array to be: [dispatch, userIsSignIn]",{"range":"316","text":"317"},"Update the dependencies array to be: [dispatch]",{"range":"318","text":"319"},"Update the dependencies array to be: [dispatch, websocket]",{"range":"320","text":"321"},"Update the dependencies array to be: [history, userSignIn]",{"range":"322","text":"323"},"Update the dependencies array to be: [formInputs, imageURL]",{"range":"324","text":"325"},"Update the dependencies array to be: [cartOrderList, itemDetails.itemNumber]",{"range":"326","text":"327"},{"range":"328","text":"325"},{"range":"329","text":"325"},[503,517],"[dispatch, userIsSignIn]",[803,805],"[dispatch]",[904,906],"[dispatch, websocket]",[685,697],"[history, userSignIn]",[1053,1063],"[formInputs, imageURL]",[992,994],"[cartOrderList, itemDetails.itemNumber]",[1193,1203],[1276,1286]]