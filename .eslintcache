[{"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\index.js":"1","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\App.js":"2","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\serviceWorker.js":"3","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Store\\store.js":"4","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\StaticDatas\\themeColor.js":"5","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\PageRouter\\UserStatusProvider.jsx":"6","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Providers\\StateWrapper.jsx":"7","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\PageRouter\\index.jsx":"8","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Pages\\index.jsx":"9","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\States\\userSlice.js":"10","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\States\\orderSlice.js":"11","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\States\\headerSlice.js":"12","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\States\\menuSlice.js":"13","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\PageRouter\\PrivateRoute.jsx":"14","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Pages\\NotExist.jsx":"15","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Pages\\Home.jsx":"16","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Pages\\Header.jsx":"17","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Pages\\Footer.jsx":"18","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Pages\\PhotoGallery.jsx":"19","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Pages\\styles.js":"20","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\AdminPages\\index.jsx":"21","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\OrderProcess\\index.jsx":"22","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\OrderProcess\\OrderReceipt.jsx":"23","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\ImageBlock\\ReactResponsiveCarousel.jsx":"24","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Card\\CardItem.jsx":"25","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\OrderProcess\\Cart.jsx":"26","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\StaticDatas\\index.js":"27","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\AdminPages\\AdminLogin.jsx":"28","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\AdminPages\\Admin.jsx":"29","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\MenuBox\\index.jsx":"30","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Card\\styles.js":"31","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\AdminPages\\AdminMenu.jsx":"32","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\AdminPages\\AdminOrders.jsx":"33","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\StaticDatas\\footerData.js":"34","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\StaticDatas\\headerData.js":"35","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\StaticDatas\\socialMedia.js":"36","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\MUI\\MuiComponents\\MuiBtn.jsx":"37","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Forms\\SplitStripeForm.jsx":"38","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Forms\\AliPayBtn.jsx":"39","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\MUI\\MuiTabs.jsx":"40","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Card\\ItemCard.jsx":"41","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\MUI\\index.jsx":"42","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Forms\\useResponsiveFontSize.js":"43","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\MUI\\MuiCheckboxList.jsx":"44","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\MUI\\MuiNumberInput.jsx":"45","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\MUI\\MuiInputField.jsx":"46","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Forms\\AddCategory.jsx":"47","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\MUI\\MuiButton.jsx":"48","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\AdminComponents\\MenuBlock.jsx":"49","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\AdminComponents\\OrderBlock.jsx":"50","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\MUI\\styles.js":"51","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Card\\ItemDetails.jsx":"52","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Card\\ItemCardList.jsx":"53","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Forms\\AddMenuItem.jsx":"54","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Forms\\FormDefault.js":"55","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\ImageUpload\\ImageUpload.jsx":"56","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Forms\\FormSubmitFunctions.js":"57","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Forms\\ItemEdit.jsx":"58","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\ImageUpload\\styles.js":"59","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\MUI\\MuiCheckboxListWithCheckedInput.jsx":"60","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Forms\\Components\\AddOnBlock.jsx":"61","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Constant\\FormatArrayFunction.js":"62","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Constant\\ConstantFunction.js":"63","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Constant\\Icons\\index.js":"64","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Constant\\FormatObjFunction.js":"65"},{"size":1000,"mtime":1611250913945,"results":"66","hashOfConfig":"67"},{"size":483,"mtime":1611250372342,"results":"68","hashOfConfig":"67"},{"size":5227,"mtime":1608053646508,"results":"69","hashOfConfig":"67"},{"size":561,"mtime":1609761940359,"results":"70","hashOfConfig":"67"},{"size":1251,"mtime":1611755442299,"results":"71","hashOfConfig":"67"},{"size":704,"mtime":1610109149514,"results":"72","hashOfConfig":"67"},{"size":1042,"mtime":1610395241870,"results":"73","hashOfConfig":"67"},{"size":932,"mtime":1610541063868,"results":"74","hashOfConfig":"67"},{"size":277,"mtime":1609872922676,"results":"75","hashOfConfig":"67"},{"size":3033,"mtime":1610115904439,"results":"76","hashOfConfig":"67"},{"size":3020,"mtime":1613762644098,"results":"77","hashOfConfig":"67"},{"size":1140,"mtime":1608053948816,"results":"78","hashOfConfig":"67"},{"size":2059,"mtime":1609974322205,"results":"79","hashOfConfig":"67"},{"size":510,"mtime":1609761940350,"results":"80","hashOfConfig":"67"},{"size":375,"mtime":1609761974153,"results":"81","hashOfConfig":"67"},{"size":2236,"mtime":1611250466478,"results":"82","hashOfConfig":"67"},{"size":961,"mtime":1611250482860,"results":"83","hashOfConfig":"67"},{"size":795,"mtime":1611251384934,"results":"84","hashOfConfig":"67"},{"size":528,"mtime":1613052713468,"results":"85","hashOfConfig":"67"},{"size":3136,"mtime":1611250744419,"results":"86","hashOfConfig":"67"},{"size":122,"mtime":1609872819173,"results":"87","hashOfConfig":"67"},{"size":104,"mtime":1610541032646,"results":"88","hashOfConfig":"67"},{"size":1450,"mtime":1611177398425,"results":"89","hashOfConfig":"67"},{"size":1281,"mtime":1609867128980,"results":"90","hashOfConfig":"67"},{"size":749,"mtime":1610115229918,"results":"91","hashOfConfig":"67"},{"size":6981,"mtime":1613767166885,"results":"92","hashOfConfig":"67"},{"size":3149,"mtime":1611251224824,"results":"93","hashOfConfig":"67"},{"size":3428,"mtime":1611177364027,"results":"94","hashOfConfig":"67"},{"size":2764,"mtime":1611239679239,"results":"95","hashOfConfig":"67"},{"size":858,"mtime":1610033787023,"results":"96","hashOfConfig":"67"},{"size":2041,"mtime":1610393270244,"results":"97","hashOfConfig":"67"},{"size":1556,"mtime":1610115095714,"results":"98","hashOfConfig":"67"},{"size":1941,"mtime":1610561768812,"results":"99","hashOfConfig":"67"},{"size":53,"mtime":1609761940357,"results":"100","hashOfConfig":"67"},{"size":476,"mtime":1610394129922,"results":"101","hashOfConfig":"67"},{"size":368,"mtime":1611251406232,"results":"102","hashOfConfig":"67"},{"size":1483,"mtime":1611238946937,"results":"103","hashOfConfig":"67"},{"size":4224,"mtime":1611177017990,"results":"104","hashOfConfig":"67"},{"size":3324,"mtime":1613047508093,"results":"105","hashOfConfig":"67"},{"size":1915,"mtime":1610052106289,"results":"106","hashOfConfig":"67"},{"size":2443,"mtime":1613761955676,"results":"107","hashOfConfig":"67"},{"size":349,"mtime":1613073163214,"results":"108","hashOfConfig":"67"},{"size":496,"mtime":1610395685247,"results":"109","hashOfConfig":"67"},{"size":1911,"mtime":1613586650923,"results":"110","hashOfConfig":"67"},{"size":1888,"mtime":1611151464603,"results":"111","hashOfConfig":"67"},{"size":869,"mtime":1610113923081,"results":"112","hashOfConfig":"67"},{"size":4221,"mtime":1611177212257,"results":"113","hashOfConfig":"67"},{"size":640,"mtime":1610748060227,"results":"114","hashOfConfig":"67"},{"size":1425,"mtime":1610115119384,"results":"115","hashOfConfig":"67"},{"size":1944,"mtime":1611239011880,"results":"116","hashOfConfig":"67"},{"size":1091,"mtime":1611238715298,"results":"117","hashOfConfig":"67"},{"size":3988,"mtime":1613758730225,"results":"118","hashOfConfig":"67"},{"size":1768,"mtime":1610115289677,"results":"119","hashOfConfig":"67"},{"size":10075,"mtime":1613482931790,"results":"120","hashOfConfig":"67"},{"size":1492,"mtime":1613576874330,"results":"121","hashOfConfig":"67"},{"size":1663,"mtime":1608057515894,"results":"122","hashOfConfig":"67"},{"size":2523,"mtime":1613586349782,"results":"123","hashOfConfig":"67"},{"size":10680,"mtime":1613586340787,"results":"124","hashOfConfig":"67"},{"size":448,"mtime":1609972514599,"results":"125","hashOfConfig":"67"},{"size":2819,"mtime":1613482855403,"results":"126","hashOfConfig":"67"},{"size":4303,"mtime":1613407551444,"results":"127","hashOfConfig":"67"},{"size":209,"mtime":1613499996211,"results":"128","hashOfConfig":"67"},{"size":2955,"mtime":1613762146523,"results":"129","hashOfConfig":"67"},{"size":1197,"mtime":1613584747996,"results":"130","hashOfConfig":"67"},{"size":330,"mtime":1613674113900,"results":"131","hashOfConfig":"67"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},"8tjafe",{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"134"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"134"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"134"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"134"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"134"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"134"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"134"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"134"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"134"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"134"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"134"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"134"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"253","usedDeprecatedRules":"134"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"262","usedDeprecatedRules":"134"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"134"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"274","messages":"275","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"134"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\index.js",[],["279","280"],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\App.js",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\serviceWorker.js",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Store\\store.js",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\StaticDatas\\themeColor.js",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\PageRouter\\UserStatusProvider.jsx",["281"],"import React, { createContext, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  userIsLoggedIn,\r\n  userLoginCheck\r\n} from 'States/userSlice';\r\n\r\nconst UserStatusCheck = createContext({});\r\n\r\nconst UserStatusProvider = ({ children }) => {\r\n  const dispatch = useDispatch();\r\n  const userIsSignIn = useSelector(userIsLoggedIn)\r\n\r\n  // check user status and make up date if necessary.\r\n  useEffect(()=>{\r\n    !userIsSignIn && dispatch(userLoginCheck());\r\n  },[userIsSignIn])\r\n  \r\n    return (\r\n        <UserStatusCheck.Provider value={userIsSignIn}>\r\n            {children}\r\n        </UserStatusCheck.Provider>\r\n    );\r\n};\r\n\r\nexport default UserStatusProvider;","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Providers\\StateWrapper.jsx",["282"],"import React, { useEffect } from 'react';\r\nimport { setMenu } from 'States/menuSlice';\r\nimport { useDispatch } from 'react-redux';\r\nimport axios from 'axios';\r\nimport {Elements} from '@stripe/react-stripe-js';\r\nimport {loadStripe} from '@stripe/stripe-js';\r\nimport \"./styles.scss\";\r\n\r\nconst StateWrapper = ({children}) => {\r\n    const dispatch = useDispatch();\r\n    const stripePromise = loadStripe(\"pk_test_51I8WMcEFoepYxM6pCNMtpNb0Tvh8pTLqzYMNrocMJoqBjSQ4Eo5ls4lplxrmSLTGWydlBrAkJp0a9Zgr6tKK8jTw00fquGZFlE\");\r\n\r\n    // const currentMenuState = useSelector(menuListState)\r\n    useEffect(()=>{\r\n        axios.get(process.env.REACT_APP_API_RESTAURANT_MENU)\r\n            .then(res => {\r\n                dispatch(setMenu(res.data.menu));\r\n            })\r\n            .catch(err => console.log(err))\r\n    },[])\r\n    return(\r\n        <Elements stripe={stripePromise}>\r\n            <div id=\"state-wrapper\" className=\"StateWrapperBody\">\r\n                {children}\r\n            </div>\r\n        </Elements>\r\n    );\r\n};\r\n\r\nexport default StateWrapper;","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\PageRouter\\index.jsx",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Pages\\index.jsx",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\States\\userSlice.js",["283","284","285"],"import { createSlice } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nimport {\r\n    CognitoUserPool,\r\n    CognitoUserAttribute,\r\n    CognitoUser,\r\n    AuthenticationDetails\r\n} from 'amazon-cognito-identity-js';\r\n\r\nconst poolData = {\r\n    UserPoolId: process.env.REACT_APP_USER_POOL,\r\n    ClientId: process.env.REACT_APP_CLIENT_ID\r\n};\r\n// const postURL = process.env.REACT_APP_API_GATEWAY_URL;\r\nconst userPool = new CognitoUserPool(poolData);\r\nconst ApiGateWayUserURL = process.env.REACT_APP_API_GATEWAY_URL;\r\nconst initState = {\r\n    isLoggedIn: false,\r\n}\r\nexport const userSlice = createSlice({\r\n    name: 'userState',\r\n    initialState: initState,\r\n    reducers: {\r\n        setUserState: (state, action) => {\r\n            return {...state, ...action.payload};\r\n        },\r\n        setIsLoggedIn: (state, action) => {\r\n            state.isLoggedIn = action.payload;\r\n        },\r\n    },\r\n});\r\n\r\nexport const {\r\n    setUserState,\r\n    setIsLoggedIn,\r\n} = userSlice.actions;\r\n\r\n// AWS User Login\r\nexport const userLogin = ({userName, password, history}) => dispatch => {\r\n    const authenticationData = {\r\n        Username: userName,\r\n        Password: password,\r\n    };\r\n    const authenticationDetails = new AuthenticationDetails(\r\n        authenticationData\r\n    );\r\n\r\n    const userData = {\r\n        Username: userName,\r\n        Pool: userPool,\r\n    };\r\n    const cognitoUser = new CognitoUser(userData);\r\n\r\n    cognitoUser.authenticateUser(authenticationDetails, {\r\n        onSuccess: (result) => {\r\n            dispatch(setIsLoggedIn(true));\r\n            history.push('/admin');\r\n         },\r\n        onFailure: (err) => {\r\n            alert(err.message || JSON.stringify(err));\r\n        },\r\n    });\r\n};\r\n\r\n// AWS cognito Logout\r\nexport const userLogout = ({history}) => dispatch => {\r\n    if(userPool.getCurrentUser()){\r\n        // To Do: clear init data\r\n        userPool.getCurrentUser().signOut();\r\n        dispatch(setUserState(initState))\r\n        history.push('/');\r\n    };\r\n};\r\n\r\n// AWS Cognito Get User Data\r\nexport const userLoginCheck = () => dispatch => {\r\n    if (userPool.getCurrentUser() != null) {\r\n        userPool.getCurrentUser().getSession((err, session) => {\r\n            if(err){console.log('userPool.getCurrentUser() err---->', err)};\r\n                dispatch(setIsLoggedIn(true));\r\n            // axios.get(`${ApiGateWayUserURL}?subId=${session?.idToken?.payload?.sub}`, {\r\n            //     headers: { 'Authorization' : session?.getIdToken()?.getJwtToken() }\r\n            // })\r\n            //     .then(res => {\r\n            //         console.log('userLoginCheck-trigger--->: ', res.data)\r\n            //         dispatch(setUserState(res.data));\r\n            //         dispatch(setIsLoggedIn(true));\r\n            //     })\r\n            //     .catch(error => console.log('get user error: ', error))\r\n          });\r\n    } \r\n};\r\n\r\nexport const userCognitoState = state => state.userState;\r\nexport const userIsLoggedIn = state => state.userState.isLoggedIn;\r\nexport default userSlice.reducer;\r\n","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\States\\orderSlice.js",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\States\\headerSlice.js",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\States\\menuSlice.js",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\PageRouter\\PrivateRoute.jsx",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Pages\\NotExist.jsx",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Pages\\Home.jsx",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Pages\\Header.jsx",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Pages\\Footer.jsx",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Pages\\PhotoGallery.jsx",["286"],"import React from 'react';\r\nimport { photoGallery } from 'StaticDatas';\r\n\r\nconst PhotoGallery = () => {\r\n    return(\r\n        <div className=\"PhotoGolleryOutWrapper\">\r\n            <ul className=\"PhotoGallery-wrapper\">\r\n                {photoGallery.map((image, index)=> \r\n                    <li key={`image-${index}-gallery`}>\r\n                        <img src={image} alt={`image-${index}-gallery`}/>\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PhotoGallery;","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Pages\\styles.js",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\AdminPages\\index.jsx",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\OrderProcess\\index.jsx",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\OrderProcess\\OrderReceipt.jsx",["287"],"import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setClearOrderList } from 'States/orderSlice';\r\nimport { CancelButton } from 'Components/MUI/MuiComponents/MuiBtn';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './styles.scss'; \r\n\r\nconst OrderReceipt = () => {\r\n    let history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const wsUri = process.env.REACT_APP_API_WEBSOCKETS;\r\n    const websocket = new WebSocket(wsUri);\r\n    \r\n    // triiger websocket to send order on load, and disable button until websocket successfully update the order\r\n    useEffect(()=>{\r\n        websocket.onopen = (event) => {\r\n            const sendMessage = {\r\n                message : \"New order available\", \r\n                action : \"message\"\r\n            }\r\n            dispatch(setClearOrderList());\r\n            websocket.send(JSON.stringify(sendMessage));\r\n        }\r\n    },[])\r\n\r\n    const handleOnClick = () => {\r\n        websocket.close();\r\n        history.push('/')\r\n    };\r\n\r\n    return(\r\n        <div className=\"OrderReceipt-wrapper\">\r\n            <h2>Order Receipt</h2>\r\n            <div>\r\n                THANK YOU AND YOUR ORDER WILL BE READY SOON\r\n            </div>\r\n            <CancelButton \r\n                label='CLOSE'\r\n                onClick={handleOnClick}\r\n                onKeyPress={handleOnClick}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OrderReceipt;","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\ImageBlock\\ReactResponsiveCarousel.jsx",["288"],"import React from 'react';\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport { Carousel } from 'react-responsive-carousel';\r\n\r\nconst ReactResponsiveCarousel = ({imgList}) => {\r\n\r\n    const createCarouselItemImage = (image, index, options = {}) => (\r\n        <div key={`ReactResponsiveCarousel-${index}`}>\r\n            <img src={image} />\r\n        </div>\r\n    );\r\n    \r\n    const baseChildren = <div>{imgList.map(createCarouselItemImage)}</div>;\r\n\r\n    const getConfigurableProps  = {\r\n        showArrows:  true,\r\n        showStatus:  true,\r\n        showIndicators:  false,\r\n        infiniteLoop:  true,\r\n        showThumbs:  false,\r\n        useKeyboardArrows:  true,\r\n        autoPlay:  true,\r\n        stopOnHover:  true,\r\n        swipeable:  true,\r\n        dynamicHeight:  true,\r\n        emulateTouch:  true,\r\n        thumbWidth:  100, \r\n        selectedItem:  0, \r\n        interval:  3000, \r\n        transitionTime:  150, \r\n        swipeScrollTolerance:  5,\r\n        centerSlidePercentage: 80,\r\n    };\r\n\r\n    return (\r\n        <Carousel \r\n            infiniteLoop\r\n            centerMode\r\n            {...getConfigurableProps}\r\n        >\r\n            {baseChildren.props.children}\r\n        </Carousel>\r\n    );\r\n};\r\n\r\nexport default ReactResponsiveCarousel;","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Card\\CardItem.jsx",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\OrderProcess\\Cart.jsx",["289","290","291","292"],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\StaticDatas\\index.js",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\AdminPages\\AdminLogin.jsx",["293"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { MuiInputField } from 'Components/MUI';\r\nimport { SubmitButton, CancelButton } from 'Components/MUI/MuiComponents/MuiBtn';\r\nimport { userIsLoggedIn, userLogin, userLogout } from 'States/userSlice';\r\n\r\nimport './styles.scss';\r\n\r\nconst AdminLogin = () => {\r\n    const userSignIn = useSelector(userIsLoggedIn);\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const [authInput, setAuthInput] = useState({});\r\n    const [inputErrorMessage, setInputErrorMessage] = useState('');\r\n\r\n    useEffect(()=>{\r\n        (userSignIn === true) && (history.push(\"/admin\"));\r\n    },[userSignIn]);\r\n    const LoginSubmitKeyPress = (e) => {\r\n        if(e.keyCode === 13 || e.charCode === 13 ||  e.key === 'Enter'){\r\n            e.preventDefault();\r\n            (authInput.userName && authInput.password) && dispatch(userLogin({...authInput, history}));\r\n            (!authInput.userName || !authInput.password) \r\n                ? setInputErrorMessage('FILL IN MISSING INPUT FIELD') \r\n                : setInputErrorMessage('');\r\n        }\r\n    }\r\n    const LoginSubmit = () => {\r\n        (authInput.userName && authInput.password) && dispatch(userLogin({...authInput, history}));\r\n        (!authInput.userName || !authInput.password) \r\n            ? setInputErrorMessage('FILL IN MISSING INPUT FIELD') \r\n            : setInputErrorMessage('');\r\n    };\r\n\r\n    // store all input changes\r\n    const formInputChange = (e) => {\r\n        const inputValue = (\r\n            ((e.target.name === 'number') && parseInt(e.target.value)) || \r\n            ((e.target.name === 'userName') && e.target.value.toLowerCase()) ||\r\n            e.target.value\r\n        );\r\n\r\n        setAuthInput({ \r\n            ...authInput, \r\n            [e.target.name] : inputValue\r\n        })\r\n    };\r\n\r\n    const inputSettings = [\r\n        {\r\n            type: \"text\",\r\n            name: \"userName\", \r\n            label: \"E-Mail\",\r\n            required: true\r\n        },{\r\n            type: \"password\",\r\n            name: \"password\", \r\n            label: \"password\",\r\n            required: true\r\n        }\r\n    ];\r\n    \r\n    return(\r\n        <div className=\"outter-block-log\">\r\n            <div className=\"inner-block-log\">\r\n                {inputErrorMessage && <div>{inputErrorMessage}</div>}\r\n                <h2>ADMIN LOGIN PAGE</h2>\r\n                <div className=\"form-container\">\r\n                    {\r\n                        inputSettings.map((inputSetting)=>\r\n                            <MuiInputField \r\n                                key={inputSetting.name} \r\n                                { ...inputSetting } \r\n                                onChange={ formInputChange } \r\n                                onKeyPress={ LoginSubmitKeyPress }/>\r\n                        )\r\n                    }\r\n                    <SubmitButton \r\n                        label=\"LOGIN\"\r\n                        onClick={LoginSubmit} />\r\n                    <CancelButton\r\n                        label=\"LOGOUT\"\r\n                        onClick={ ()=> dispatch(userLogout({history})) } />\r\n                </div>\r\n                {/* <span>Dont have a account? <Link to=\"/signup\"> click here</Link></span> */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminLogin;\r\n","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\AdminPages\\Admin.jsx",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\MenuBox\\index.jsx",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Card\\styles.js",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\AdminPages\\AdminMenu.jsx",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\AdminPages\\AdminOrders.jsx",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\StaticDatas\\footerData.js",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\StaticDatas\\headerData.js",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\StaticDatas\\socialMedia.js",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\MUI\\MuiComponents\\MuiBtn.jsx",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Forms\\SplitStripeForm.jsx",["294","295"],"import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { postNewOrder } from 'States/orderSlice';\r\nimport { SubmitButton } from 'Components/MUI/MuiComponents/MuiBtn';\r\nimport {\r\n  useStripe,\r\n  useElements,\r\n  CardNumberElement,\r\n  CardCvcElement,\r\n  CardExpiryElement\r\n} from \"@stripe/react-stripe-js\";\r\nimport moment from 'moment';\r\nimport useResponsiveFontSize from \"./useResponsiveFontSize\";\r\n\r\nconst useOptions = () => {\r\n  const fontSize = useResponsiveFontSize();\r\n  const options = useMemo(\r\n    () => ({\r\n      style: {\r\n        base: {\r\n          fontSize,\r\n          color: \"#424770\",\r\n          letterSpacing: \"0.025em\",\r\n          fontFamily: \"Source Code Pro, monospace\",\r\n          \"::placeholder\": {\r\n            color: \"#aab7c4\"\r\n          }\r\n        },\r\n        invalid: {\r\n          color: \"#9e2146\"\r\n        }\r\n      }\r\n    }),\r\n    [fontSize]\r\n  );\r\n\r\n  return options;\r\n};\r\n\r\nconst stripeTokenHandler = async(\r\n  token, \r\n  amount,\r\n  itemDetails,\r\n  buyerDetails,\r\n  dispatch,\r\n  history\r\n) => {\r\n  const handlePurchaseDispatch = () => {\r\n    const param = {\r\n        orderNumber: '',\r\n        orderTime: new Date(),\r\n        // orderTime: moment().format('MMMM Do YYYY, h:mm:ss a'),\r\n        fullFillTime: '',\r\n        fullFillStatus: false,\r\n        itemDetails: itemDetails,\r\n        buyerDetails: {...buyerDetails}\r\n    }\r\n    dispatch(postNewOrder(param))\r\n    history.push('/order-receipt') \r\n  }\r\n\r\n  const paymentData = {\r\n    token: token.id,\r\n    amount: amount,\r\n    description: itemDetails.toString()\r\n  };\r\n  // Use fetch to send the token ID and any other payment data to your server.\r\n  // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch\r\n  const response = await fetch(`${process.env.REACT_APP_API_STRIPE_CHECKOUT}`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify(paymentData),\r\n  });\r\n\r\n  // Return and display the result of the charge.\r\n  response.json()\r\n    .then(res => {\r\n      if(res.statusCode === 200){\r\n        handlePurchaseDispatch();\r\n      } else {\r\n        console.log(\"not 200, something else is wrong\")\r\n      }})\r\n    .catch(err=> err)\r\n  // return response.json();\r\n}\r\n\r\nconst SplitStripeForm = ({\r\n    disableCheckout,\r\n    itemDetails,\r\n    buyerDetails,\r\n    dollarAmount,\r\n    setHaveError,\r\n}) => {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const options = useOptions();\r\n  const dispatch = useDispatch();\r\n  let history = useHistory();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n    setIsLoading(true);\r\n    if (!stripe || !elements) {\r\n      setIsLoading(false);\r\n      // Stripe.js has not loaded yet. Make sure to disable\r\n      // form submission until Stripe.js has loaded.\r\n      return;\r\n    }\r\n\r\n    const card = elements.getElement(CardNumberElement);\r\n    const result = await stripe.createToken(card);\r\n    if(result.error){\r\n      setIsLoading(false);\r\n      console.log('result-err---->: ', result.error.message);\r\n      setHaveError(result.error.message);\r\n    } else {\r\n      setHaveError('')\r\n      stripeTokenHandler(\r\n        result.token, \r\n        dollarAmount, \r\n        itemDetails, \r\n        buyerDetails,\r\n        dispatch,\r\n        history);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label>\r\n        Card number\r\n        <CardNumberElement\r\n          options={options}\r\n          onChange={event => event}\r\n        />\r\n      </label>\r\n      <label>\r\n        Expiration date\r\n        <CardExpiryElement\r\n          options={options}\r\n          onChange={event => event}\r\n        />\r\n      </label>\r\n      <label>\r\n        CVC\r\n        <CardCvcElement\r\n          options={options}\r\n          onChange={event => event}\r\n        />\r\n      </label>\r\n      <SubmitButton \r\n          disabled={ (!stripe || isLoading || disableCheckout || (itemDetails.length < 1)) ? true : false }\r\n          label='CHECK OUT'\r\n          type=\"submit\"\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SplitStripeForm;\r\n","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Forms\\AliPayBtn.jsx",["296","297","298","299","300"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { SubmitButton } from 'Components/MUI/MuiComponents/MuiBtn';\r\nimport {\r\n    CardElement,\r\n    Elements,\r\n    useElements,\r\n    useStripe\r\n  } from '@stripe/react-stripe-js';\r\nimport {loadStripe} from '@stripe/stripe-js';\r\nimport axios from 'axios';\r\n\r\nconst AliPayBtn = ({buyerDetails}) => {\r\n    const stripe = useStripe();\r\n    const stripePromise = loadStripe\r\n    ('pk_test_51I8WMcEFoepYxM6pCNMtpNb0Tvh8pTLqzYMNrocMJoqBjSQ4Eo5ls4lplxrmSLTGWydlBrAkJp0a9Zgr6tKK8jTw00fquGZFlE');\r\n    const elements = useElements();\r\n    const [srcId, setSrcId] = useState('');\r\n    const [clientId, setClientId] = useState('');\r\n    const [paymentStatus, setPaymentStatus] = useState('');\r\n    const [chargeAmount, setChargeAmount] = useState();\r\n\r\n\r\n    useEffect(()=>{\r\n        if(paymentStatus === \"chargeable\"){\r\n            chargePayment(srcId);\r\n        }\r\n    },[paymentStatus])\r\n\r\n    // create AliPay source\r\n    const handleOnClickAliPay = () => {\r\n        stripe.createSource({\r\n            type: 'alipay',\r\n            amount: 1099,\r\n            currency: 'usd',\r\n            redirect: {\r\n              return_url: 'https://mimitale.com',\r\n            },\r\n          }).then(function(result) {\r\n            // handle result.error or result.source\r\n            console.log(\"result--->: \", result?.source?.redirect?.url);\r\n            setSrcId(result?.source?.id);\r\n            setClientId(result?.source?.client_secret);\r\n          });\r\n    }\r\n    \r\n    // Get source update status\r\n    const handleReturnSrc = async() => {\r\n        const paymentIntent = await stripe.retrieveSource({\r\n            id: srcId,\r\n            client_secret: clientId,\r\n          });\r\n          console.log('paymentIntent-->: ', paymentIntent);\r\n          console.log('paymentIntent.source.status--->: ', paymentIntent?.source?.status)\r\n          if(paymentIntent?.source?.status === \"chargeable\"){\r\n                setPaymentStatus(paymentIntent?.source?.status);\r\n                setChargeAmount(paymentIntent?.source?.amount);\r\n          };\r\n    };\r\n\r\n    // Charge if status is Chargeable by useEffect\r\n    const chargePayment = async() => {\r\n        // return charge;\r\n        const paymentData = {\r\n            token: srcId,\r\n            amount: chargeAmount,\r\n            description: buyerDetails.toString()\r\n        };\r\n\r\n        const response = await fetch(`${process.env.REACT_APP_API_STRIPE_CHECKOUT}`, {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(paymentData),\r\n        });\r\n\r\n        response.json()\r\n            .then(res => {\r\n            if(res.statusCode === 200){\r\n                console.log(\"successful--->: \", res)\r\n            } else {\r\n                console.log(\"not 200, something else is wrong--->: \", res)\r\n            }})\r\n            .catch(err=> err)\r\n    };\r\n\r\n    return(\r\n        <Elements stripe={stripePromise}>       \r\n            <SubmitButton \r\n                label='Alipay'\r\n                onClick={handleOnClickAliPay}\r\n            />\r\n            <SubmitButton \r\n                label='Source'\r\n                onClick={handleReturnSrc}\r\n            />\r\n        </Elements>\r\n    )\r\n};\r\n\r\nexport default AliPayBtn;\r\n\r\n","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\MUI\\MuiTabs.jsx",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Card\\ItemCard.jsx",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\MUI\\index.jsx",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Forms\\useResponsiveFontSize.js",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\MUI\\MuiCheckboxList.jsx",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\MUI\\MuiNumberInput.jsx",["301"],"import React from 'react';\r\nimport { AddBox, RemoveCircle } from '@material-ui/icons';\r\nimport IndeterminateCheckBoxIcon from '@material-ui/icons/IndeterminateCheckBox';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport './styles.scss';\r\n\r\nconst MuiNumberInput = ({\r\n    min, \r\n    max,\r\n    currentNumber,\r\n    setCurrentNumber,\r\n    price = null,\r\n}) => {\r\n    const updatePrice = price && (parseInt(currentNumber) * price).toFixed(2);\r\n\r\n    const handleCheckoutAddUpdate = (num) => {\r\n        if(parseInt(currentNumber) < num){\r\n            setCurrentNumber(parseInt(currentNumber) + 1)\r\n        }\r\n    }\r\n    const handleCheckoutMinusUpdate = (num) => {\r\n        if(parseInt(currentNumber) > num){\r\n            setCurrentNumber(parseInt(currentNumber) - 1)\r\n        }\r\n    }\r\n    return(\r\n        <div className=\"MuiNumberInput-Wrapper\">\r\n            <span className=\"InputNumberWrapper\">\r\n                <TextField\r\n                    id=\"filled-number\"\r\n                    label=\"\"\r\n                    type=\"number\"\r\n                    value={currentNumber}\r\n                    variant=\"outlined\"\r\n                    style={{display: 'flex', flexBasis: '100%'}}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    InputProps={{\r\n                        endAdornment: (\r\n                            <>\r\n                                <AddBox onClick={()=>handleCheckoutAddUpdate(max)} style={{color: 'green', cursor: 'pointer'}}/>\r\n                                <IndeterminateCheckBoxIcon onClick={()=>handleCheckoutMinusUpdate(min)} style={{color: 'red', cursor: 'pointer'}}/>\r\n                            </>\r\n                        )}}\r\n                    />\r\n            </span>\r\n            {price && `$${updatePrice}`}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MuiNumberInput;","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\MUI\\MuiInputField.jsx",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Forms\\AddCategory.jsx",["302","303"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { menuListState, setAddNewMenuCategory } from 'States/menuSlice';\r\nimport { MuiInputField } from 'Components/MUI';\r\nimport { EditButton } from 'Components/MUI/MuiComponents/MuiBtn';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport ImageUpload from '../ImageUpload/ImageUpload';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport './styles.scss';\r\n\r\nconst AddCategory = ({open, handleToggle}) => {\r\n    const dispatch = useDispatch();\r\n    const  menuState= useSelector(menuListState);\r\n    const [formInputs, setFormInputs] = useState({menuList: []});\r\n    const [imageURL, setImageURL] = useState('');\r\n    const [inputError, setInputError] = useState(false);\r\n    const [toggleUploadImg, setToggleUploadImg] = useState(true);\r\n    useEffect(()=>{\r\n        if(imageURL){\r\n            setFormInputs({\r\n                ...formInputs,\r\n                imgSrc: imageURL\r\n            })\r\n        }\r\n    },[imageURL])\r\n\r\n    const formInputChange = (e) => {\r\n        if(e.target.name === 'points' && (/[^\\d]/g).test(e.target.value)){\r\n            setInputError(true)\r\n        } else {\r\n            setInputError(false)\r\n            setFormInputs({ \r\n                ...formInputs,\r\n                [e.target.name] :  e.target.value\r\n            })\r\n        }\r\n    };\r\n\r\n    const handleSubmitEdit = () => {\r\n        dispatch(setAddNewMenuCategory([...menuState, formInputs]));\r\n        setFormInputs({});\r\n        setImageURL('');\r\n        handleToggle();\r\n    };\r\n\r\n    const inputSettings = [{\r\n            type: \"text\",\r\n            name: \"title\",\r\n            placeholder: \"title\"\r\n        },{\r\n            type: \"text\",\r\n            name: \"descriptions\",\r\n            placeholder: \"descriptions\"\r\n    }];\r\n\r\n\r\n    return(\r\n        <Modal\r\n            open={open}\r\n            onClose={handleToggle}\r\n            aria-labelledby=\"simple-modal-title\"\r\n            aria-describedby=\"simple-modal-description\"\r\n            style={{\r\n                overflow: 'auto',\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignContent: 'center',\r\n            }}>\r\n            <div className=\"AddMenuItem-Wrapper\">\r\n                <div className=\"inner-block\">\r\n                    <div className=\"form-container\" >\r\n                        <div className=\"Item-Details-Close\">\r\n                            <FontAwesomeIcon onClick={handleToggle} icon={faTimes} style={{margin: '1rem', cursor: 'pointer'}} className=\"fa-2x\"/>\r\n                        </div>\r\n                        <button onClick={()=> setToggleUploadImg(!toggleUploadImg)}>\r\n                            {toggleUploadImg ? \"upload image link\" : \"upload image\"}\r\n                        </button>\r\n                        { toggleUploadImg \r\n                            ? <ImageUpload setImageURL={setImageURL}/>\r\n                            : <MuiInputField\r\n                                bgColor=\"#fff\"\r\n                                type=\"text\"\r\n                                name=\"imgSrc\"\r\n                                label=\"image link\"\r\n                                onChange={(e)=> setImageURL(e.target.value)}/>}\r\n                            \r\n                        {\r\n                            inputSettings.map((inputSetting, index)=>\r\n                                <MuiInputField\r\n                                    key={`${index}-inputsetting`}\r\n                                    {...inputSetting}\r\n                                    bgColor=\"#fff\"\r\n                                    name={inputSetting.name}\r\n                                    label={inputSetting.placeholder}\r\n                                    onChange={ formInputChange }/>\r\n                            )\r\n                        }\r\n                        <EditButton \r\n                            label=\"ADD\"\r\n                            onClick={ handleSubmitEdit }/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n};\r\n\r\nexport default AddCategory;","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\MUI\\MuiButton.jsx",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\AdminComponents\\MenuBlock.jsx",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\AdminComponents\\OrderBlock.jsx",["304"],"import React from 'react';\r\nimport { SubmitButton } from 'Components/MUI/MuiComponents/MuiBtn';\r\nimport moment from 'moment';\r\nimport axios from 'axios';\r\nimport './styles.scss';\r\n\r\nconst OrderBlock = ({ order, currentOrders, setCurrentOrders, index}) => {\r\n    const {\r\n        orderNumber,\r\n        orderTime,\r\n        ordId,\r\n        itemDetails,\r\n        buyerDetails,\r\n    } = order; \r\n\r\n    const handleOrderFullfill = (orderId) => {\r\n        const param = {\r\n            ordId: orderId,\r\n            fullFillStatus: true,\r\n            fullFillTime: new Date(),\r\n            // fullFillTime: moment().format('MMMM Do YYYY, h:mm:ss a'),\r\n        }\r\n        axios.put(process.env.REACT_APP_API_RESTAURANT_ORDER, param)\r\n            .then(res=> {\r\n                console.log(res.data)\r\n                if(res.data.update_status === \"fullfilled success\"){\r\n                    setCurrentOrders(currentOrders.filter(order => order.ordId !== ordId));\r\n                }\r\n            })\r\n            .catch(err=> console.log(err))\r\n    }\r\n    const OrderItemList = ({itemNumber, title, orderAmount}) => (\r\n        <div className=\"OrderItemListWrapper\">\r\n            <h3>{itemNumber}</h3>\r\n            <p>{title}</p>\r\n            <h3>X {orderAmount}</h3>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"OrderBlock-wrapper\">\r\n            <h3>{index}, order-number: {orderNumber}</h3>\r\n            <span>order time: {moment(orderTime).format('MMMM Do YYYY, h:mm:ss a')}</span>\r\n            {  itemDetails?.map((item, index) => {\r\n               return <OrderItemList key={`orderItem-${index}`} {...item}/>\r\n            })}\r\n            <SubmitButton \r\n                props={{margin: 'auto 0 0 0'}}\r\n                label='ORDER READY'\r\n                onClick={()=> handleOrderFullfill(ordId)}\r\n                onKeyPress={()=> handleOrderFullfill(ordId)}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OrderBlock;","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\MUI\\styles.js",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Card\\ItemDetails.jsx",["305","306","307","308","309","310","311","312","313","314","315"],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Card\\ItemCardList.jsx",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Forms\\AddMenuItem.jsx",["316","317","318","319"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { menuListState, setAddNewMenuCategory } from 'States/menuSlice';\r\nimport { MuiInputField, MuiCheckboxList, MuiCheckboxListWithCheckedInput } from 'Components/MUI';\r\nimport { SubmitButton, EditButton } from 'Components/MUI/MuiComponents/MuiBtn';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport ImageUpload from 'Components/ImageUpload/ImageUpload';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport './styles.scss';\r\nimport {\r\n    allergenListDefault,\r\n    sizeListDefault,\r\n    initItemState,\r\n    ItemToggles\r\n} from './FormDefault';\r\nimport { AddMenuItemHandleChange, SizeHandleChange, SizeInputHandleChange, toggleForLoopList } from './FormSubmitFunctions';\r\nimport AddOnBlock from 'Components/Forms/Components/AddOnBlock';\r\n\r\nconst AddMenuItem = ({thisCategory, open, handleToggle}) => {\r\n    const dispatch = useDispatch();\r\n    const  menuState= useSelector(menuListState);\r\n    const [imageURL, setImageURL] = useState('');\r\n    const [inputError, setInputError] = useState(false);\r\n    const [toggleUploadImg, setToggleUploadImg] = useState(true);\r\n    const [toggles, setToggles] = useState(ItemToggles);\r\n    const [formInputs, setFormInputs] = useState({...initItemState});\r\n    const [allergenList, setAllergenList] = useState(allergenListDefault);\r\n    const [sizeList, setSizeList] = useState(sizeListDefault);\r\n    const [addOnList, setAddOnList] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        if(imageURL){\r\n            setFormInputs({\r\n                ...formInputs,\r\n                imgSrc: imageURL\r\n            })\r\n        }\r\n    },[imageURL])\r\n    const formInputChange = (e) => {\r\n        if(e.target.name === 'itemNumber'){\r\n            setInputError(false)\r\n            setFormInputs({ \r\n                ...formInputs,\r\n                [e.target.name] :  e.target.value.toUpperCase()\r\n            })\r\n        } else {\r\n            setInputError(false)\r\n            setFormInputs({ \r\n                ...formInputs,\r\n                [e.target.name] :  e.target.value\r\n            })\r\n        }\r\n    };\r\n\r\n    const handleSubmitEdit = () => {\r\n        const checkItemNumberExist = formInputs?.itemNumber && (thisCategory.menuList.find(item => item.itemNumber === formInputs?.itemNumber) !== undefined);\r\n\r\n        const isAllergenListOn = () => {\r\n            for (var item in allergenList){\r\n                if(allergenList[item]?.on === true) return true;\r\n            }\r\n        }\r\n        const isSizeListOn = sizeList.find(size => \r\n            (size.on === true) ? true : false\r\n        )\r\n        if(!checkItemNumberExist){\r\n            const fullMenu = menuState.map((category)=>\r\n                (category.title === thisCategory.title)\r\n                    ?  {\r\n                        ...category,\r\n                        menuList: category.menuList.concat([{...formInputs, \r\n                            options: {\r\n                                ...formInputs?.options,\r\n                                ...(isAllergenListOn() && {allergens: allergenList}),\r\n                                ...(isSizeListOn !== undefined && {sizes: sizeList}),\r\n                                ...(addOnList?.length > 0 && {\r\n                                    ['add-on']: addOnList\r\n                                })\r\n                            }\r\n                        }])\r\n                    }\r\n                    : category\r\n            );\r\n            // console.log('fullMenu-->: ', fullMenu);\r\n            dispatch(setAddNewMenuCategory(fullMenu));\r\n            setFormInputs({});\r\n            setImageURL('');\r\n            setAllergenList(allergenListDefault)\r\n            setSizeList(sizeListDefault);\r\n            setAddOnList([]);\r\n            handleToggle();\r\n        } else {\r\n            // console.log('item number already exist')\r\n            setInputError(true)\r\n        }\r\n    };\r\n\r\n    const inputSettings = [{\r\n        type: \"checkList\",\r\n        listTitle: \"Allergens\",\r\n        list: allergenList,\r\n        handleChange: AddMenuItemHandleChange,\r\n        setChangeTrigger: setAllergenList,\r\n    },{\r\n        type: \"checkList\",\r\n        listTitle: \"Sizes\",\r\n        list: sizeList,\r\n        handleChange: SizeHandleChange,\r\n        setChangeTrigger: setSizeList,\r\n        inputHandleChange: SizeInputHandleChange\r\n    },{\r\n        type: \"checkList\",\r\n        listTitle: \"Add-on\",\r\n        list: addOnList,\r\n        setChangeTrigger: setAddOnList,\r\n    },{\r\n        type: \"text\",\r\n        name: \"itemNumber\",\r\n        placeholder: \"itemNumber\",\r\n        ...inputError && {color: \"red\"}\r\n    },{\r\n        type: \"text\",\r\n        name: \"title\",\r\n        placeholder: \"title\",\r\n    },{\r\n        type: \"text\",\r\n        name: \"description\",\r\n        placeholder: \"description\",\r\n    },{\r\n        type: \"text\",\r\n        name: \"price\",\r\n        placeholder: \"price\",\r\n    }];\r\n\r\n    return(\r\n        <Modal\r\n            open={open}\r\n            onClose={handleToggle}\r\n            aria-labelledby=\"simple-modal-title\"\r\n            aria-describedby=\"simple-modal-description\"\r\n            style={{\r\n                overflow: 'auto',\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignContent: 'center',\r\n            }}>\r\n            <div className=\"AddMenuItem-Wrapper\">\r\n                <div className=\"inner-block\">\r\n                    <div className=\"form-container\" >\r\n                        <div className=\"Item-Details-Close\">\r\n                            <FontAwesomeIcon onClick={handleToggle} icon={faTimes} style={{margin: '1rem', cursor: 'pointer'}} className=\"fa-2x\"/>\r\n                        </div>\r\n                        <button onClick={()=> setToggleUploadImg(!toggleUploadImg)}>\r\n                            {toggleUploadImg ? \"upload image link\" : \"upload image\"}\r\n                        </button>\r\n                        { toggleUploadImg \r\n                            ? <ImageUpload setImageURL={setImageURL}/>\r\n                            : <MuiInputField\r\n                                bgColor=\"#fff\"\r\n                                type=\"text\"\r\n                                name=\"imgSrc\"\r\n                                label=\"image link\"\r\n                                onChange={(e)=> setImageURL(e.target.value)}/>}\r\n                        {inputError && <h2 style={{color: 'red'}}>This item number already exist</h2>}\r\n                        {\r\n                            <div className=\"Toggle-Block\">\r\n                                {toggleForLoopList(toggles, setToggles)}\r\n                            </div>\r\n                        }\r\n                        {\r\n                            inputSettings.map((inputSetting, index)=> {\r\n                                if(inputSetting.type === \"checkList\"){\r\n                                    if(toggles?.allergenToggle?.on === true && inputSetting.listTitle === \"Allergens\") {\r\n                                        return (\r\n                                            <MuiCheckboxList\r\n                                                key={`inputsetting-${index}`}\r\n                                                {...inputSetting}\r\n                                                handleChange={inputSetting.handleChange}\r\n                                                checkBoxState={inputSetting.list}\r\n                                                setCheckBoxStateUpdate={inputSetting.setChangeTrigger}/>\r\n                                        )\r\n                                    }\r\n                                    if(toggles?.sizeListToggle?.on === true && inputSetting.listTitle === \"Sizes\") {\r\n                                        return (\r\n                                            <MuiCheckboxListWithCheckedInput\r\n                                                key={`inputsetting-${index}`}\r\n                                                {...inputSetting}\r\n                                                inputHandleChange={inputSetting.inputHandleChange}\r\n                                                handleChange={inputSetting.handleChange}\r\n                                                checkBoxState={inputSetting.list}\r\n                                                setCheckBoxStateUpdate={inputSetting.setChangeTrigger}/>\r\n                                        )\r\n                                    }\r\n                                    if(toggles?.addOnsToggle?.on === true && inputSetting.listTitle === \"Add-on\") {\r\n                                        return (\r\n                                            <AddOnBlock \r\n                                                addOnList={addOnList}\r\n                                                setAddOnList={setAddOnList}\r\n                                            /> \r\n                                        )\r\n                                    }  \r\n                                }\r\n                                if(inputSetting.type === \"text\"){\r\n                                    return(\r\n                                        <MuiInputField\r\n                                            key={`${index}-inputsetting`}\r\n                                            {...inputSetting}\r\n                                            bgColor=\"#fff\"\r\n                                            name={inputSetting.name}\r\n                                            label={inputSetting.placeholder}\r\n                                            onChange={ formInputChange }/>)\r\n                                }\r\n                        })}\r\n                        <SubmitButton \r\n                            label=\"ADD ITEM\"\r\n                            disabled={ inputError }\r\n                            onClick={ handleSubmitEdit }/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n};\r\n\r\nexport default AddMenuItem;","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Forms\\FormDefault.js",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\ImageUpload\\ImageUpload.jsx",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Forms\\FormSubmitFunctions.js",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Forms\\ItemEdit.jsx",["320","321","322"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { MuiInputField, MuiCheckboxList, MuiCheckboxListWithCheckedInput } from 'Components/MUI';\r\nimport { SubmitButton } from 'Components/MUI/MuiComponents/MuiBtn';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport AddOnBlock from 'Components/Forms/Components/AddOnBlock';\r\nimport ImageUpload from '../ImageUpload/ImageUpload';\r\nimport { setUpdateMenu } from 'States/menuSlice';\r\n\r\nimport { AddMenuItemHandleChange, SizeHandleChange, SizeInputHandleChange, toggleForLoopList } from './FormSubmitFunctions';\r\nimport {\r\n    allergenListDefault,\r\n    sizeListDefault,\r\n    ItemToggles\r\n} from './FormDefault';\r\nimport './styles.scss';\r\n\r\nconst ItemEdit = ({itemDetails, handleClose}) => {\r\n    const {\r\n        imgSrc,\r\n        itemNumber,\r\n        title,\r\n        description,\r\n        price,\r\n    } = itemDetails;\r\n    const dispatch = useDispatch();\r\n    const [checked, setChecked] = useState(itemDetails.itemDisable ? itemDetails.itemDisable : false);\r\n    const [imageURL, setImageURL] = useState('');\r\n    const [inputError, setInputError] = useState(false);\r\n    const [toggleUploadImg, setToggleUploadImg] = useState(true);\r\n    const [toggles, setToggles] = useState(ItemToggles);\r\n    const [formInputs, setFormInputs] = useState({...itemDetails});\r\n    const [allergenList, setAllergenList] = useState(itemDetails?.options?.allergens || allergenListDefault);\r\n    const [sizeList, setSizeList] = useState(itemDetails?.options?.sizes || sizeListDefault);\r\n    const [addOnList, setAddOnList] = useState(itemDetails?.options?.['add-on']);\r\n\r\n    useEffect(()=>{\r\n        if(imageURL){\r\n            setFormInputs({\r\n                ...formInputs,\r\n                imgSrc: imageURL\r\n            })\r\n        }\r\n    },[imageURL])\r\n    const formInputChange = (e) => {\r\n        if(e.target.name === 'points' && (/[^\\d]/g).test(e.target.value)){\r\n            setInputError(true)\r\n        } else if (e.target.name === 'itemDisable'){\r\n            setChecked(!checked);\r\n            setFormInputs({ \r\n                ...formInputs,\r\n                [e.target.name] : !checked\r\n            })\r\n        }else {\r\n            setInputError(false)\r\n            setFormInputs({ \r\n                ...formInputs,\r\n                [e.target.name] : e.target.name === 'points' ? parseInt(e.target.value) : e.target.value\r\n            })\r\n        }\r\n    };\r\n\r\n    const handleSubmitEdit = () => {\r\n        const fullUpdateMenu = (formInputs.itemDisable === undefined) ? {...formInputs, itemDisable: false} : formInputs;\r\n\r\n        const isSizeListOn = sizeList.find(size => \r\n            (size.on === true) ? true : false\r\n        )\r\n\r\n        const isAllergenListOn = () => {\r\n            for (var item in allergenList){\r\n                if(allergenList[item]?.on === true) return true;\r\n            }\r\n        }\r\n\r\n        // console.log('fullUpdateMenu--->: ', {\r\n        //     ...fullUpdateMenu, \r\n        //     options: { \r\n        //         ...fullUpdateMenu?.options, \r\n        //         ...(isAllergenListOn() && {allergens: allergenList}),\r\n        //         ...(isSizeListOn !== undefined && {sizes: sizeList}),\r\n        //         ...(addOnList?.length > 0 && {\r\n        //             ['add-on']: addOnList\r\n        //         })\r\n        //     }})\r\n        dispatch(setUpdateMenu({\r\n            ...fullUpdateMenu, \r\n            options: { \r\n                ...fullUpdateMenu?.options, \r\n                ...(isAllergenListOn() && {allergens: allergenList}),\r\n                ...(isSizeListOn !== undefined && {sizes: sizeList}),\r\n                ...(addOnList?.length > 0 && {\r\n                    ['add-on']: addOnList\r\n                })\r\n            }}))\r\n        handleClose();\r\n    };\r\n\r\n    // input box setting\r\n    const inputSettings = [{\r\n            type: \"checkList\",\r\n            listTitle: \"Allergens\",\r\n            list: allergenList,\r\n            handleChange: AddMenuItemHandleChange,\r\n            setChangeTrigger: setAllergenList,\r\n        },{\r\n            type: \"checkList\",\r\n            listTitle: \"Sizes\",\r\n            list: sizeList,\r\n            handleChange: SizeHandleChange,\r\n            setChangeTrigger: setSizeList,\r\n            inputHandleChange: SizeInputHandleChange\r\n        },{\r\n            type: \"checkList\",\r\n            listTitle: \"Add-on\",\r\n            list: addOnList,\r\n            setChangeTrigger: setAddOnList,\r\n        },{\r\n            type: \"text\",\r\n            name: \"title\", \r\n            defaultValue: title,\r\n            placeholder: \"title\"\r\n        },{\r\n            type: \"text\",\r\n            name: \"price\", \r\n            defaultValue: price,\r\n            placeholder: \"price\",\r\n            className: inputError ? 'inputError' : ''\r\n        },{\r\n            type: \"text\",\r\n            name: \"description\", \r\n            rows: 4,\r\n            defaultValue: description,\r\n            placeholder: \"item description\",\r\n            className: inputError ? 'inputError' : ''\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <div className=\"ItemEdit-Wrapper\">\r\n            <div className=\"Item-Details-Edit-Wrapper\">\r\n                <div className=\"inner-block\">\r\n                    <div className=\"form-container\" >\r\n                        <button onClick={()=> setToggleUploadImg(!toggleUploadImg)}>\r\n                            {toggleUploadImg ? \"upload image link\" : \"upload image\"}\r\n                        </button>\r\n                        { toggleUploadImg \r\n                            ? <ImageUpload setImageURL={setImageURL}/>\r\n                            : <MuiInputField\r\n                                bgColor=\"#fff\"\r\n                                type=\"text\"\r\n                                name=\"imgSrc\"\r\n                                label=\"image link\"\r\n                                defaultValue={imgSrc}\r\n                                onChange={(e)=> setImageURL(e.target.value)}/>}\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox \r\n                                    checked={checked} \r\n                                    onChange={formInputChange} \r\n                                    name=\"itemDisable\" />}\r\n                            label=\"Disable\"\r\n                        />\r\n                        {\r\n                            <div className=\"Toggle-Block\">\r\n                                {toggleForLoopList(toggles, setToggles)}\r\n                            </div>\r\n                        }\r\n                        {\r\n                            inputSettings.map((inputSetting, index)=>{\r\n                                if(inputSetting.type === \"checkList\"){\r\n                                    if(toggles?.allergenToggle?.on === true && inputSetting.listTitle === \"Allergens\") {\r\n                                        return (\r\n                                            <MuiCheckboxList\r\n                                                key={`inputsetting-${index}`}\r\n                                                {...inputSetting}\r\n                                                handleChange={inputSetting.handleChange}\r\n                                                checkBoxState={inputSetting.list}\r\n                                                setCheckBoxStateUpdate={inputSetting.setChangeTrigger}/>\r\n                                        )\r\n                                    }\r\n                                    if(toggles?.sizeListToggle?.on === true && inputSetting.listTitle === \"Sizes\") {\r\n                                        return (\r\n                                            <MuiCheckboxListWithCheckedInput\r\n                                                key={`inputsetting-${index}`}\r\n                                                inputHandleChange={inputSetting.inputHandleChange}\r\n                                                handleChange={inputSetting.handleChange}\r\n                                                checkBoxState={inputSetting.list}\r\n                                                setCheckBoxStateUpdate={inputSetting.setChangeTrigger}/>\r\n                                        )\r\n                                    }\r\n                                    if(toggles?.addOnsToggle?.on === true && inputSetting.listTitle === \"Add-on\") {\r\n                                        return (\r\n                                            <AddOnBlock \r\n                                                addOnList={addOnList}\r\n                                                setAddOnList={setAddOnList}\r\n                                            /> \r\n                                        )\r\n                                    }\r\n                                }\r\n                                if(inputSetting.type === \"text\"){\r\n                                    return(\r\n                                        <MuiInputField\r\n                                            key={`${index}-inputsetting`}\r\n                                            {...inputSetting}\r\n                                            bgColor=\"#fff\"\r\n                                            name={inputSetting.name}\r\n                                            label={inputSetting.placeholder}\r\n                                            onChange={ formInputChange }/>)\r\n                                }\r\n                        })}\r\n                        <SubmitButton  \r\n                            label=\"SUBMIT UPDATE\"\r\n                            onClick={ handleSubmitEdit }/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"Item-Details-Edit-Wrapper\">\r\n                <div className=\"Item-Details-Close\">\r\n                    <FontAwesomeIcon onClick={handleClose} icon={faTimes} style={{margin: '1rem', cursor: 'pointer'}} className=\"fa-2x\"/>\r\n                </div>\r\n                <div>\r\n                    <div className=\"Item-Card-Img-block\">\r\n                        <span>{itemNumber}</span>\r\n                        <img src={imgSrc} alt={title}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"Item-Details-Text\">\r\n                    <h2>{title}</h2>\r\n                    <p>{description}</p>\r\n                    <span>${price}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ItemEdit;","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\ImageUpload\\styles.js",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\MUI\\MuiCheckboxListWithCheckedInput.jsx",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Forms\\Components\\AddOnBlock.jsx",["323","324","325"],"import React, { useState, useEffect } from 'react';\r\nimport { MuiInputField, MuiCheckboxList, MuiCheckboxListWithCheckedInput } from 'Components/MUI';\r\nimport ImageUpload from 'Components/ImageUpload/ImageUpload';\r\nimport { SubmitButton, EditButton } from 'Components/MUI/MuiComponents/MuiBtn';\r\nimport './styles.scss';\r\n\r\nconst initItemState = {\r\n    name: '',\r\n    price: 0,\r\n    details: '',\r\n}\r\n\r\nconst AddOnBlock = ({addOnList=[], setAddOnList}) => {\r\n    const [imageURL, setImageURL] = useState('');\r\n    const [toggleUploadImg, setToggleUploadImg] = useState(true);\r\n\r\n    const [inputError, setInputError] = useState(false);\r\n    const [addNewAddOn, setAddNewAddOn] = useState(false)\r\n    const [formInputs, setFormInputs] = useState({...initItemState});\r\n    const handleCreateNewAddOn = () => {\r\n        setAddNewAddOn(true);\r\n    };\r\n\r\n    useEffect(()=>{\r\n        if(imageURL){\r\n            setFormInputs({\r\n                ...formInputs,\r\n                imgSrc: imageURL\r\n            })\r\n        }\r\n    },[imageURL])\r\n\r\n    const formInputChange = (e) => {\r\n        if(e.target.name === 'price'){\r\n            setInputError(false)\r\n            setFormInputs({ \r\n                ...formInputs,\r\n                [e.target.name] :  e.target.value\r\n            })\r\n        } else {\r\n            setInputError(false)\r\n            setFormInputs({ \r\n                ...formInputs,\r\n                [e.target.name] :  e.target.value\r\n            })\r\n        }\r\n    };\r\n\r\n    const handleAddOnSubmit = () => {\r\n        setAddOnList(addOnList.concat(formInputs))\r\n        setAddNewAddOn(false)\r\n    }\r\n\r\n    const inputSettings = [\r\n        {\r\n            type: \"text\",\r\n            name: \"name\", \r\n            label: \"name\",\r\n            required: true\r\n        },{\r\n            type: \"text\",\r\n            name: \"price\", \r\n            label: \"price\",\r\n            required: true\r\n        },{\r\n            type: \"text\",\r\n            name: \"details\", \r\n            label: \"details\"\r\n        }\r\n    ];\r\n\r\n    const AddOnItem = ({item}) => (\r\n        <div className=\"AddOnItem-Wrap\">\r\n            <span className=\"AddOnItem-Name\">{item.name}</span>\r\n            <span className=\"AddOnItem-price\">$ {item.price}</span>\r\n            <span className=\"AddOnItem-details\">{item.details}</span>\r\n        </div>\r\n    );\r\n\r\n    return(\r\n        <div className=\"AddOnBlock-Wrapper\">\r\n            <h3>Add-on list</h3>\r\n            <div className=\"AddOnItemList-Wrap\">\r\n                {\r\n                    (addOnList?.length > 0) && addOnList.map((item, index)=> <AddOnItem key={`${index}-item-add-on`} item={item}/>)\r\n                }\r\n            </div>\r\n\r\n            { addNewAddOn &&\r\n                <>\r\n                    <button onClick={()=> setToggleUploadImg(!toggleUploadImg)}>\r\n                        {toggleUploadImg ? \"upload image link\" : \"upload image\"}\r\n                    </button>\r\n                    { toggleUploadImg \r\n                        ? <ImageUpload setImageURL={setImageURL}/>\r\n                        : <MuiInputField\r\n                            bgColor=\"#fff\"\r\n                            type=\"text\"\r\n                            name=\"imgSrc\"\r\n                            label=\"image link\"\r\n                            onChange={(e)=> setImageURL(e.target.value)}/>}\r\n                    {inputSettings.map((inputSetting)=> \r\n                        <MuiInputField \r\n                            key={inputSetting.name} \r\n                            { ...inputSetting } \r\n                            onChange={ formInputChange } \r\n                            onKeyPress={ formInputChange }/>\r\n                        )}\r\n                </>\r\n            }\r\n\r\n            { !addNewAddOn &&\r\n                <EditButton \r\n                    props={{\r\n                        width: '150px',\r\n                    }}\r\n                    label=\"NEW ADD-ON\"\r\n                    disabled={ inputError }\r\n                    onClick={ handleCreateNewAddOn }/>}\r\n            {addNewAddOn && \r\n                <SubmitButton\r\n                    props={{\r\n                        width: '200px',\r\n                    }}\r\n                    label=\"SUBMIT NEW ADD-ON\"\r\n                    onClick={handleAddOnSubmit} />}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default AddOnBlock;\r\n","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Constant\\FormatArrayFunction.js",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Constant\\ConstantFunction.js",["326"],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Constant\\Icons\\index.js",["327"],"import egg from './egg.png';\r\nimport fish from './fish.png';\r\nimport garlic from './garlic.png';\r\nimport milk from './milk.png';\r\nimport onion from './onion.png';\r\nimport peanuts from './peanuts.png';\r\nimport pepper from './pepper.png';\r\nimport shellfish from './shellfish.png';\r\nimport soybeans from './soybeans.png';\r\nimport wheat from './wheat.png';\r\n\r\nconst list = [egg, fish];\r\nconst style = {\r\n    width: '100%',\r\n    maxWidth: '30px',\r\n}\r\nexport const eggIcon = <img style={style} src={egg} alt=\"egg\" />;\r\nexport const fishIcon = <img style={style} src={fish} alt=\"fish\" />;\r\nexport const garlicIcon = <img style={style} src={garlic} alt=\"garlic\" />;\r\nexport const milkIcon = <img style={style} src={milk} alt=\"milk\" />;\r\nexport const onionIcon = <img style={style} src={onion} alt=\"onion\" />;\r\nexport const peanutsIcon = <img style={style} src={peanuts} alt=\"peanuts\" />;\r\nexport const pepperIcon = <img style={style} src={pepper} alt=\"pepper\" />;\r\nexport const shellfishIcon = <img style={style} src={shellfish} alt=\"shellfish\" />;\r\nexport const soybeansIcon = <img style={style} src={soybeans} alt=\"soybeans\" />;\r\nexport const wheatIcon = <img style={style} src={wheat} alt=\"wheat\" />;\r\n","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Constant\\FormatObjFunction.js",[],{"ruleId":"328","replacedBy":"329"},{"ruleId":"330","replacedBy":"331"},{"ruleId":"332","severity":1,"message":"333","line":17,"column":5,"nodeType":"334","endLine":17,"endColumn":19,"suggestions":"335"},{"ruleId":"332","severity":1,"message":"333","line":20,"column":7,"nodeType":"334","endLine":20,"endColumn":9,"suggestions":"336"},{"ruleId":"337","severity":1,"message":"338","line":2,"column":8,"nodeType":"339","messageId":"340","endLine":2,"endColumn":13},{"ruleId":"337","severity":1,"message":"341","line":5,"column":5,"nodeType":"339","messageId":"340","endLine":5,"endColumn":25},{"ruleId":"337","severity":1,"message":"342","line":16,"column":7,"nodeType":"339","messageId":"340","endLine":16,"endColumn":24},{"ruleId":"343","severity":1,"message":"344","line":10,"column":25,"nodeType":"345","endLine":10,"endColumn":74},{"ruleId":"332","severity":1,"message":"346","line":24,"column":7,"nodeType":"334","endLine":24,"endColumn":9,"suggestions":"347"},{"ruleId":"348","severity":1,"message":"349","line":9,"column":13,"nodeType":"345","endLine":9,"endColumn":32},{"ruleId":"337","severity":1,"message":"350","line":3,"column":58,"nodeType":"339","messageId":"340","endLine":3,"endColumn":67},{"ruleId":"337","severity":1,"message":"351","line":4,"column":18,"nodeType":"339","messageId":"340","endLine":4,"endColumn":30},{"ruleId":"337","severity":1,"message":"352","line":9,"column":8,"nodeType":"339","messageId":"340","endLine":9,"endColumn":17},{"ruleId":"353","severity":1,"message":"354","line":12,"column":15,"nodeType":"355","messageId":"356","endLine":12,"endColumn":17},{"ruleId":"332","severity":1,"message":"357","line":19,"column":7,"nodeType":"334","endLine":19,"endColumn":19,"suggestions":"358"},{"ruleId":"337","severity":1,"message":"359","line":1,"column":27,"nodeType":"339","messageId":"340","endLine":1,"endColumn":36},{"ruleId":"337","severity":1,"message":"360","line":13,"column":8,"nodeType":"339","messageId":"340","endLine":13,"endColumn":14},{"ruleId":"337","severity":1,"message":"361","line":1,"column":38,"nodeType":"339","messageId":"340","endLine":1,"endColumn":53},{"ruleId":"337","severity":1,"message":"362","line":4,"column":5,"nodeType":"339","messageId":"340","endLine":4,"endColumn":16},{"ruleId":"337","severity":1,"message":"338","line":10,"column":8,"nodeType":"339","messageId":"340","endLine":10,"endColumn":13},{"ruleId":"337","severity":1,"message":"363","line":16,"column":11,"nodeType":"339","messageId":"340","endLine":16,"endColumn":19},{"ruleId":"332","severity":1,"message":"364","line":27,"column":7,"nodeType":"334","endLine":27,"endColumn":22,"suggestions":"365"},{"ruleId":"337","severity":1,"message":"351","line":2,"column":18,"nodeType":"339","messageId":"340","endLine":2,"endColumn":30},{"ruleId":"337","severity":1,"message":"366","line":17,"column":12,"nodeType":"339","messageId":"340","endLine":17,"endColumn":22},{"ruleId":"332","severity":1,"message":"367","line":26,"column":7,"nodeType":"334","endLine":26,"endColumn":17,"suggestions":"368"},{"ruleId":"337","severity":1,"message":"369","line":13,"column":9,"nodeType":"339","messageId":"340","endLine":13,"endColumn":21},{"ruleId":"337","severity":1,"message":"370","line":2,"column":23,"nodeType":"339","messageId":"340","endLine":2,"endColumn":34},{"ruleId":"337","severity":1,"message":"371","line":3,"column":10,"nodeType":"339","messageId":"340","endLine":3,"endColumn":26},{"ruleId":"337","severity":1,"message":"372","line":3,"column":28,"nodeType":"339","messageId":"340","endLine":3,"endColumn":35},{"ruleId":"337","severity":1,"message":"373","line":3,"column":37,"nodeType":"339","messageId":"340","endLine":3,"endColumn":50},{"ruleId":"337","severity":1,"message":"374","line":9,"column":10,"nodeType":"339","messageId":"340","endLine":9,"endColumn":23},{"ruleId":"337","severity":1,"message":"375","line":9,"column":42,"nodeType":"339","messageId":"340","endLine":9,"endColumn":73},{"ruleId":"337","severity":1,"message":"376","line":10,"column":35,"nodeType":"339","messageId":"340","endLine":10,"endColumn":51},{"ruleId":"337","severity":1,"message":"377","line":10,"column":53,"nodeType":"339","messageId":"340","endLine":10,"endColumn":74},{"ruleId":"337","severity":1,"message":"378","line":10,"column":76,"nodeType":"339","messageId":"340","endLine":10,"endColumn":93},{"ruleId":"337","severity":1,"message":"379","line":13,"column":10,"nodeType":"339","messageId":"340","endLine":13,"endColumn":37},{"ruleId":"332","severity":1,"message":"380","line":39,"column":7,"nodeType":"334","endLine":39,"endColumn":37,"suggestions":"381"},{"ruleId":"337","severity":1,"message":"382","line":5,"column":24,"nodeType":"339","messageId":"340","endLine":5,"endColumn":34},{"ruleId":"332","severity":1,"message":"367","line":40,"column":7,"nodeType":"334","endLine":40,"endColumn":17,"suggestions":"383"},{"ruleId":"384","severity":1,"message":"385","line":79,"column":37,"nodeType":"386","messageId":"387","endLine":79,"endColumn":58,"fix":"388"},{"ruleId":"389","severity":1,"message":"390","line":173,"column":68,"nodeType":"391","messageId":"392","endLine":173,"endColumn":70},{"ruleId":"332","severity":1,"message":"367","line":47,"column":7,"nodeType":"334","endLine":47,"endColumn":17,"suggestions":"393"},{"ruleId":"384","severity":1,"message":"385","line":96,"column":21,"nodeType":"386","messageId":"387","endLine":96,"endColumn":42,"fix":"394"},{"ruleId":"389","severity":1,"message":"390","line":173,"column":68,"nodeType":"391","messageId":"392","endLine":173,"endColumn":70},{"ruleId":"337","severity":1,"message":"395","line":2,"column":25,"nodeType":"339","messageId":"340","endLine":2,"endColumn":40},{"ruleId":"337","severity":1,"message":"375","line":2,"column":42,"nodeType":"339","messageId":"340","endLine":2,"endColumn":73},{"ruleId":"332","severity":1,"message":"367","line":31,"column":7,"nodeType":"334","endLine":31,"endColumn":17,"suggestions":"396"},{"ruleId":"397","severity":1,"message":"398","line":54,"column":25,"nodeType":"399","messageId":"356","endLine":54,"endColumn":27},{"ruleId":"337","severity":1,"message":"400","line":12,"column":7,"nodeType":"339","messageId":"340","endLine":12,"endColumn":11},"no-native-reassign",["401"],"no-negated-in-lhs",["402"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["403"],["404"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'CognitoUserAttribute' is defined but never used.","'ApiGateWayUserURL' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'dispatch' and 'websocket'. Either include them or remove the dependency array.",["405"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'resetCart' is defined but never used.","'RemoveCircle' is defined but never used.","'AliPayBtn' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["406"],"'useEffect' is defined but never used.","'moment' is defined but never used.","'useLayoutEffect' is defined but never used.","'CardElement' is defined but never used.","'elements' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'chargePayment' and 'srcId'. Either include them or remove the dependency array.",["407"],"'inputError' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'formInputs'. Either include it or remove the dependency array. You can also do a functional update 'setFormInputs(f => ...)' if you only need 'formInputs' in the 'setFormInputs' call.",["408"],"'buyerDetails' is assigned a value but never used.","'useSelector' is defined but never used.","'orderDetailState' is defined but never used.","'setCart' is defined but never used.","'setCartUpdate' is defined but never used.","'MuiInputField' is defined but never used.","'MuiCheckboxListWithCheckedInput' is defined but never used.","'SizeHandleChange' is defined but never used.","'SizeInputHandleChange' is defined but never used.","'toggleForLoopList' is defined but never used.","'formatUpdateObjByKeyInArray' is defined but never used.","React Hook useEffect has a missing dependency: 'price'. Either include it or remove the dependency array.",["409"],"'EditButton' is defined but never used.",["410"],"no-useless-computed-key","Unnecessarily computed property ['add-on'] found.","Property","unnecessarilyComputedProperty",{"range":"411","text":"412"},"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["413"],{"range":"414","text":"412"},"'MuiCheckboxList' is defined but never used.",["415"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","'list' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"416","fix":"417"},{"desc":"418","fix":"419"},{"desc":"420","fix":"421"},{"desc":"422","fix":"423"},{"desc":"424","fix":"425"},{"desc":"426","fix":"427"},{"desc":"428","fix":"429"},{"desc":"426","fix":"430"},[3394,3404],"'add-on'",{"desc":"426","fix":"431"},[3910,3920],{"desc":"426","fix":"432"},"Update the dependencies array to be: [dispatch, userIsSignIn]",{"range":"433","text":"434"},"Update the dependencies array to be: [dispatch]",{"range":"435","text":"436"},"Update the dependencies array to be: [dispatch, websocket]",{"range":"437","text":"438"},"Update the dependencies array to be: [history, userSignIn]",{"range":"439","text":"440"},"Update the dependencies array to be: [chargePayment, paymentStatus, srcId]",{"range":"441","text":"442"},"Update the dependencies array to be: [formInputs, imageURL]",{"range":"443","text":"444"},"Update the dependencies array to be: [addAddOn, currentOrderAmount, price]",{"range":"445","text":"446"},{"range":"447","text":"444"},{"range":"448","text":"444"},{"range":"449","text":"444"},[503,517],"[dispatch, userIsSignIn]",[803,805],"[dispatch]",[928,930],"[dispatch, websocket]",[757,769],"[history, userSignIn]",[932,947],"[chargePayment, paymentStatus, srcId]",[1109,1119],"[formInputs, imageURL]",[1888,1918],"[addAddOn, currentOrderAmount, price]",[1766,1776],[2027,2037],[1020,1030]]