[{"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\index.js":"1","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\App.js":"2","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\serviceWorker.js":"3","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Store\\store.js":"4","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\PageRouter\\UserStatusProvider.jsx":"5","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\PageRouter\\index.jsx":"6","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\States\\headerSlice.js":"7","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\States\\userSlice.js":"8","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Pages\\index.jsx":"9","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Pages\\Header.jsx":"10","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Pages\\Home.jsx":"11","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Pages\\styles.js":"12","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\ImageBlock\\ImgPreNextCarousel.jsx":"13","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Card\\CardItem.jsx":"14","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\MenuBox\\index.jsx":"15","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\ImageBlock\\styles.js":"16","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Card\\styles.js":"17"},{"size":841,"mtime":1608053556333,"results":"18","hashOfConfig":"19"},{"size":252,"mtime":1608056702742,"results":"20","hashOfConfig":"19"},{"size":5227,"mtime":1608053646508,"results":"21","hashOfConfig":"19"},{"size":401,"mtime":1608054108419,"results":"22","hashOfConfig":"19"},{"size":395,"mtime":1608054051789,"results":"23","hashOfConfig":"19"},{"size":275,"mtime":1608053813701,"results":"24","hashOfConfig":"19"},{"size":1140,"mtime":1608053948816,"results":"25","hashOfConfig":"19"},{"size":8879,"mtime":1608053948827,"results":"26","hashOfConfig":"19"},{"size":104,"mtime":1608055378052,"results":"27","hashOfConfig":"19"},{"size":1105,"mtime":1608210785708,"results":"28","hashOfConfig":"19"},{"size":6708,"mtime":1608210909445,"results":"29","hashOfConfig":"19"},{"size":1920,"mtime":1608210949529,"results":"30","hashOfConfig":"19"},{"size":2186,"mtime":1608058575690,"results":"31","hashOfConfig":"19"},{"size":992,"mtime":1608209902775,"results":"32","hashOfConfig":"19"},{"size":1355,"mtime":1608213762417,"results":"33","hashOfConfig":"19"},{"size":1650,"mtime":1608060182712,"results":"34","hashOfConfig":"19"},{"size":2066,"mtime":1608211813905,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"8tjafe",{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\index.js",[],["75","76"],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\App.js",["77"],"import React from 'react';\r\nimport PageRouter from 'PageRouter';\r\nimport { Header, Home } from 'Pages';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n        <Header />\r\n        <PageRouter />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\serviceWorker.js",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Store\\store.js",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\PageRouter\\UserStatusProvider.jsx",["78"],"import React, { createContext, useEffect } from 'react';\r\n\r\nconst UserStatusCheck = createContext({});\r\n\r\nconst UserStatusProvider = ({ children }) => {\r\n\r\n  \r\n  \r\n  // console.log('UserStatusProvider-userIsSignIn--->', userIsSignIn)\r\n    return (\r\n        <UserStatusCheck.Provider >\r\n            {children}\r\n        </UserStatusCheck.Provider>\r\n    );\r\n};\r\n\r\nexport default UserStatusProvider;","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\PageRouter\\index.jsx",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\States\\headerSlice.js",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\States\\userSlice.js",["79"],"import { createSlice } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nimport {\r\n    CognitoUserPool,\r\n    CognitoUserAttribute,\r\n    CognitoUser,\r\n    AuthenticationDetails\r\n} from 'amazon-cognito-identity-js';\r\n\r\nconst poolData = {\r\n    UserPoolId: process.env.REACT_APP_USER_POOL,\r\n    ClientId: process.env.REACT_APP_CLIENT_ID\r\n};\r\n// const postURL = process.env.REACT_APP_API_GATEWAY_URL;\r\nconst userPool = new CognitoUserPool(poolData);\r\nconst ApiGateWayUserURL = process.env.REACT_APP_API_GATEWAY_USER;\r\nconst initState = {\r\n    picture: '',\r\n    preferredUsername: '',\r\n    familyName: '',\r\n    givenName: '',\r\n    currency: 'USD',\r\n    phoneNumber: '',\r\n    isAgent: false,\r\n    isLoggedIn: false,\r\n}\r\nexport const userSlice = createSlice({\r\n    name: 'userState',\r\n    initialState: initState,\r\n    reducers: {\r\n        setUserState: (state, action) => {\r\n            return {...state, ...action.payload};\r\n        },\r\n        setPicture: (state, action) => {\r\n            state.profilePicUrl = action.payload;\r\n        },\r\n        setPreferredUsername: (state, action) => {\r\n            state.preferred_username = action.payload;\r\n        },\r\n        setFamilyName: (state, action) => {\r\n            state.family_name = action.payload;\r\n        },\r\n        setGivenName: (state, action) => {\r\n            state.given_name = action.payload;\r\n        },\r\n        setCurrency: (state, action) => {\r\n            state.currency = action.payload;\r\n        },\r\n        setPhoneNumber: (state, action) => {\r\n            state.phoneNumber = action.payload;\r\n        },\r\n        setIsLoggedIn: (state, action) => {\r\n            state.isLoggedIn = action.payload;\r\n        },\r\n        setIsAgent: (state, action) => {\r\n            state.isAgent = action.payload;\r\n        },\r\n    },\r\n});\r\n\r\nexport const {\r\n    setUserState,\r\n    setPicture,\r\n    setPreferredUsername,\r\n    setFamilyName,\r\n    setGivenName,\r\n    setCurrency,\r\n    setPhoneNumber,\r\n    setIsLoggedIn,\r\n    setIsAgent,\r\n} = userSlice.actions;\r\n\r\n// AWS Cognito User Sign Up\r\nexport const userSignUp = ({\r\n    eMail, \r\n    phoneNumber, \r\n    password,\r\n    picture = null,\r\n    preferredUsername = null,\r\n    familyName = null,\r\n    givenName = null,\r\n    isAgent = null,\r\n    history\r\n}) => dispatch => {\r\n\r\n    const attributeList = [\r\n        new CognitoUserAttribute({Name: 'email', Value: eMail}),\r\n        new CognitoUserAttribute({Name: 'phone_number', Value: `+1${phoneNumber}`}),\r\n        new CognitoUserAttribute({Name: 'custom:isAgent', Value: isAgent }),\r\n        new CognitoUserAttribute({Name: 'picture', Value: picture }),\r\n        new CognitoUserAttribute({Name: 'preferred_username', Value: preferredUsername }),\r\n        new CognitoUserAttribute({Name: 'family_name', Value: familyName }),\r\n        new CognitoUserAttribute({Name: 'given_name', Value: givenName })\r\n    ];\r\n    // console.log('attributeList--->: ', attributeList)\r\n\r\n    userPool.signUp( eMail, password, attributeList, null, (err, result) => {\r\n        if (err) {\r\n            alert(('cognitoSlice' + err.message) || JSON.stringify('cognitoSlice' + err));\r\n            return;\r\n        } else {\r\n            var cognitoUser = result.user;\r\n            alert('user name is ' + cognitoUser.getUsername() + 'Please check your email for verification code');\r\n            history.push('/verify-account');\r\n\r\n             const params = {\r\n                subId: result.userSub,\r\n                eMail: eMail,\r\n                isAgent: isAgent,\r\n                picture: picture,\r\n                preferredUsername: preferredUsername,\r\n                familyName: familyName,\r\n                givenName: givenName,\r\n                phoneNumber: phoneNumber\r\n            }\r\n            \r\n            axios.post(ApiGateWayUserURL, params)\r\n                .then(res=> {\r\n                    console.log('signUp-res------------>: ', res);\r\n                })\r\n                .catch(error => console.log(error))\r\n        }\r\n    });\r\n};\r\n\r\n// AWS Cognito User Verification by Email\r\nexport const verificationAccount = (eMail, code, history) => dispatch => {\r\n    const userData = {\r\n        Username: eMail,\r\n        Pool: userPool,\r\n    };\r\n    const cognitoUser = new CognitoUser(userData);\r\n    cognitoUser.confirmRegistration(code, true, (err, result) => {\r\n        if (err) {\r\n            alert(err.message || JSON.stringify(err));\r\n            return;\r\n        } else {\r\n            alert('call result: ' + result);\r\n            history.push('/');\r\n            // trigger user data update for giving and recieving list card Id\r\n        }\r\n    })\r\n};\r\n\r\nexport const resendVerificationCode = (eMail) => dispatch => {\r\n    const userData = {\r\n        Username: eMail,\r\n        Pool: userPool,\r\n    };\r\n    const cognitoUser = new CognitoUser(userData);\r\n    cognitoUser.resendConfirmationCode(function(err, result) {\r\n        if (err) {\r\n            alert(err.message || JSON.stringify(err));\r\n            return;\r\n        }\r\n        alert(`your new code is send to: ${eMail}`)\r\n    });\r\n};\r\n\r\n// AWS Cognito Send Change Password Link\r\nexport const getForgotPassworCode= (eMail) => dispatch => {\r\n    const userData = {\r\n        Username: eMail,\r\n        Pool: userPool,\r\n    };\r\n    const cognitoUser = new CognitoUser(userData);\r\n\r\n    cognitoUser.forgotPassword({\r\n        onSuccess: (data) => {\r\n            // successfully initiated reset password request\r\n            console.log('CodeDeliveryData from forgotPassword: ' + data);\r\n        },\r\n        onFailure: (err) => {\r\n            alert(err.message || JSON.stringify(err));\r\n        },\r\n    });\r\n}\r\n\r\n// AWS Cognito Set New Password\r\nexport const setUpNewPassword = (eMail, code, newPassword) => dispatch => {\r\n    const userData = {\r\n        Username: eMail,\r\n        Pool: userPool,\r\n    };\r\n    const cognitoUser = new CognitoUser(userData);\r\n    cognitoUser.confirmPassword(code, newPassword, {\r\n        onSuccess() {\r\n            console.log('Password confirmed!');\r\n            alert('password successfully changed')\r\n        },\r\n        onFailure(err) {\r\n            console.log('Password not confirmed!');\r\n            alert('change password failed')\r\n        },\r\n    });\r\n}\r\n\r\n// AWS User Login\r\nexport const userLogin = ({eMail, password}) => dispatch => {\r\n    const authenticationData = {\r\n        Username: eMail,\r\n        Password: password,\r\n    };\r\n    const authenticationDetails = new AuthenticationDetails(\r\n        authenticationData\r\n    );\r\n\r\n    const userData = {\r\n        Username: eMail,\r\n        Pool: userPool,\r\n    };\r\n    const cognitoUser = new CognitoUser(userData);\r\n\r\n    cognitoUser.authenticateUser(authenticationDetails, {\r\n        onSuccess: (result) => {\r\n            axios.get(`${ApiGateWayUserURL}?subId=${result.idToken.payload.sub}`, {\r\n                headers: { 'Authorization' : result.idToken.jwtToken }\r\n            })\r\n                .then(res => {\r\n                    dispatch(setUserState(res.data));\r\n                    dispatch(setIsLoggedIn(true));\r\n                })\r\n                .catch(error => console.log('get user error: ', error))\r\n         },\r\n        onFailure: (err) => {\r\n            alert(err.message || JSON.stringify(err));\r\n        },\r\n    });\r\n};\r\n\r\n// AWS cognito Logout\r\nexport const userLogout = ({history}) => dispatch => {\r\n    if(userPool.getCurrentUser()){\r\n        // To Do: clear init data\r\n        userPool.getCurrentUser().signOut();\r\n        dispatch(setUserState(initState))\r\n        history.push('/');\r\n    };\r\n};\r\n\r\n// AWS Cognito Get User Data\r\nexport const userLoginCheck = () => dispatch => {\r\n    if (userPool.getCurrentUser() != null) {\r\n        userPool.getCurrentUser().getSession((err, session) => {\r\n            if(err){console.log('userPool.getCurrentUser() err---->', err)};\r\n\r\n            axios.get(`${ApiGateWayUserURL}?subId=${session?.idToken?.payload?.sub}`, {\r\n                headers: { 'Authorization' : session?.getIdToken()?.getJwtToken() }\r\n            })\r\n                .then(res => {\r\n                    dispatch(setUserState(res.data));\r\n                    dispatch(setIsLoggedIn(true));\r\n                })\r\n                .catch(error => console.log('get user error: ', error))\r\n          });\r\n    } \r\n};\r\n\r\n\r\n\r\nexport const userUserName = state => state?.userState?.preferredUsername || (`${state?.userState?.familyName} ${state?.userState?.givenName}`);\r\nexport const userProfileImage = state => state. userState.picture;\r\nexport const userCognitoState = state => state.userState;\r\nexport const userIsLoggedIn = state => state.userState.isLoggedIn;\r\nexport const userIsAgent = state => state.userState.isAgent;\r\nexport default userSlice.reducer;\r\n\r\n// https://www.youtube.com/watch?v=-qo5GFdN-Ck\r\n\r\n// Google\r\n// Google id: 215313791418-apetni40hv97o9g8cuafa0h7nhrvoooi.apps.googleusercontent.com\r\n// Google secret: xR4LA1FGWOrH_GwAIK8HSOP3\r\n","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Pages\\index.jsx",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Pages\\Header.jsx",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Pages\\Home.jsx",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Pages\\styles.js",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\ImageBlock\\ImgPreNextCarousel.jsx",["80","81"],"import React, { useState, useEffect } from 'react';\r\nimport { useStyles } from './styles';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { useSwipeable, Swipeable } from 'react-swipeable';\r\nimport { \r\n    faChevronRight,\r\n    faChevronLeft\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst ImgPreNextCarousel = ({imgSrc=[], selectedIndex, arrowEnabled=false}) => {\r\n    const classes = useStyles();\r\n    const [currentIndex, setCurrentIndex] = useState(0);\r\n    const [bgImgSrc, setBgImgSrc] = useState({\r\n        backgroundImage: `url(${imgSrc[currentIndex]})`,\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'center',\r\n        backgroundSize: 'cover'\r\n    })\r\n\r\n    useEffect(()=>{\r\n        setCurrentIndex(selectedIndex)\r\n    },[selectedIndex])\r\n    useEffect(()=>{\r\n        setBgImgSrc({\r\n            ...bgImgSrc,\r\n            backgroundImage: `url(${imgSrc[currentIndex]})`\r\n        })\r\n    },[currentIndex, imgSrc])\r\n    \r\n\r\n    const onClickNext = () => {\r\n        if(currentIndex === (imgSrc.length-1)){\r\n            setCurrentIndex(0)\r\n        } else {\r\n            setCurrentIndex(currentIndex + 1)\r\n        }\r\n    }\r\n\r\n    const onClickPrev = () => {\r\n        if(currentIndex === 0){\r\n            setCurrentIndex(imgSrc.length-1)\r\n        } else {\r\n            setCurrentIndex(currentIndex - 1)\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className={classes.carouselWrapper}>\r\n            {arrowEnabled && <div className={classes.prevBtn} onClick={onClickNext}>\r\n                <FontAwesomeIcon icon={faChevronLeft} className=\"fa-2x\"/>\r\n            </div>}\r\n            <div className={classes.ImgBKSnow}/>\r\n            <Swipeable \r\n                onSwipedLeft={ onClickNext } \r\n                onSwipedRight={ onClickPrev } \r\n                className={classes.imageBlock} \r\n                style={bgImgSrc}/>\r\n            {arrowEnabled && <div className={classes.nextBtn} onClick={onClickPrev}>\r\n                <FontAwesomeIcon icon={faChevronRight} className=\"fa-2x\"/>\r\n            </div>}\r\n            <div className={classes.ImgBKSnowBottom}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ImgPreNextCarousel;","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Card\\CardItem.jsx",["82","83"],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\MenuBox\\index.jsx",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\ImageBlock\\styles.js",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Card\\styles.js",["84","85"],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":3,"column":18,"nodeType":"92","messageId":"93","endLine":3,"endColumn":22},{"ruleId":"90","severity":1,"message":"94","line":1,"column":32,"nodeType":"92","messageId":"93","endLine":1,"endColumn":41},{"ruleId":"95","severity":1,"message":"96","line":262,"column":42,"nodeType":"97","messageId":"98","endLine":262,"endColumn":58,"fix":"99"},{"ruleId":"90","severity":1,"message":"100","line":4,"column":10,"nodeType":"92","messageId":"93","endLine":4,"endColumn":22},{"ruleId":"101","severity":1,"message":"102","line":28,"column":7,"nodeType":"103","endLine":28,"endColumn":29,"suggestions":"104"},{"ruleId":"90","severity":1,"message":"105","line":6,"column":9,"nodeType":"92","messageId":"93","endLine":6,"endColumn":16},{"ruleId":"106","severity":1,"message":"107","line":15,"column":17,"nodeType":"108","endLine":18,"endColumn":40},{"ruleId":"90","severity":1,"message":"109","line":2,"column":10,"nodeType":"92","messageId":"93","endLine":2,"endColumn":20},{"ruleId":"90","severity":1,"message":"110","line":3,"column":10,"nodeType":"92","messageId":"93","endLine":3,"endColumn":18},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"no-unused-vars","'Home' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property userState.","MemberExpression","unexpectedWhitespace",{"range":"113","text":"114"},"'useSwipeable' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'bgImgSrc'. Either include it or remove the dependency array. You can also do a functional update 'setBgImgSrc(b => ...)' if you only need 'bgImgSrc' in the 'setBgImgSrc' call.","ArrayExpression",["115"],"'history' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'makeStyles' is defined but never used.","'WrapText' is defined but never used.","no-global-assign","no-unsafe-negation",[8438,8440],".",{"desc":"116","fix":"117"},"Update the dependencies array to be: [bgImgSrc, currentIndex, imgSrc]",{"range":"118","text":"119"},[953,975],"[bgImgSrc, currentIndex, imgSrc]"]