[{"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\index.js":"1","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\App.js":"2","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\serviceWorker.js":"3","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Store\\store.js":"4","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\PageRouter\\UserStatusProvider.jsx":"5","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\PageRouter\\index.jsx":"6","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\States\\headerSlice.js":"7","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\States\\userSlice.js":"8","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Pages\\index.jsx":"9","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Pages\\Home.jsx":"10","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Pages\\Header.jsx":"11","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Pages\\styles.js":"12","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\ImageBlock\\ImgPreNextCarousel.jsx":"13","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\Card\\CardItem.jsx":"14","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\Card\\styles.js":"15","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\ImageBlock\\styles.js":"16","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\MenuBox\\index.jsx":"17"},{"size":841,"mtime":1608074083212,"results":"18","hashOfConfig":"19"},{"size":238,"mtime":1608074083184,"results":"20","hashOfConfig":"19"},{"size":5086,"mtime":1608074083212,"results":"21","hashOfConfig":"19"},{"size":389,"mtime":1608074083209,"results":"22","hashOfConfig":"19"},{"size":379,"mtime":1608074083197,"results":"23","hashOfConfig":"19"},{"size":262,"mtime":1608074083199,"results":"24","hashOfConfig":"19"},{"size":1102,"mtime":1608074083207,"results":"25","hashOfConfig":"19"},{"size":8607,"mtime":1608074083208,"results":"26","hashOfConfig":"19"},{"size":101,"mtime":1608074083204,"results":"27","hashOfConfig":"19"},{"size":6480,"mtime":1608172966711,"results":"28","hashOfConfig":"19"},{"size":1055,"mtime":1608074083201,"results":"29","hashOfConfig":"19"},{"size":1678,"mtime":1608173077304,"results":"30","hashOfConfig":"19"},{"size":2121,"mtime":1608074083191,"results":"31","hashOfConfig":"19"},{"size":869,"mtime":1608173142829,"results":"32","hashOfConfig":"19"},{"size":1302,"mtime":1608074083189,"results":"33","hashOfConfig":"19"},{"size":1593,"mtime":1608074083192,"results":"34","hashOfConfig":"19"},{"size":1359,"mtime":1608172690045,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1gqzz9k",{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\index.js",[],["76","77"],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\App.js",["78"],"import React from 'react';\nimport PageRouter from 'PageRouter';\nimport { Header, Home } from 'Pages';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Header />\n        <PageRouter />\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\serviceWorker.js",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Store\\store.js",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\PageRouter\\UserStatusProvider.jsx",["79"],"import React, { createContext, useEffect } from 'react';\n\nconst UserStatusCheck = createContext({});\n\nconst UserStatusProvider = ({ children }) => {\n\n  \n  \n  // console.log('UserStatusProvider-userIsSignIn--->', userIsSignIn)\n    return (\n        <UserStatusCheck.Provider >\n            {children}\n        </UserStatusCheck.Provider>\n    );\n};\n\nexport default UserStatusProvider;","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\PageRouter\\index.jsx",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\States\\headerSlice.js",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\States\\userSlice.js",["80"],"import { createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport {\n    CognitoUserPool,\n    CognitoUserAttribute,\n    CognitoUser,\n    AuthenticationDetails\n} from 'amazon-cognito-identity-js';\n\nconst poolData = {\n    UserPoolId: process.env.REACT_APP_USER_POOL,\n    ClientId: process.env.REACT_APP_CLIENT_ID\n};\n// const postURL = process.env.REACT_APP_API_GATEWAY_URL;\nconst userPool = new CognitoUserPool(poolData);\nconst ApiGateWayUserURL = process.env.REACT_APP_API_GATEWAY_USER;\nconst initState = {\n    picture: '',\n    preferredUsername: '',\n    familyName: '',\n    givenName: '',\n    currency: 'USD',\n    phoneNumber: '',\n    isAgent: false,\n    isLoggedIn: false,\n}\nexport const userSlice = createSlice({\n    name: 'userState',\n    initialState: initState,\n    reducers: {\n        setUserState: (state, action) => {\n            return {...state, ...action.payload};\n        },\n        setPicture: (state, action) => {\n            state.profilePicUrl = action.payload;\n        },\n        setPreferredUsername: (state, action) => {\n            state.preferred_username = action.payload;\n        },\n        setFamilyName: (state, action) => {\n            state.family_name = action.payload;\n        },\n        setGivenName: (state, action) => {\n            state.given_name = action.payload;\n        },\n        setCurrency: (state, action) => {\n            state.currency = action.payload;\n        },\n        setPhoneNumber: (state, action) => {\n            state.phoneNumber = action.payload;\n        },\n        setIsLoggedIn: (state, action) => {\n            state.isLoggedIn = action.payload;\n        },\n        setIsAgent: (state, action) => {\n            state.isAgent = action.payload;\n        },\n    },\n});\n\nexport const {\n    setUserState,\n    setPicture,\n    setPreferredUsername,\n    setFamilyName,\n    setGivenName,\n    setCurrency,\n    setPhoneNumber,\n    setIsLoggedIn,\n    setIsAgent,\n} = userSlice.actions;\n\n// AWS Cognito User Sign Up\nexport const userSignUp = ({\n    eMail, \n    phoneNumber, \n    password,\n    picture = null,\n    preferredUsername = null,\n    familyName = null,\n    givenName = null,\n    isAgent = null,\n    history\n}) => dispatch => {\n\n    const attributeList = [\n        new CognitoUserAttribute({Name: 'email', Value: eMail}),\n        new CognitoUserAttribute({Name: 'phone_number', Value: `+1${phoneNumber}`}),\n        new CognitoUserAttribute({Name: 'custom:isAgent', Value: isAgent }),\n        new CognitoUserAttribute({Name: 'picture', Value: picture }),\n        new CognitoUserAttribute({Name: 'preferred_username', Value: preferredUsername }),\n        new CognitoUserAttribute({Name: 'family_name', Value: familyName }),\n        new CognitoUserAttribute({Name: 'given_name', Value: givenName })\n    ];\n    // console.log('attributeList--->: ', attributeList)\n\n    userPool.signUp( eMail, password, attributeList, null, (err, result) => {\n        if (err) {\n            alert(('cognitoSlice' + err.message) || JSON.stringify('cognitoSlice' + err));\n            return;\n        } else {\n            var cognitoUser = result.user;\n            alert('user name is ' + cognitoUser.getUsername() + 'Please check your email for verification code');\n            history.push('/verify-account');\n\n             const params = {\n                subId: result.userSub,\n                eMail: eMail,\n                isAgent: isAgent,\n                picture: picture,\n                preferredUsername: preferredUsername,\n                familyName: familyName,\n                givenName: givenName,\n                phoneNumber: phoneNumber\n            }\n            \n            axios.post(ApiGateWayUserURL, params)\n                .then(res=> {\n                    console.log('signUp-res------------>: ', res);\n                })\n                .catch(error => console.log(error))\n        }\n    });\n};\n\n// AWS Cognito User Verification by Email\nexport const verificationAccount = (eMail, code, history) => dispatch => {\n    const userData = {\n        Username: eMail,\n        Pool: userPool,\n    };\n    const cognitoUser = new CognitoUser(userData);\n    cognitoUser.confirmRegistration(code, true, (err, result) => {\n        if (err) {\n            alert(err.message || JSON.stringify(err));\n            return;\n        } else {\n            alert('call result: ' + result);\n            history.push('/');\n            // trigger user data update for giving and recieving list card Id\n        }\n    })\n};\n\nexport const resendVerificationCode = (eMail) => dispatch => {\n    const userData = {\n        Username: eMail,\n        Pool: userPool,\n    };\n    const cognitoUser = new CognitoUser(userData);\n    cognitoUser.resendConfirmationCode(function(err, result) {\n        if (err) {\n            alert(err.message || JSON.stringify(err));\n            return;\n        }\n        alert(`your new code is send to: ${eMail}`)\n    });\n};\n\n// AWS Cognito Send Change Password Link\nexport const getForgotPassworCode= (eMail) => dispatch => {\n    const userData = {\n        Username: eMail,\n        Pool: userPool,\n    };\n    const cognitoUser = new CognitoUser(userData);\n\n    cognitoUser.forgotPassword({\n        onSuccess: (data) => {\n            // successfully initiated reset password request\n            console.log('CodeDeliveryData from forgotPassword: ' + data);\n        },\n        onFailure: (err) => {\n            alert(err.message || JSON.stringify(err));\n        },\n    });\n}\n\n// AWS Cognito Set New Password\nexport const setUpNewPassword = (eMail, code, newPassword) => dispatch => {\n    const userData = {\n        Username: eMail,\n        Pool: userPool,\n    };\n    const cognitoUser = new CognitoUser(userData);\n    cognitoUser.confirmPassword(code, newPassword, {\n        onSuccess() {\n            console.log('Password confirmed!');\n            alert('password successfully changed')\n        },\n        onFailure(err) {\n            console.log('Password not confirmed!');\n            alert('change password failed')\n        },\n    });\n}\n\n// AWS User Login\nexport const userLogin = ({eMail, password}) => dispatch => {\n    const authenticationData = {\n        Username: eMail,\n        Password: password,\n    };\n    const authenticationDetails = new AuthenticationDetails(\n        authenticationData\n    );\n\n    const userData = {\n        Username: eMail,\n        Pool: userPool,\n    };\n    const cognitoUser = new CognitoUser(userData);\n\n    cognitoUser.authenticateUser(authenticationDetails, {\n        onSuccess: (result) => {\n            axios.get(`${ApiGateWayUserURL}?subId=${result.idToken.payload.sub}`, {\n                headers: { 'Authorization' : result.idToken.jwtToken }\n            })\n                .then(res => {\n                    dispatch(setUserState(res.data));\n                    dispatch(setIsLoggedIn(true));\n                })\n                .catch(error => console.log('get user error: ', error))\n         },\n        onFailure: (err) => {\n            alert(err.message || JSON.stringify(err));\n        },\n    });\n};\n\n// AWS cognito Logout\nexport const userLogout = ({history}) => dispatch => {\n    if(userPool.getCurrentUser()){\n        // To Do: clear init data\n        userPool.getCurrentUser().signOut();\n        dispatch(setUserState(initState))\n        history.push('/');\n    };\n};\n\n// AWS Cognito Get User Data\nexport const userLoginCheck = () => dispatch => {\n    if (userPool.getCurrentUser() != null) {\n        userPool.getCurrentUser().getSession((err, session) => {\n            if(err){console.log('userPool.getCurrentUser() err---->', err)};\n\n            axios.get(`${ApiGateWayUserURL}?subId=${session?.idToken?.payload?.sub}`, {\n                headers: { 'Authorization' : session?.getIdToken()?.getJwtToken() }\n            })\n                .then(res => {\n                    dispatch(setUserState(res.data));\n                    dispatch(setIsLoggedIn(true));\n                })\n                .catch(error => console.log('get user error: ', error))\n          });\n    } \n};\n\n\n\nexport const userUserName = state => state?.userState?.preferredUsername || (`${state?.userState?.familyName} ${state?.userState?.givenName}`);\nexport const userProfileImage = state => state. userState.picture;\nexport const userCognitoState = state => state.userState;\nexport const userIsLoggedIn = state => state.userState.isLoggedIn;\nexport const userIsAgent = state => state.userState.isAgent;\nexport default userSlice.reducer;\n\n// https://www.youtube.com/watch?v=-qo5GFdN-Ck\n\n// Google\n// Google id: 215313791418-apetni40hv97o9g8cuafa0h7nhrvoooi.apps.googleusercontent.com\n// Google secret: xR4LA1FGWOrH_GwAIK8HSOP3\n","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Pages\\index.jsx",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Pages\\Home.jsx",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Pages\\Header.jsx",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Pages\\styles.js",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\ImageBlock\\ImgPreNextCarousel.jsx",["81","82"],"import React, { useState, useEffect } from 'react';\nimport { useStyles } from './styles';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useSwipeable, Swipeable } from 'react-swipeable';\nimport { \n    faChevronRight,\n    faChevronLeft\n} from '@fortawesome/free-solid-svg-icons';\n\nconst ImgPreNextCarousel = ({imgSrc=[], selectedIndex, arrowEnabled=false}) => {\n    const classes = useStyles();\n    const [currentIndex, setCurrentIndex] = useState(0);\n    const [bgImgSrc, setBgImgSrc] = useState({\n        backgroundImage: `url(${imgSrc[currentIndex]})`,\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'center',\n        backgroundSize: 'cover'\n    })\n\n    useEffect(()=>{\n        setCurrentIndex(selectedIndex)\n    },[selectedIndex])\n    useEffect(()=>{\n        setBgImgSrc({\n            ...bgImgSrc,\n            backgroundImage: `url(${imgSrc[currentIndex]})`\n        })\n    },[currentIndex, imgSrc])\n    \n\n    const onClickNext = () => {\n        if(currentIndex === (imgSrc.length-1)){\n            setCurrentIndex(0)\n        } else {\n            setCurrentIndex(currentIndex + 1)\n        }\n    }\n\n    const onClickPrev = () => {\n        if(currentIndex === 0){\n            setCurrentIndex(imgSrc.length-1)\n        } else {\n            setCurrentIndex(currentIndex - 1)\n        }\n    }\n\n    return(\n        <div className={classes.carouselWrapper}>\n            {arrowEnabled && <div className={classes.prevBtn} onClick={onClickNext}>\n                <FontAwesomeIcon icon={faChevronLeft} className=\"fa-2x\"/>\n            </div>}\n            <div className={classes.ImgBKSnow}/>\n            <Swipeable \n                onSwipedLeft={ onClickNext } \n                onSwipedRight={ onClickPrev } \n                className={classes.imageBlock} \n                style={bgImgSrc}/>\n            {arrowEnabled && <div className={classes.nextBtn} onClick={onClickPrev}>\n                <FontAwesomeIcon icon={faChevronRight} className=\"fa-2x\"/>\n            </div>}\n            <div className={classes.ImgBKSnowBottom}/>\n        </div>\n    );\n};\n\nexport default ImgPreNextCarousel;","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\Card\\CardItem.jsx",["83","84"],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\Card\\styles.js",["85","86"],"import { createUseStyles } from 'react-jss'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { WrapText } from '@material-ui/icons';\n\nexport const CardItemStyle = createUseStyles({\n    CardItem: {\n        display: 'flex',\n        flexDirection: 'column',\n        listStyle: 'none',\n        margin: '0px',\n        padding: '8px'\n    },\n    CardImgWrapper: {\n        height: '70%',\n    },\n    img: {\n        width: '100%',\n    },\n    CardLocationLi: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        '& span:first-child': {\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            fontSize: '12px',\n        },\n        '& span:last-child': {\n            fontSize: '12px',\n        },\n    },\n    CardTitleLi: {\n        textAlign: 'center',\n        fontSize: '26px',\n        fontWeight: '600',\n        margin: '16px',\n        display: 'flex',\n        flexDirection: 'column',\n        '& span': {\n            textAlign: 'center',\n            fontSize: '16px',\n            fontFamily: 'Caveat, cursive',\n        }\n    },\n    CardBtnWrapper: {\n        margin: '8px 0',\n    },\n    CardByLi: {\n        fontSize: '12px',\n        fontWeight: '600',\n        display: 'flex',\n        justifyContent: 'flex-end'\n    },\n});\n","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\ImageBlock\\styles.js",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\MenuBox\\index.jsx",[],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":3,"column":18,"nodeType":"93","messageId":"94","endLine":3,"endColumn":22},{"ruleId":"91","severity":1,"message":"95","line":1,"column":32,"nodeType":"93","messageId":"94","endLine":1,"endColumn":41},{"ruleId":"96","severity":1,"message":"97","line":262,"column":42,"nodeType":"98","messageId":"99","endLine":262,"endColumn":58,"fix":"100"},{"ruleId":"91","severity":1,"message":"101","line":4,"column":10,"nodeType":"93","messageId":"94","endLine":4,"endColumn":22},{"ruleId":"102","severity":1,"message":"103","line":28,"column":7,"nodeType":"104","endLine":28,"endColumn":29,"suggestions":"105"},{"ruleId":"91","severity":1,"message":"106","line":6,"column":9,"nodeType":"93","messageId":"94","endLine":6,"endColumn":16},{"ruleId":"107","severity":1,"message":"108","line":12,"column":17,"nodeType":"109","endLine":15,"endColumn":40},{"ruleId":"91","severity":1,"message":"110","line":2,"column":10,"nodeType":"93","messageId":"94","endLine":2,"endColumn":20},{"ruleId":"91","severity":1,"message":"111","line":3,"column":10,"nodeType":"93","messageId":"94","endLine":3,"endColumn":18},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"no-unused-vars","'Home' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property userState.","MemberExpression","unexpectedWhitespace",{"range":"114","text":"115"},"'useSwipeable' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'bgImgSrc'. Either include it or remove the dependency array. You can also do a functional update 'setBgImgSrc(b => ...)' if you only need 'bgImgSrc' in the 'setBgImgSrc' call.","ArrayExpression",["116"],"'history' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'makeStyles' is defined but never used.","'WrapText' is defined but never used.","no-global-assign","no-unsafe-negation",[8177,8179],".",{"desc":"117","fix":"118"},"Update the dependencies array to be: [bgImgSrc, currentIndex, imgSrc]",{"range":"119","text":"120"},[926,948],"[bgImgSrc, currentIndex, imgSrc]"]