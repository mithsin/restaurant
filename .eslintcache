[{"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\index.js":"1","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\App.js":"2","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\serviceWorker.js":"3","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Store\\store.js":"4","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\PageRouter\\UserStatusProvider.jsx":"5","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Providers\\StateWrapper.jsx":"6","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\PageRouter\\index.jsx":"7","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Pages\\index.jsx":"8","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\States\\userSlice.js":"9","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\States\\headerSlice.js":"10","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\States\\orderSlice.js":"11","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\States\\menuSlice.js":"12","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\PageRouter\\PrivateRoute.jsx":"13","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Pages\\Header.jsx":"14","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Pages\\Home.jsx":"15","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Pages\\NotExist.jsx":"16","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Pages\\Footer.jsx":"17","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Pages\\PhotoGallery.jsx":"18","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Pages\\styles.js":"19","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\AdminPages\\index.jsx":"20","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\OrderProcess\\index.jsx":"21","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\OrderProcess\\Payment.jsx":"22","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\OrderProcess\\Cart.jsx":"23","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\OrderProcess\\OrderReceipt.jsx":"24","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Card\\CardItem.jsx":"25","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\ImageBlock\\ReactResponsiveCarousel.jsx":"26","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\StaticDatas\\index.js":"27","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\AdminPages\\AdminLogin.jsx":"28","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\AdminPages\\Admin.jsx":"29","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\MenuBox\\index.jsx":"30","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Card\\styles.js":"31","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\AdminPages\\AdminOrders.jsx":"32","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\AdminPages\\AdminMenu.jsx":"33","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\StaticDatas\\footerData.js":"34","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\StaticDatas\\headerData.js":"35","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\StaticDatas\\socialMedia.js":"36","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\MUI\\index.jsx":"37","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Card\\ItemCard.jsx":"38","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\MUI\\MuiNumberInput.jsx":"39","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Card\\ItemCardList.jsx":"40","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\AdminComponents\\OrderBlock.jsx":"41","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Card\\ItemDetails.jsx":"42","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\MUI\\MuiButton.jsx":"43","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\MUI\\MuiInputField.jsx":"44","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\MUI\\styles.js":"45","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\ImageUpload\\ImageUpload.jsx":"46","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\ImageUpload\\styles.js":"47","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Forms\\ItemEdit.jsx":"48","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Forms\\AddCategory.jsx":"49","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Forms\\AddMenuItem.jsx":"50","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\AdminComponents\\MenuBlock.jsx":"51"},{"size":841,"mtime":1608053556333,"results":"52","hashOfConfig":"53"},{"size":389,"mtime":1609761940340,"results":"54","hashOfConfig":"53"},{"size":5227,"mtime":1608053646508,"results":"55","hashOfConfig":"53"},{"size":561,"mtime":1609761940359,"results":"56","hashOfConfig":"53"},{"size":395,"mtime":1608054051789,"results":"57","hashOfConfig":"53"},{"size":1399,"mtime":1609960977107,"results":"58","hashOfConfig":"53"},{"size":1006,"mtime":1609963745233,"results":"59","hashOfConfig":"53"},{"size":277,"mtime":1609872922676,"results":"60","hashOfConfig":"53"},{"size":2886,"mtime":1609761940356,"results":"61","hashOfConfig":"53"},{"size":1140,"mtime":1608053948816,"results":"62","hashOfConfig":"53"},{"size":2482,"mtime":1609761940356,"results":"63","hashOfConfig":"53"},{"size":2059,"mtime":1609974322205,"results":"64","hashOfConfig":"53"},{"size":510,"mtime":1609761940350,"results":"65","hashOfConfig":"53"},{"size":886,"mtime":1609761975143,"results":"66","hashOfConfig":"53"},{"size":2181,"mtime":1609960564574,"results":"67","hashOfConfig":"53"},{"size":375,"mtime":1609761974153,"results":"68","hashOfConfig":"53"},{"size":819,"mtime":1609761940352,"results":"69","hashOfConfig":"53"},{"size":434,"mtime":1609869976657,"results":"70","hashOfConfig":"53"},{"size":2313,"mtime":1609951386711,"results":"71","hashOfConfig":"53"},{"size":122,"mtime":1609872819173,"results":"72","hashOfConfig":"53"},{"size":155,"mtime":1609761940349,"results":"73","hashOfConfig":"53"},{"size":131,"mtime":1609761940348,"results":"74","hashOfConfig":"53"},{"size":7799,"mtime":1609858725375,"results":"75","hashOfConfig":"53"},{"size":1818,"mtime":1609761940348,"results":"76","hashOfConfig":"53"},{"size":992,"mtime":1608209902775,"results":"77","hashOfConfig":"53"},{"size":1281,"mtime":1609867128980,"results":"78","hashOfConfig":"53"},{"size":6958,"mtime":1609869942535,"results":"79","hashOfConfig":"53"},{"size":4014,"mtime":1609872652459,"results":"80","hashOfConfig":"53"},{"size":1418,"mtime":1609963879339,"results":"81","hashOfConfig":"53"},{"size":836,"mtime":1609761940347,"results":"82","hashOfConfig":"53"},{"size":2094,"mtime":1609761940342,"results":"83","hashOfConfig":"53"},{"size":1022,"mtime":1609874121745,"results":"84","hashOfConfig":"53"},{"size":1344,"mtime":1609970608944,"results":"85","hashOfConfig":"53"},{"size":53,"mtime":1609761940357,"results":"86","hashOfConfig":"53"},{"size":143,"mtime":1609868835673,"results":"87","hashOfConfig":"53"},{"size":365,"mtime":1609761940358,"results":"88","hashOfConfig":"53"},{"size":183,"mtime":1609761940346,"results":"89","hashOfConfig":"53"},{"size":1574,"mtime":1609761940341,"results":"90","hashOfConfig":"53"},{"size":1798,"mtime":1609761940345,"results":"91","hashOfConfig":"53"},{"size":1618,"mtime":1609965036227,"results":"92","hashOfConfig":"53"},{"size":2273,"mtime":1609874306032,"results":"93","hashOfConfig":"53"},{"size":2875,"mtime":1609761940342,"results":"94","hashOfConfig":"53"},{"size":590,"mtime":1609761940344,"results":"95","hashOfConfig":"53"},{"size":869,"mtime":1609881056744,"results":"96","hashOfConfig":"53"},{"size":1078,"mtime":1609882117699,"results":"97","hashOfConfig":"53"},{"size":1663,"mtime":1608057515894,"results":"98","hashOfConfig":"53"},{"size":448,"mtime":1609972514599,"results":"99","hashOfConfig":"53"},{"size":4827,"mtime":1609965371792,"results":"100","hashOfConfig":"53"},{"size":3273,"mtime":1609967607852,"results":"101","hashOfConfig":"53"},{"size":4853,"mtime":1609974203441,"results":"102","hashOfConfig":"53"},{"size":1403,"mtime":1609972932946,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"8tjafe",{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"106"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"106"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"106"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"106"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"106"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"106"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"106"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"106"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"106"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"106"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"106"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"106"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"106"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"106"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"106"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"106"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"106"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"106"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"106"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"224","messages":"225","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\index.js",[],["226","227"],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\App.js",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\serviceWorker.js",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Store\\store.js",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\PageRouter\\UserStatusProvider.jsx",["228"],"import React, { createContext, useEffect } from 'react';\r\n\r\nconst UserStatusCheck = createContext({});\r\n\r\nconst UserStatusProvider = ({ children }) => {\r\n\r\n  \r\n  \r\n  // console.log('UserStatusProvider-userIsSignIn--->', userIsSignIn)\r\n    return (\r\n        <UserStatusCheck.Provider >\r\n            {children}\r\n        </UserStatusCheck.Provider>\r\n    );\r\n};\r\n\r\nexport default UserStatusProvider;","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Providers\\StateWrapper.jsx",["229"],"import React, { useEffect } from 'react';\r\nimport { menuListState, setMenu } from 'States/menuSlice';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\nimport \"./styles.scss\";\r\n\r\nconst StateWrapper = ({children}) => {\r\n    const dispatch = useDispatch();\r\n    const currentMenuState = useSelector(menuListState)\r\n    useEffect(()=>{\r\n        let menuSession = sessionStorage.getItem('menu');\r\n        let timeSession = sessionStorage.getItem('menuTime');\r\n        const timeForceRefresh = (new Date() - new Date(timeSession) > 600000);\r\n        if((currentMenuState !== null && (currentMenuState?.length < 1) && !menuSession) || timeForceRefresh ){\r\n            axios.get(process.env.REACT_APP_API_RESTAURANT_MENU)\r\n                .then(res => {\r\n                    sessionStorage.setItem('menu', JSON.stringify(res.data.menu));\r\n                    sessionStorage.setItem('menuTime', new Date());\r\n                    dispatch(setMenu(res.data.menu));\r\n                })\r\n                .catch(err => console.log(err))\r\n        };\r\n        if(currentMenuState !== null && (currentMenuState?.length < 1) && menuSession){\r\n            dispatch(setMenu(JSON.parse(menuSession)));\r\n        }\r\n    },[])\r\n    return(\r\n        <div id=\"state-wrapper\" className=\"StateWrapperBody\">\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StateWrapper;","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\PageRouter\\index.jsx",["230"],"import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { Home, NotExist, PhotoGallery } from 'Pages';\r\nimport { Admin, AdminLogin } from 'AdminPages';\r\nimport { Cart, Payment, OrderReceipt } from 'Components/OrderProcess';\r\nimport PrivateRoute from './PrivateRoute';\r\n\r\n\r\nconst PageRouter = () => {\r\n  return (\r\n    <Switch>\r\n        <Route exact path=\"/\" component = { Home } />\r\n        <Route exact path=\"/photo-gallery\" component = { PhotoGallery } />\r\n        <Route exact path=\"/cart\" component = { Cart } />\r\n        <Route exact path=\"/payment\" component = { Payment } />\r\n        <Route exact path=\"/order-receipt\" component = { OrderReceipt } />\r\n        <Route exact path=\"/ichot/admin-login\" component = { AdminLogin } />\r\n        <Route exact path=\"/admin\" component = { Admin } />\r\n        {/* <PrivateRoute exact path=\"/admin\" component = { Admin } /> */}\r\n        <Route path='*' component={NotExist} />\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default PageRouter;\r\n","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Pages\\index.jsx",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\States\\userSlice.js",["231"],"import { createSlice } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nimport {\r\n    CognitoUserPool,\r\n    CognitoUserAttribute,\r\n    CognitoUser,\r\n    AuthenticationDetails\r\n} from 'amazon-cognito-identity-js';\r\n\r\nconst poolData = {\r\n    UserPoolId: process.env.REACT_APP_USER_POOL,\r\n    ClientId: process.env.REACT_APP_CLIENT_ID\r\n};\r\n// const postURL = process.env.REACT_APP_API_GATEWAY_URL;\r\nconst userPool = new CognitoUserPool(poolData);\r\nconst ApiGateWayUserURL = process.env.REACT_APP_API_GATEWAY_USER;\r\nconst initState = {\r\n    isLoggedIn: false,\r\n}\r\nexport const userSlice = createSlice({\r\n    name: 'userState',\r\n    initialState: initState,\r\n    reducers: {\r\n        setUserState: (state, action) => {\r\n            return {...state, ...action.payload};\r\n        },\r\n        setIsLoggedIn: (state, action) => {\r\n            state.isLoggedIn = action.payload;\r\n        },\r\n    },\r\n});\r\n\r\nexport const {\r\n    setUserState,\r\n    setIsLoggedIn,\r\n} = userSlice.actions;\r\n\r\n// AWS User Login\r\nexport const userLogin = ({userName, password, history}) => dispatch => {\r\n    const authenticationData = {\r\n        Username: userName,\r\n        Password: password,\r\n    };\r\n    const authenticationDetails = new AuthenticationDetails(\r\n        authenticationData\r\n    );\r\n\r\n    const userData = {\r\n        Username: userName,\r\n        Pool: userPool,\r\n    };\r\n    const cognitoUser = new CognitoUser(userData);\r\n\r\n    cognitoUser.authenticateUser(authenticationDetails, {\r\n        onSuccess: (result) => {\r\n            dispatch(setIsLoggedIn(true));\r\n            history.push('/admin');\r\n         },\r\n        onFailure: (err) => {\r\n            alert(err.message || JSON.stringify(err));\r\n        },\r\n    });\r\n};\r\n\r\n// AWS cognito Logout\r\nexport const userLogout = ({history}) => dispatch => {\r\n    if(userPool.getCurrentUser()){\r\n        // To Do: clear init data\r\n        userPool.getCurrentUser().signOut();\r\n        dispatch(setUserState(initState))\r\n        history.push('/');\r\n    };\r\n};\r\n\r\n// AWS Cognito Get User Data\r\nexport const userLoginCheck = () => dispatch => {\r\n    if (userPool.getCurrentUser() != null) {\r\n        userPool.getCurrentUser().getSession((err, session) => {\r\n            if(err){console.log('userPool.getCurrentUser() err---->', err)};\r\n\r\n            axios.get(`${ApiGateWayUserURL}?subId=${session?.idToken?.payload?.sub}`, {\r\n                headers: { 'Authorization' : session?.getIdToken()?.getJwtToken() }\r\n            })\r\n                .then(res => {\r\n                    dispatch(setUserState(res.data));\r\n                    dispatch(setIsLoggedIn(true));\r\n                })\r\n                .catch(error => console.log('get user error: ', error))\r\n          });\r\n    } \r\n};\r\n\r\nexport const userCognitoState = state => state.userState;\r\nexport const userIsLoggedIn = state => state.userState.isLoggedIn;\r\nexport default userSlice.reducer;\r\n","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\States\\headerSlice.js",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\States\\orderSlice.js",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\States\\menuSlice.js",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\PageRouter\\PrivateRoute.jsx",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Pages\\Header.jsx",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Pages\\Home.jsx",["232","233","234"],"import React, { useState } from 'react';\r\nimport { homeStyles } from './styles';\r\nimport ReactResponsiveCarousel from 'Components/ImageBlock/ReactResponsiveCarousel';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { menuListState } from 'States/menuSlice';\r\nimport { orderDetailState, postNewOrder, setCartUpdate, setDeleteItem } from 'States/orderSlice';\r\nimport { useSelector } from 'react-redux';\r\nimport CardItem from 'Components/Card/CardItem';\r\nimport MenuBox from 'Components/MenuBox';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faShoppingCart } from '@fortawesome/free-solid-svg-icons';\r\nimport {\r\n    imageList,\r\n} from 'StaticDatas';\r\n\r\nconst Home = () => {\r\n    let history = useHistory();\r\n    const cartOrderList = useSelector(orderDetailState);\r\n    const categoryList = useSelector(menuListState)\r\n    const classes = homeStyles();\r\n    const [selected, setSelected] = useState(0)\r\n   \r\n\r\n    return(\r\n        <div className={classes.wrapper}>\r\n            {(cartOrderList.length > 0) && \r\n                <span className={classes.HomeOrderOnlineSpan} onClick={()=> history.push('/cart')}>\r\n                    <p>{cartOrderList.length}</p>\r\n                    <FontAwesomeIcon icon={faShoppingCart} className=\"fa-2x\"/>\r\n                </span>\r\n            }\r\n            <div className={classes.ImgBlock}>\r\n                <ReactResponsiveCarousel \r\n                    imgList={imageList}/>\r\n            </div>\r\n            <div className={classes.CategoryWrapper}>\r\n                <h1>MENU</h1>\r\n                <div className={classes.CategoryList}>\r\n                    {categoryList.map((category, index)=> (\r\n                        <CardItem \r\n                            cardStatus={category} \r\n                            key={`${index}-category`}\r\n                            index={index}\r\n                            setSelected={setSelected}/>\r\n                    ))}\r\n                </div>\r\n                <div className={classes.MenuOutterWrap}>\r\n                    <MenuBox {...categoryList[selected]} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home; ","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Pages\\NotExist.jsx",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Pages\\Footer.jsx",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Pages\\PhotoGallery.jsx",["235"],"import React from 'react';\r\nimport { photoGallery } from 'StaticDatas';\r\n\r\nconst PhotoGallery = () => {\r\n    return(\r\n        <ul className=\"PhotoGallery-wrapper\">\r\n            {photoGallery.map((image, index)=> \r\n                <li key={`image-${index}-gallery`}>\r\n                    <img src={image} alt={`image-${index}-gallery`}/>\r\n                </li>\r\n            )}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default PhotoGallery;","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Pages\\styles.js",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\AdminPages\\index.jsx",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\OrderProcess\\index.jsx",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\OrderProcess\\Payment.jsx",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\OrderProcess\\Cart.jsx",["236","237","238","239","240"],"import React, { useState, useEffect, useCallback, useMemo } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { orderDetailState, postNewOrder, setCartUpdate, setDeleteItem } from 'States/orderSlice';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport { AddCircle, RemoveCircle } from '@material-ui/icons';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { FormControl } from '@material-ui/core';\r\nimport { MuiButton } from 'Components/MUI';\r\nimport moment from 'moment';\r\n\r\n\r\nimport './styles.scss';\r\n\r\nconst Cart = ({}) => {\r\n    let history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const [totalAmount, setTotalAmount] = useState(0)\r\n    const [buyerDetails, setBuyerDetails] = useState({})\r\n    const [disableCheckout, setDisableCheckout] = useState(true)\r\n    const cartOrderList = useSelector(orderDetailState);\r\n    // const wsUri = process.env.REACT_APP_API_WEBSOCKETS;\r\n    // const websocket = new WebSocket(wsUri);\r\n    useEffect(()=>{\r\n        cartOrderList && \r\n        setTotalAmount(cartOrderList.reduce((accumulator, current) => {\r\n            return (accumulator + (parseInt(current.orderAmount) * current.price))\r\n        }, 0));\r\n    },[cartOrderList])\r\n    useEffect(()=>{\r\n        if(!buyerDetails.name || !buyerDetails.phoneNumber){ setDisableCheckout(true)} \r\n        if(buyerDetails.name && buyerDetails.phoneNumber) {setDisableCheckout(false)}\r\n    },[buyerDetails])\r\n    \r\n    // this should happen when payment successful\r\n        // const onMessage = (evt) => {\r\n        //     console.log('onMessage: ', evt)\r\n        //     evt?.data && history.push('/order-receipt')\r\n\r\n        // }\r\n        // websocket.onmessage = function(evt) { onMessage(evt) };\r\n\r\n        // const handleCheckOutWebsocket = (message) => {\r\n\r\n        //     const sendMessage = {\r\n        //         message : \"New order available\", \r\n        //         action : \"message\"\r\n        //     }\r\n            \r\n        //     websocket.send(JSON.stringify(sendMessage));\r\n        // }\r\n    // ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^//\r\n\r\n  \r\n    // This should be the function when payment successful\r\n        // Dispatch order to database and redux store\r\n        // the change page to receipt\r\n    const onPaymentSuccessful = (param) => {\r\n        dispatch(postNewOrder(param))\r\n    }\r\n\r\n    const handleCheckOut = () => {\r\n        const param = {\r\n            orderNumber: '',\r\n            orderTime: moment().format('MMMM Do YYYY, h:mm:ss a'),\r\n            fullFillTime: '',\r\n            fullFillStatus: false,\r\n            itemDetails: cartOrderList,\r\n            buyerDetails: {...buyerDetails}\r\n        }\r\n        onPaymentSuccessful(param)\r\n        history.push('/order-receipt')\r\n    }\r\n\r\n\r\n    const buyerInputChange = (event) => {\r\n        event.preventDefault();\r\n        setBuyerDetails({...buyerDetails, [event.target.name]: event.target.value})\r\n    }\r\n\r\n    const CartItemList = ({ cartItemDetail }) => {\r\n        const {\r\n            imgSrc,\r\n            itemNumber,\r\n            itemDetails,\r\n            title,\r\n            price,\r\n            orderAmount,\r\n        } = cartItemDetail;\r\n        const dispatch = useDispatch();\r\n        const [currentOrderAmount, setCurrentOrderAmount] = useState(orderAmount)\r\n        const updatePrice = (parseInt(orderAmount) * price).toFixed(2);\r\n\r\n        const handleCheckoutAddUpdate = (num) => {\r\n            if(parseInt(currentOrderAmount) < num){\r\n                setCurrentOrderAmount(parseInt(currentOrderAmount + 1))\r\n                dispatch(setCartUpdate({...cartItemDetail, orderAmount: parseInt(currentOrderAmount) + 1}))\r\n            }\r\n        }\r\n        const handleCheckoutMinusUpdate = (num) => {\r\n            if(parseInt(currentOrderAmount) > num){\r\n                setCurrentOrderAmount(parseInt(currentOrderAmount) - 1)\r\n                dispatch(setCartUpdate({...cartItemDetail, orderAmount: parseInt(currentOrderAmount) - 1}))\r\n            }\r\n            if (parseInt(currentOrderAmount) <= num) {\r\n                dispatch(setDeleteItem({...cartItemDetail}))\r\n            }\r\n        }\r\n\r\n        return(\r\n            <ul className=\"CartItemList-block\">\r\n                <li className=\"CartItemList-img-block\"><img src={imgSrc} alt={`${title}-img`} /></li>\r\n                <li className=\"CartItemList-desc-block\">\r\n                    <span>{itemNumber}</span>\r\n                    <span>{title}</span>\r\n                </li>\r\n                <li className=\"CartItemList-price-block\">\r\n                    <span className=\"InputNumberWrapper\">\r\n                        <TextField\r\n                            id=\"filled-number\"\r\n                            label=\"\"\r\n                            type=\"number\"\r\n                            value={currentOrderAmount}\r\n                            variant=\"outlined\"\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            InputProps={{\r\n                                endAdornment: (\r\n                                    <span className=\"AddMinusIconWrapper\">\r\n                                        <AddCircle onClick={()=>handleCheckoutAddUpdate(10)} style={{color: 'green', size: '16px', cursor: 'pointer'}}/>\r\n                                        <RemoveCircle onClick={()=>handleCheckoutMinusUpdate(1)} style={{color: 'red', size: '16px', cursor: 'pointer'}}/>\r\n                                    </span>\r\n                            )}}/>\r\n                        \r\n                    </span>\r\n                    ${updatePrice}\r\n                </li>\r\n            </ul>\r\n        )\r\n    };\r\n\r\n    console.log('disableCheckout-->: ', disableCheckout)\r\n\r\n    return (\r\n        <div className=\"Cart-Wrapper\">\r\n            <h1>ORDER DETAILS</h1>\r\n            <div className=\"Cart-User-Info\">\r\n            <FormControl>\r\n                <TextField required name=\"name\" id=\"Checkout-Name\" label=\"Name\" onChange={buyerInputChange} />\r\n                <TextField name=\"address\" id=\"Checkout-Address\" label=\"Address\" onChange={buyerInputChange} />\r\n                <TextField required name=\"phoneNumber\" id=\"Checkout-PhoneNumber\" label=\"Phone Number\" onChange={buyerInputChange} />\r\n                <TextField name=\"eMail\" id=\"Checkout-EMail\" label=\"E-Mail\" onChange={buyerInputChange} />\r\n            </FormControl>\r\n            </div>\r\n            <h2 className=\"Cart-Items-in-cart-title\">Items in Cart</h2>\r\n            <div className=\"Cart-Added-Items\">                \r\n                { (cartOrderList.length < 1) \r\n                    ? <h2>YOU HAVE NO ADDED ITEM</h2>\r\n                    : cartOrderList.map((item, idx)=>(\r\n                        <CartItemList \r\n                            key={`${item.title}-${idx}`}\r\n                            cartItemDetail={item} />\r\n                    ))\r\n                }\r\n            </div>\r\n            <div className=\"Cart-Total-Amount\">\r\n                <h4>tax: ${(totalAmount * .07).toFixed(2)}</h4>\r\n                <h3>TOTAL: ${(totalAmount * 1.07).toFixed(2)}</h3>\r\n            </div>\r\n            {/* <button onClick={handleCheckOut}>CHECK OUT</button> */}\r\n            <MuiButton \r\n                props={{\r\n                    color: '#717171',\r\n                    bgColor: '#a2e6fd',\r\n                    hColor: \"white\",\r\n                    hbgColor: \"#287d9a\"\r\n                }}\r\n                disabled={ (disableCheckout || (cartOrderList.length < 1)) ? true : false }\r\n                label='CHECK OUT'\r\n                onClick={handleCheckOut}\r\n                onKeyPress={handleCheckOut}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cart;","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\OrderProcess\\OrderReceipt.jsx",["241"],"import React, { useEffect } from 'react';\r\nimport { MuiButton } from 'Components/MUI';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './styles.scss';\r\n\r\nconst OrderReceipt = () => {\r\n    let history = useHistory();\r\n    const wsUri = process.env.REACT_APP_API_WEBSOCKETS;\r\n    const websocket = new WebSocket(wsUri);\r\n    \r\n    // triiger websocket to send order on load, and disable button until websocket successfully update the order\r\n    useEffect(()=>{\r\n        websocket.onopen = (event) => {        \r\n            // console.log('event on open -->: ', event)  \r\n            const sendMessage = {\r\n                message : \"New order available\", \r\n                action : \"message\"\r\n            }\r\n            // console.log('websocket state-->: ', websocket.readyState)\r\n            websocket.send(JSON.stringify(sendMessage));\r\n        }\r\n    },[])\r\n    // const onMessage = (evt) => {\r\n    //     console.log('evnt-data----->: ', evt.data)\r\n    //     evt?.data && setDisableClose(false)\r\n    //     evt?.data && websocket.close();\r\n    // }\r\n    // websocket.onmessage = function(evt) { onMessage(evt) };\r\n    const handleOnClick = () => {\r\n        websocket.close();\r\n        history.push('/')\r\n    };\r\n\r\n    return(\r\n        <div className=\"OrderReceipt-wrapper\">\r\n            <h2>Order Receipt</h2>\r\n            <div>\r\n                YOUR ORDER DETAIL\r\n            </div>\r\n            <MuiButton \r\n                props={{\r\n                    color: '#717171',\r\n                    bgColor: '#a2e6fd',\r\n                    hColor: \"white\",\r\n                    hbgColor: \"#287d9a\"\r\n                }}\r\n                label='CLOSE'\r\n                onClick={handleOnClick}\r\n                onKeyPress={handleOnClick}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OrderReceipt;","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Card\\CardItem.jsx",["242","243"],"import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { CardItemStyle } from './styles';\r\n\r\nconst CardItem = ({cardStatus, index, setSelected}) => {\r\n    let history = useHistory();\r\n    const classes = CardItemStyle();\r\n        \r\n    return(\r\n        <ul className={classes.CardItem} onClick={()=> setSelected(index)}>\r\n            <li className={classes.CardTitleLi}>\r\n                {cardStatus.title}\r\n            </li>\r\n            <li className={classes.CardImgWrapper}>\r\n                <img\r\n                    className={classes.img} \r\n                    src={cardStatus.imgSrc}\r\n                    alt='card image' />\r\n            </li>\r\n            <li className={classes.CardTitleShowMenu}>\r\n                SHOW MENU\r\n                {/* <span>\r\n                    {cardStatus.descriptions}\r\n                </span> */}\r\n                {/* <button>SHOW MENU</button> */}\r\n            </li>\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default CardItem;","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\ImageBlock\\ReactResponsiveCarousel.jsx",["244"],"import React from 'react';\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport { Carousel } from 'react-responsive-carousel';\r\n\r\nconst ReactResponsiveCarousel = ({imgList}) => {\r\n\r\n    const createCarouselItemImage = (image, index, options = {}) => (\r\n        <div key={`ReactResponsiveCarousel-${index}`}>\r\n            <img src={image} />\r\n        </div>\r\n    );\r\n    \r\n    const baseChildren = <div>{imgList.map(createCarouselItemImage)}</div>;\r\n\r\n    const getConfigurableProps  = {\r\n        showArrows:  true,\r\n        showStatus:  true,\r\n        showIndicators:  false,\r\n        infiniteLoop:  true,\r\n        showThumbs:  false,\r\n        useKeyboardArrows:  true,\r\n        autoPlay:  true,\r\n        stopOnHover:  true,\r\n        swipeable:  true,\r\n        dynamicHeight:  true,\r\n        emulateTouch:  true,\r\n        thumbWidth:  100, \r\n        selectedItem:  0, \r\n        interval:  3000, \r\n        transitionTime:  150, \r\n        swipeScrollTolerance:  5,\r\n        centerSlidePercentage: 80,\r\n    };\r\n\r\n    return (\r\n        <Carousel \r\n            infiniteLoop\r\n            centerMode\r\n            {...getConfigurableProps}\r\n        >\r\n            {baseChildren.props.children}\r\n        </Carousel>\r\n    );\r\n};\r\n\r\nexport default ReactResponsiveCarousel;","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\StaticDatas\\index.js",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\AdminPages\\AdminLogin.jsx",["245"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { MuiButton, MuiInputField } from 'Components/MUI';\r\nimport { userIsLoggedIn, userLogin, userLogout } from 'States/userSlice';\r\n\r\nimport './styles.scss';\r\n\r\nconst AdminLogin = () => {\r\n    const userSignIn = useSelector(userIsLoggedIn);\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const [authInput, setAuthInput] = useState({});\r\n    const [inputErrorMessage, setInputErrorMessage] = useState('');\r\n\r\n    useEffect(()=>{\r\n        (userSignIn === true) && (history.push(\"/admin\"));\r\n    },[userSignIn]);\r\n    const LoginSubmitKeyPress = (e) => {\r\n        if(e.keyCode === 13 || e.charCode === 13 ||  e.key === 'Enter'){\r\n            e.preventDefault();\r\n            (authInput.userName && authInput.password) && dispatch(userLogin({...authInput, history}));\r\n            (!authInput.userName || !authInput.password) \r\n                ? setInputErrorMessage('FILL IN MISSING INPUT FIELD') \r\n                : setInputErrorMessage('');\r\n        }\r\n    }\r\n    const LoginSubmit = () => {\r\n        (authInput.userName && authInput.password) && dispatch(userLogin({...authInput, history}));\r\n        (!authInput.userName || !authInput.password) \r\n            ? setInputErrorMessage('FILL IN MISSING INPUT FIELD') \r\n            : setInputErrorMessage('');\r\n    };\r\n\r\n    // store all input changes\r\n    const formInputChange = (e) => {\r\n        const inputValue = (\r\n            ((e.target.name === 'number') && parseInt(e.target.value)) || \r\n            ((e.target.name === 'userName') && e.target.value.toLowerCase()) ||\r\n            e.target.value\r\n        );\r\n\r\n        setAuthInput({ \r\n            ...authInput, \r\n            [e.target.name] : inputValue\r\n        })\r\n    };\r\n\r\n    const inputSettings = [\r\n        {\r\n            type: \"text\",\r\n            name: \"userName\", \r\n            label: \"E-Mail\",\r\n            required: true\r\n        },{\r\n            type: \"password\",\r\n            name: \"password\", \r\n            label: \"password\",\r\n            required: true\r\n        }\r\n    ];\r\n    \r\n    return(\r\n        <div className=\"outter-block-log\">\r\n            <div className=\"inner-block-log\">\r\n                {inputErrorMessage && <div>{inputErrorMessage}</div>}\r\n                <h2>ADMIN LOGIN PAGE</h2>\r\n                <div className=\"form-container\">\r\n                    {\r\n                        inputSettings.map((inputSetting)=>\r\n                            <MuiInputField \r\n                                key={inputSetting.name} \r\n                                { ...inputSetting } \r\n                                onChange={ formInputChange } \r\n                                onKeyPress={ LoginSubmitKeyPress }/>\r\n                        )\r\n                    }\r\n                    <MuiButton \r\n                        label=\"LOGIN\"\r\n                        props={{\r\n                            color: \"black\",\r\n                            bgColor: \"#3f51b5\",\r\n                            boxShadow: \"2px 2px 23px rgba(0, 0, 0, 0.2) inset\",\r\n                            hColor: \"white\",\r\n                            hbgColor: \"#6495ED\"\r\n                        }}\r\n                        onClick={LoginSubmit} />\r\n                    <MuiButton\r\n                        label=\"LOGOUT\"\r\n                        props={{\r\n                            color: \"black\",\r\n                            bgColor: \"#cf142b\",\r\n                            boxShadow: \"2px 2px 23px rgba(0, 0, 0, 0.2) inset\",\r\n                            hColor: \"white\",\r\n                            hbgColor: \"#DC143C\"\r\n                        }}\r\n                        onClick={ ()=> dispatch(userLogout({history})) } />\r\n                </div>\r\n                {/* <span>Dont have a account? <Link to=\"/signup\"> click here</Link></span> */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminLogin;\r\n","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\AdminPages\\Admin.jsx",["246"],"import React, { useState, useEffect, useCallback } from 'react';\r\nimport AdminOrders from './AdminOrders';\r\nimport AdminMenu from './AdminMenu';\r\nimport axios from 'axios';\r\n\r\nconst Admin = () => {\r\n    const [currentOrders, setCurrentOrders] = useState([]);\r\n    // const wsUri = process.env.REACT_APP_API_WEBSOCKETS;\r\n    // const websocket = new WebSocket(`${wsUri}?ID=admin`);\r\n    const [notic, setNotice] = useState()\r\n    useEffect(()=>{\r\n            axios.get(process.env.REACT_APP_API_RESTAURANT_ORDER)\r\n                .then(res => {\r\n                    setCurrentOrders(res.data.orders)\r\n                })\r\n                .catch(err => console.log(err))\r\n    },[]);\r\n    useEffect(()=>{\r\n        if(notic){\r\n            axios.get(process.env.REACT_APP_API_RESTAURANT_ORDER)\r\n                .then(res => {\r\n                    setCurrentOrders(res.data.orders)\r\n                })\r\n                .catch(err => console.log(err))\r\n        }\r\n    },[notic]);\r\n\r\n    // websocket.onmessage = (evt) => { \r\n    //     setNotice(evt.data)\r\n    // };\r\n\r\n    return(\r\n        <div>\r\n            <h1>ADMIN DASHBOARD</h1>\r\n            \r\n            <AdminOrders \r\n                setNotice={setNotice}\r\n                notic={notic}\r\n                currentOrders={currentOrders}\r\n                setCurrentOrders={setCurrentOrders}/>\r\n            <AdminMenu />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Admin;","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\MenuBox\\index.jsx",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Card\\styles.js",["247","248"],"import { createUseStyles } from 'react-jss'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { WrapText } from '@material-ui/icons';\r\n\r\nexport const CardItemStyle = createUseStyles({\r\n    CardItem: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        listStyle: 'none',\r\n        margin: '0px',\r\n        padding: '.5rem',\r\n        '& :hover': {\r\n            '& img': {\r\n                boxShadow: '0px 0px 7px 2px #69c8e6',\r\n            },\r\n        },\r\n    },\r\n    CardImgWrapper: {\r\n        height: '70%',\r\n        cursor: 'pointer',\r\n        // '& :hover': {\r\n        //     boxShadow: '0px 0px 7px 2px #69c8e6',\r\n        // },\r\n    },\r\n    img: {\r\n        width: '100%',\r\n        borderRadius: '25%',\r\n    },\r\n    CardLocationLi: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        '& span:first-child': {\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            fontSize: '.75rem',\r\n        },\r\n        '& span:last-child': {\r\n            fontSize: '.75rem',\r\n        },\r\n    },\r\n    CardTitleLi: {\r\n        textAlign: 'center',\r\n        fontSize: '1.63rem',\r\n        fontWeight: '600',\r\n        margin: ' 0',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        cursor: 'pointer',\r\n        '& span': {\r\n            textAlign: 'center',\r\n            fontSize: '1rem',\r\n            fontFamily: 'Caveat, cursive',\r\n        },\r\n    },\r\n    CardBtnWrapper: {\r\n        margin: '8px 0',\r\n    },\r\n    CardByLi: {\r\n        fontSize: '.75rem',\r\n        fontWeight: '600',\r\n        display: 'flex',\r\n        justifyContent: 'flex-end'\r\n    },\r\n    CardTitleShowMenu: {\r\n        fontSize: '.75rem',\r\n    },\r\n    '@media only screen and (max-width: 960px) and (min-width: 600px)': {\r\n        CardTitleLi: {\r\n            fontSize: '18px',\r\n        },\r\n    },\r\n    '@media only screen and (max-width: 599px)': {\r\n        CardItem: {\r\n            padding: '.2rem',\r\n        },\r\n        CardTitleLi: {\r\n            fontSize: '.75rem',\r\n        },\r\n    },\r\n});\r\n\r\n        ","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\AdminPages\\AdminOrders.jsx",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\AdminPages\\AdminMenu.jsx",["249"],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\StaticDatas\\footerData.js",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\StaticDatas\\headerData.js",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\StaticDatas\\socialMedia.js",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\MUI\\index.jsx",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Card\\ItemCard.jsx",["250","251","252","253"],"import React, { useState, useEffect } from 'react';\r\nimport './styles.scss';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport ItemDetails from 'Components/Card/ItemDetails';\r\n\r\nconst rand = () => {\r\n  return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nconst ItemCard = ({ item }) => {\r\n    const { \r\n        imgSrc,\r\n        itemNumber,\r\n        title,\r\n        price,\r\n    } = item;\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleOpen = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n\r\n    return(\r\n        <div className=\"Item-Card-Wrapper\">\r\n            <div className=\"Item-Card-Img-block\">\r\n                <span>{itemNumber}</span>\r\n                <img src={imgSrc} alt={title}/>\r\n            </div>\r\n            <div className=\"Item-Card-Text\">\r\n                <h2>{title}</h2>\r\n                {/* <p>{description}</p> */}\r\n                <span>${price}</span>\r\n                <button type=\"button\" onClick={handleOpen}>Detail</button>\r\n            </div>\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n            >\r\n                <ItemDetails \r\n                    itemDetails={item} \r\n                    handleOpen={handleOpen} \r\n                    handleClose={handleClose}/>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ItemCard;","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\MUI\\MuiNumberInput.jsx",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Card\\ItemCardList.jsx",["254","255","256"],"import React, { useState, useEffect } from 'react';\r\nimport './styles.scss';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport ItemEdit from 'Components/Forms/ItemEdit';\r\n\r\nconst ItemCardList = ({ item, buttonLabel }) => {\r\n    const { \r\n        imgSrc,\r\n        itemNumber,\r\n        title,\r\n        price,\r\n    } = item;\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleOpen = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n\r\n    return(\r\n        <div className=\"Item-Card-List-Wrapper\">\r\n            <div className=\"Item-Card-List-Img-block\">\r\n                <span>{itemNumber}</span>\r\n                <img src={imgSrc} alt={title}/>\r\n            </div>\r\n            <div className=\"Item-Card-List-Text\">\r\n                    <h2>{title}</h2>\r\n                <span className=\"Item-Card-List-span\">\r\n                    <h2>${price}</h2>\r\n                    <button type=\"button\" onClick={handleOpen}>{buttonLabel}</button>\r\n                </span>\r\n            </div>\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                className=\"ModalClass\"\r\n            >\r\n                <ItemEdit \r\n                    itemDetails={item} \r\n                    handleOpen={handleOpen} \r\n                    handleClose={handleClose}/>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ItemCardList;","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\AdminComponents\\OrderBlock.jsx",["257","258","259","260","261","262"],"import React from 'react';\r\nimport { MuiButton } from 'Components/MUI';\r\nimport moment from 'moment';\r\nimport axios from 'axios';\r\nimport './styles.scss';\r\n\r\nconst OrderBlock = ({ order, currentOrders, setCurrentOrders, index}) => {\r\n    const {\r\n        orderNumber,\r\n        orderTime,\r\n        ordId,\r\n        itemDetails,\r\n        buyerDetails,\r\n    } = order; \r\n\r\n    const handleOrderFullfill = (orderId) => {\r\n        const param = {\r\n            ordId: orderId,\r\n            fullFillStatus: true,\r\n            fullFillTime: moment().format('MMMM Do YYYY, h:mm:ss a'),\r\n        }\r\n        axios.put(process.env.REACT_APP_API_RESTAURANT_ORDER, param)\r\n            .then(res=> {\r\n                console.log(res.data)\r\n                if(res.data.update_status === \"fullfilled success\"){\r\n                    setCurrentOrders(currentOrders.filter(order => order.ordId !== ordId));\r\n                }\r\n            })\r\n            .catch(err=> console.log(err))\r\n    }\r\n    // console.log('itemDetails--->: ', itemDetails)\r\n    const OrderItemList = ({itemNumber, title, orderAmount}) => (\r\n        <div className=\"OrderItemListWrapper\">\r\n            <h3>{itemNumber}</h3>\r\n            <p>{title}</p>\r\n            <h3>X {orderAmount}</h3>\r\n        </div>\r\n    );\r\n\r\n    const BuyerDetails = ({buyerDetails}) =>{\r\n        const {\r\n            address,\r\n            eMail,\r\n            name,\r\n            phoneNumber,\r\n        } = buyerDetails;\r\n    }\r\n    return (\r\n        <div className=\"OrderBlock-wrapper\">\r\n            <h3>{index}, order-number: {orderNumber}</h3>\r\n            <span>order time: {orderTime}</span>\r\n            {  itemDetails?.map((item, index) => {\r\n               return <OrderItemList key={`orderItem-${index}`} {...item}/>\r\n            })}\r\n            <MuiButton \r\n                props={{\r\n                    color: '#717171',\r\n                    bgColor: '#a2e6fd',\r\n                    hColor: \"white\",\r\n                    hbgColor: \"#287d9a\",\r\n                    margin: \"auto 0 0 0\",\r\n                }}\r\n                label='ORDER READY'\r\n                onClick={()=> handleOrderFullfill(ordId)}\r\n                onKeyPress={()=> handleOrderFullfill(ordId)}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OrderBlock;","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Card\\ItemDetails.jsx",["263","264","265","266"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { orderDetailState, setCart, setCartUpdate } from 'States/orderSlice';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport './styles.scss';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { MuiButton, MuiNumberInput } from 'Components/MUI';\r\n\r\n\r\nconst ItemDetails = ({itemDetails, handleOpen, handleClose}) => {\r\n    const dispatch = useDispatch();\r\n    const cartOrderList = useSelector(orderDetailState);\r\n    const {\r\n        imgSrc,\r\n        itemNumber,\r\n        title,\r\n        description,\r\n        price,\r\n        orderAmount\r\n    } = itemDetails;\r\n    const [currentOrderAmount, setCurrentOrderAmount] = useState(\"1\")\r\n\r\n    useEffect(()=>{\r\n        const findDetailHistory = cartOrderList.find(itm => itm.itemNumber === itemDetails.itemNumber);\r\n        findDetailHistory && setCurrentOrderAmount(findDetailHistory.orderAmount);\r\n    },[]);\r\n\r\n    const handleAddItemToCart = async() => {\r\n        const findDetailHistory = cartOrderList.find(itm => itm.itemNumber === itemNumber);\r\n        const updateCardOrderList = \r\n            findDetailHistory\r\n                ? dispatch(setCartUpdate({...itemDetails, orderAmount: currentOrderAmount}))\r\n                : dispatch(setCart(cartOrderList.concat({...itemDetails, orderAmount: currentOrderAmount})));\r\n        handleClose();\r\n    };\r\n\r\n    return (\r\n        <div className=\"Item-Details-Wrapper\">\r\n            <div className=\"Item-Details-Close\">\r\n                <FontAwesomeIcon onClick={handleClose} icon={faTimes} style={{margin: '1rem', cursor: 'pointer'}} className=\"fa-2x\"/>\r\n            </div>\r\n            <div>\r\n                <div className=\"Item-Card-Img-block\">\r\n                    <span>{itemNumber}</span>\r\n                    <img src={imgSrc} alt={title}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"Item-Details-Text\">\r\n                <h2>{title}</h2>\r\n                <p>{description}</p>\r\n                <span>${price}</span>\r\n                <MuiNumberInput \r\n                    min=\"1\"\r\n                    max=\"50\"\r\n                    currentNumber={currentOrderAmount}\r\n                    setCurrentNumber={setCurrentOrderAmount}\r\n                />\r\n                <MuiButton \r\n                    props={{\r\n                        color: '#717171',\r\n                        bgColor: '#a2e6fd',\r\n                        hColor: \"white\",\r\n                        hbgColor: \"#287d9a\"\r\n                    }}\r\n                    label='ADD TO CART'\r\n                    onClick={handleAddItemToCart}\r\n                    onKeyPress={handleAddItemToCart}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ItemDetails;","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\MUI\\MuiButton.jsx",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\MUI\\MuiInputField.jsx",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\MUI\\styles.js",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\ImageUpload\\ImageUpload.jsx",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\ImageUpload\\styles.js",[],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Forms\\ItemEdit.jsx",["267"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setUpdateMenu } from 'States/menuSlice';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { MuiButton, MuiInputField } from 'Components/MUI';\r\nimport ImageUpload from '../ImageUpload/ImageUpload';\r\nimport './styles.scss';\r\n\r\nconst ItemEdit = ({itemDetails, handleClose}) => {\r\n    const {\r\n        imgSrc,\r\n        itemNumber,\r\n        title,\r\n        description,\r\n        price,\r\n    } = itemDetails;\r\n    const dispatch = useDispatch();\r\n    const [formInputs, setFormInputs] = useState({...itemDetails});\r\n    const [imageURL, setImageURL] = useState('');\r\n    const [inputError, setInputError] = useState(false)\r\n    const [toggleUploadImg, setToggleUploadImg] = useState(true)\r\n\r\n    useEffect(()=>{\r\n        if(imageURL){\r\n            setFormInputs({\r\n                ...formInputs,\r\n                imgSrc: imageURL\r\n            })\r\n        }\r\n    },[imageURL])\r\n    const formInputChange = (e) => {\r\n        if(e.target.name === 'points' && (/[^\\d]/g).test(e.target.value)){\r\n            setInputError(true)\r\n        } else {\r\n            setInputError(false)\r\n            setFormInputs({ \r\n                ...formInputs,\r\n                [e.target.name] : e.target.name === 'points' ? parseInt(e.target.value) : e.target.value\r\n            })\r\n        }\r\n    };\r\n\r\n    const handleSubmitEdit = () => {\r\n        dispatch(setUpdateMenu(formInputs))\r\n    };\r\n\r\n    // input box setting\r\n    const inputSettings = [\r\n        {\r\n            type: \"text\",\r\n            name: \"title\", \r\n            defaultValue: title,\r\n            placeholder: \"title\"\r\n        },{\r\n            type: \"text\",\r\n            name: \"price\", \r\n            defaultValue: price,\r\n            placeholder: \"price\",\r\n            className: inputError ? 'inputError' : ''\r\n        },{\r\n            type: \"text\",\r\n            name: \"description\", \r\n            rows: 4,\r\n            defaultValue: description,\r\n            placeholder: \"item description\",\r\n            className: inputError ? 'inputError' : ''\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <div className=\"ItemEdit-Wrapper\">\r\n            <div className=\"Item-Details-Edit-Wrapper\">\r\n                <div className=\"inner-block\">\r\n                    <div className=\"form-container\" >\r\n                        <button onClick={()=> setToggleUploadImg(!toggleUploadImg)}>\r\n                            {toggleUploadImg ? \"upload image link\" : \"upload image\"}\r\n                        </button>\r\n                        { toggleUploadImg \r\n                            ? <ImageUpload setImageURL={setImageURL}/>\r\n                            : <MuiInputField\r\n                                bgColor=\"#fff\"\r\n                                type=\"text\"\r\n                                name=\"imgSrc\"\r\n                                label=\"image link\"\r\n                                defaultValue={imgSrc}\r\n                                onChange={(e)=> setImageURL(e.target.value)}/>}\r\n                            \r\n                        {\r\n                            inputSettings.map((inputSetting, index)=>\r\n                                <MuiInputField\r\n                                    key={`${index}-inputsetting`}\r\n                                    {...inputSetting}\r\n                                    bgColor=\"#fff\"\r\n                                    name={inputSetting.name}\r\n                                    label={inputSetting.placeholder}\r\n                                    onChange={ formInputChange }/>\r\n                            )\r\n                        }\r\n                        <MuiButton \r\n                            bgColor=\"#fff\"\r\n                            labelColor=\"#000\"\r\n                            label=\"SUBMIT UPDATE\"\r\n                            onClick={ handleSubmitEdit }/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"Item-Details-Edit-Wrapper\">\r\n                <div className=\"Item-Details-Close\">\r\n                    <FontAwesomeIcon onClick={handleClose} icon={faTimes} style={{margin: '1rem', cursor: 'pointer'}} className=\"fa-2x\"/>\r\n                </div>\r\n                <div>\r\n                    <div className=\"Item-Card-Img-block\">\r\n                        <span>{itemNumber}</span>\r\n                        <img src={imgSrc} alt={title}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"Item-Details-Text\">\r\n                    <h2>{title}</h2>\r\n                    <p>{description}</p>\r\n                    <span>${price}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ItemEdit;","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Forms\\AddCategory.jsx",["268","269"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { menuListState, setAddNewMenuCategory } from 'States/menuSlice';\r\nimport { MuiButton, MuiInputField } from 'Components/MUI';\r\nimport ImageUpload from '../ImageUpload/ImageUpload';\r\nimport './styles.scss';\r\n\r\nconst AddCategory = () => {\r\n    const dispatch = useDispatch();\r\n    const  menuState= useSelector(menuListState);\r\n    const [formInputs, setFormInputs] = useState({menuList: []});\r\n    const [imageURL, setImageURL] = useState('');\r\n    const [inputError, setInputError] = useState(false);\r\n    const [toggleUploadImg, setToggleUploadImg] = useState(true);\r\n    useEffect(()=>{\r\n        if(imageURL){\r\n            setFormInputs({\r\n                ...formInputs,\r\n                imgSrc: imageURL\r\n            })\r\n        }\r\n    },[imageURL])\r\n\r\n    const formInputChange = (e) => {\r\n        if(e.target.name === 'points' && (/[^\\d]/g).test(e.target.value)){\r\n            setInputError(true)\r\n        } else {\r\n            setInputError(false)\r\n            setFormInputs({ \r\n                ...formInputs,\r\n                [e.target.name] :  e.target.value\r\n            })\r\n        }\r\n    };\r\n\r\n    const handleSubmitEdit = () => {\r\n        dispatch(setAddNewMenuCategory([...menuState, formInputs]))\r\n        setFormInputs({})\r\n        setImageURL('')\r\n    };\r\n\r\n\r\n    const inputSettings = [{\r\n            type: \"text\",\r\n            name: \"title\",\r\n            placeholder: \"title\"\r\n        },{\r\n            type: \"text\",\r\n            name: \"descriptions\",\r\n            placeholder: \"descriptions\"\r\n    }];\r\n\r\n    return(\r\n        <div className=\"AddNewCategory-Wrapper\">\r\n            <div className=\"inner-block\">\r\n                <div className=\"form-container\" >\r\n                    <button onClick={()=> setToggleUploadImg(!toggleUploadImg)}>\r\n                        {toggleUploadImg ? \"upload image link\" : \"upload image\"}\r\n                    </button>\r\n                    { toggleUploadImg \r\n                        ? <ImageUpload setImageURL={setImageURL}/>\r\n                        : <MuiInputField\r\n                            bgColor=\"#fff\"\r\n                            type=\"text\"\r\n                            name=\"imgSrc\"\r\n                            label=\"image link\"\r\n                            onChange={(e)=> setImageURL(e.target.value)}/>}\r\n                        \r\n                    {\r\n                        inputSettings.map((inputSetting, index)=>\r\n                            <MuiInputField\r\n                                key={`${index}-inputsetting`}\r\n                                {...inputSetting}\r\n                                bgColor=\"#fff\"\r\n                                name={inputSetting.name}\r\n                                label={inputSetting.placeholder}\r\n                                onChange={ formInputChange }/>\r\n                        )\r\n                    }\r\n                    <MuiButton \r\n                        bgColor=\"#fff\"\r\n                        labelColor=\"#000\"\r\n                        label=\"SUBMIT UPDATE\"\r\n                        onClick={ handleSubmitEdit }/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default AddCategory;","C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\Forms\\AddMenuItem.jsx",["270","271"],"C:\\Users\\Hsinb\\zWebProjects\\myichot\\src\\Components\\AdminComponents\\MenuBlock.jsx",["272"],{"ruleId":"273","replacedBy":"274"},{"ruleId":"275","replacedBy":"276"},{"ruleId":"277","severity":1,"message":"278","line":1,"column":32,"nodeType":"279","messageId":"280","endLine":1,"endColumn":41},{"ruleId":"281","severity":1,"message":"282","line":26,"column":7,"nodeType":"283","endLine":26,"endColumn":9,"suggestions":"284"},{"ruleId":"277","severity":1,"message":"285","line":6,"column":8,"nodeType":"279","messageId":"280","endLine":6,"endColumn":20},{"ruleId":"277","severity":1,"message":"286","line":5,"column":5,"nodeType":"279","messageId":"280","endLine":5,"endColumn":25},{"ruleId":"277","severity":1,"message":"287","line":6,"column":28,"nodeType":"279","messageId":"280","endLine":6,"endColumn":40},{"ruleId":"277","severity":1,"message":"288","line":6,"column":42,"nodeType":"279","messageId":"280","endLine":6,"endColumn":55},{"ruleId":"277","severity":1,"message":"289","line":6,"column":57,"nodeType":"279","messageId":"280","endLine":6,"endColumn":70},{"ruleId":"290","severity":1,"message":"291","line":9,"column":21,"nodeType":"292","endLine":9,"endColumn":70},{"ruleId":"277","severity":1,"message":"293","line":1,"column":38,"nodeType":"279","messageId":"280","endLine":1,"endColumn":49},{"ruleId":"277","severity":1,"message":"294","line":1,"column":51,"nodeType":"279","messageId":"280","endLine":1,"endColumn":58},{"ruleId":"277","severity":1,"message":"295","line":5,"column":8,"nodeType":"279","messageId":"280","endLine":5,"endColumn":22},{"ruleId":"296","severity":1,"message":"297","line":15,"column":15,"nodeType":"298","messageId":"299","endLine":15,"endColumn":17},{"ruleId":"277","severity":1,"message":"300","line":85,"column":13,"nodeType":"279","messageId":"280","endLine":85,"endColumn":24},{"ruleId":"281","severity":1,"message":"301","line":22,"column":7,"nodeType":"283","endLine":22,"endColumn":9,"suggestions":"302"},{"ruleId":"277","severity":1,"message":"303","line":6,"column":9,"nodeType":"279","messageId":"280","endLine":6,"endColumn":16},{"ruleId":"290","severity":1,"message":"291","line":15,"column":17,"nodeType":"292","endLine":18,"endColumn":40},{"ruleId":"304","severity":1,"message":"305","line":9,"column":13,"nodeType":"292","endLine":9,"endColumn":32},{"ruleId":"281","severity":1,"message":"306","line":18,"column":7,"nodeType":"283","endLine":18,"endColumn":19,"suggestions":"307"},{"ruleId":"277","severity":1,"message":"293","line":1,"column":38,"nodeType":"279","messageId":"280","endLine":1,"endColumn":49},{"ruleId":"277","severity":1,"message":"308","line":2,"column":10,"nodeType":"279","messageId":"280","endLine":2,"endColumn":20},{"ruleId":"277","severity":1,"message":"309","line":3,"column":10,"nodeType":"279","messageId":"280","endLine":3,"endColumn":18},{"ruleId":"277","severity":1,"message":"278","line":1,"column":27,"nodeType":"279","messageId":"280","endLine":1,"endColumn":36},{"ruleId":"277","severity":1,"message":"310","line":1,"column":17,"nodeType":"279","messageId":"280","endLine":1,"endColumn":25},{"ruleId":"277","severity":1,"message":"278","line":1,"column":27,"nodeType":"279","messageId":"280","endLine":1,"endColumn":36},{"ruleId":"277","severity":1,"message":"308","line":3,"column":10,"nodeType":"279","messageId":"280","endLine":3,"endColumn":20},{"ruleId":"277","severity":1,"message":"311","line":7,"column":7,"nodeType":"279","messageId":"280","endLine":7,"endColumn":11},{"ruleId":"277","severity":1,"message":"310","line":1,"column":17,"nodeType":"279","messageId":"280","endLine":1,"endColumn":25},{"ruleId":"277","severity":1,"message":"278","line":1,"column":27,"nodeType":"279","messageId":"280","endLine":1,"endColumn":36},{"ruleId":"277","severity":1,"message":"308","line":3,"column":10,"nodeType":"279","messageId":"280","endLine":3,"endColumn":20},{"ruleId":"277","severity":1,"message":"312","line":13,"column":9,"nodeType":"279","messageId":"280","endLine":13,"endColumn":21},{"ruleId":"277","severity":1,"message":"313","line":40,"column":11,"nodeType":"279","messageId":"280","endLine":40,"endColumn":23},{"ruleId":"277","severity":1,"message":"314","line":42,"column":13,"nodeType":"279","messageId":"280","endLine":42,"endColumn":20},{"ruleId":"277","severity":1,"message":"315","line":43,"column":13,"nodeType":"279","messageId":"280","endLine":43,"endColumn":18},{"ruleId":"277","severity":1,"message":"316","line":44,"column":13,"nodeType":"279","messageId":"280","endLine":44,"endColumn":17},{"ruleId":"277","severity":1,"message":"317","line":45,"column":13,"nodeType":"279","messageId":"280","endLine":45,"endColumn":24},{"ruleId":"277","severity":1,"message":"318","line":4,"column":8,"nodeType":"279","messageId":"280","endLine":4,"endColumn":17},{"ruleId":"277","severity":1,"message":"319","line":20,"column":9,"nodeType":"279","messageId":"280","endLine":20,"endColumn":20},{"ruleId":"281","severity":1,"message":"320","line":27,"column":7,"nodeType":"283","endLine":27,"endColumn":9,"suggestions":"321"},{"ruleId":"277","severity":1,"message":"322","line":31,"column":15,"nodeType":"279","messageId":"280","endLine":31,"endColumn":34},{"ruleId":"281","severity":1,"message":"323","line":31,"column":7,"nodeType":"283","endLine":31,"endColumn":17,"suggestions":"324"},{"ruleId":"277","severity":1,"message":"325","line":13,"column":12,"nodeType":"279","messageId":"280","endLine":13,"endColumn":22},{"ruleId":"281","severity":1,"message":"323","line":22,"column":7,"nodeType":"283","endLine":22,"endColumn":17,"suggestions":"326"},{"ruleId":"277","severity":1,"message":"325","line":24,"column":12,"nodeType":"279","messageId":"280","endLine":24,"endColumn":22},{"ruleId":"281","severity":1,"message":"323","line":33,"column":7,"nodeType":"283","endLine":33,"endColumn":17,"suggestions":"327"},{"ruleId":"277","severity":1,"message":"278","line":1,"column":27,"nodeType":"279","messageId":"280","endLine":1,"endColumn":36},"no-native-reassign",["328"],"no-negated-in-lhs",["329"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentMenuState' and 'dispatch'. Either include them or remove the dependency array.","ArrayExpression",["330"],"'PrivateRoute' is defined but never used.","'CognitoUserAttribute' is defined but never used.","'postNewOrder' is defined but never used.","'setCartUpdate' is defined but never used.","'setDeleteItem' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'useCallback' is defined but never used.","'useMemo' is defined but never used.","'InputAdornment' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'itemDetails' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'websocket'. Either include it or remove the dependency array.",["331"],"'history' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["332"],"'makeStyles' is defined but never used.","'WrapText' is defined but never used.","'useState' is defined but never used.","'rand' is assigned a value but never used.","'buyerDetails' is assigned a value but never used.","'BuyerDetails' is assigned a value but never used.","'address' is assigned a value but never used.","'eMail' is assigned a value but never used.","'name' is assigned a value but never used.","'phoneNumber' is assigned a value but never used.","'TextField' is defined but never used.","'orderAmount' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'cartOrderList' and 'itemDetails.itemNumber'. Either include them or remove the dependency array.",["333"],"'updateCardOrderList' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'formInputs'. Either include it or remove the dependency array. You can also do a functional update 'setFormInputs(f => ...)' if you only need 'formInputs' in the 'setFormInputs' call.",["334"],"'inputError' is assigned a value but never used.",["335"],["336"],"no-global-assign","no-unsafe-negation",{"desc":"337","fix":"338"},{"desc":"339","fix":"340"},{"desc":"341","fix":"342"},{"desc":"343","fix":"344"},{"desc":"345","fix":"346"},{"desc":"345","fix":"347"},{"desc":"345","fix":"348"},"Update the dependencies array to be: [currentMenuState, dispatch]",{"range":"349","text":"350"},"Update the dependencies array to be: [websocket]",{"range":"351","text":"352"},"Update the dependencies array to be: [history, userSignIn]",{"range":"353","text":"354"},"Update the dependencies array to be: [cartOrderList, itemDetails.itemNumber]",{"range":"355","text":"356"},"Update the dependencies array to be: [formInputs, imageURL]",{"range":"357","text":"358"},{"range":"359","text":"358"},{"range":"360","text":"358"},[1236,1238],"[currentMenuState, dispatch]",[864,866],"[websocket]",[685,697],"[history, userSignIn]",[1061,1063],"[cartOrderList, itemDetails.itemNumber]",[1052,1062],"[formInputs, imageURL]",[858,868],[1194,1204]]