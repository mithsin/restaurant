[{"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\index.js":"1","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\serviceWorker.js":"2","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\App.js":"3","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Store\\store.js":"4","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\StaticDatas\\themeColor.js":"5","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\PageRouter\\UserStatusProvider.jsx":"6","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Providers\\StateWrapper.jsx":"7","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\States\\userSlice.js":"8","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\PageRouter\\index.jsx":"9","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\States\\menuSlice.js":"10","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\States\\headerSlice.js":"11","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\States\\orderSlice.js":"12","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Pages\\index.jsx":"13","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\PageRouter\\PrivateRoute.jsx":"14","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Pages\\NotExist.jsx":"15","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Pages\\PhotoGallery.jsx":"16","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Pages\\Home.jsx":"17","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Pages\\Header.jsx":"18","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Pages\\Footer.jsx":"19","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Pages\\styles.js":"20","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\AdminPages\\index.jsx":"21","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\OrderProcess\\index.jsx":"22","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\ImageBlock\\ReactResponsiveCarousel.jsx":"23","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\Card\\CardItem.jsx":"24","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\OrderProcess\\Cart.jsx":"25","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\OrderProcess\\OrderReceipt.jsx":"26","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\StaticDatas\\index.js":"27","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\AdminPages\\Admin.jsx":"28","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\AdminPages\\AdminLogin.jsx":"29","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\MenuBox\\index.jsx":"30","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\Card\\styles.js":"31","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\AdminPages\\AdminMenu.jsx":"32","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\AdminPages\\AdminOrders.jsx":"33","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\StaticDatas\\footerData.js":"34","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\StaticDatas\\headerData.js":"35","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\StaticDatas\\socialMedia.js":"36","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\Forms\\SplitStripeForm.jsx":"37","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\Forms\\AliPayBtn.jsx":"38","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\MUI\\MuiComponents\\MuiBtn.jsx":"39","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\MUI\\MuiTabs.jsx":"40","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\Card\\ItemCard.jsx":"41","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\Forms\\useResponsiveFontSize.js":"42","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\MUI\\index.jsx":"43","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\MUI\\MuiCheckboxList.jsx":"44","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\AdminComponents\\MenuBlock.jsx":"45","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\MUI\\MuiNumberInput.jsx":"46","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\Forms\\AddCategory.jsx":"47","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\AdminComponents\\OrderBlock.jsx":"48","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\Card\\ItemDetails.jsx":"49","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\Card\\ItemCardList.jsx":"50","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\ImageUpload\\ImageUpload.jsx":"51","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\Forms\\AddMenuItem.jsx":"52","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\ImageUpload\\styles.js":"53","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\Forms\\ItemEdit.jsx":"54","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\Forms\\FormSubmitFunctions.js":"55","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\Forms\\FormDefault.js":"56","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\MUI\\MuiInputField.jsx":"57","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\MUI\\MuiButton.jsx":"58","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\MUI\\styles.js":"59"},{"size":1000,"mtime":1611412993884,"results":"60","hashOfConfig":"61"},{"size":5086,"mtime":1608252514067,"results":"62","hashOfConfig":"61"},{"size":462,"mtime":1611412993792,"results":"63","hashOfConfig":"61"},{"size":545,"mtime":1608947840623,"results":"64","hashOfConfig":"61"},{"size":1207,"mtime":1612391243057,"results":"65","hashOfConfig":"61"},{"size":679,"mtime":1610490291207,"results":"66","hashOfConfig":"61"},{"size":1013,"mtime":1610490291219,"results":"67","hashOfConfig":"61"},{"size":2937,"mtime":1610490291221,"results":"68","hashOfConfig":"61"},{"size":908,"mtime":1610584087443,"results":"69","hashOfConfig":"61"},{"size":1988,"mtime":1610070979132,"results":"70","hashOfConfig":"61"},{"size":1102,"mtime":1608252514064,"results":"71","hashOfConfig":"61"},{"size":2580,"mtime":1610584087445,"results":"72","hashOfConfig":"61"},{"size":272,"mtime":1609886728055,"results":"73","hashOfConfig":"61"},{"size":493,"mtime":1608846419950,"results":"74","hashOfConfig":"61"},{"size":365,"mtime":1608845921139,"results":"75","hashOfConfig":"61"},{"size":419,"mtime":1609886728055,"results":"76","hashOfConfig":"61"},{"size":2180,"mtime":1611412993872,"results":"77","hashOfConfig":"61"},{"size":934,"mtime":1611412993864,"results":"78","hashOfConfig":"61"},{"size":772,"mtime":1611412993864,"results":"79","hashOfConfig":"61"},{"size":3019,"mtime":1611412993872,"results":"80","hashOfConfig":"61"},{"size":120,"mtime":1609886728039,"results":"81","hashOfConfig":"61"},{"size":103,"mtime":1610584087437,"results":"82","hashOfConfig":"61"},{"size":1236,"mtime":1609886728055,"results":"83","hashOfConfig":"61"},{"size":725,"mtime":1610490291170,"results":"84","hashOfConfig":"61"},{"size":6176,"mtime":1611497366957,"results":"85","hashOfConfig":"61"},{"size":1405,"mtime":1611412993862,"results":"86","hashOfConfig":"61"},{"size":3108,"mtime":1611412993874,"results":"87","hashOfConfig":"61"},{"size":2679,"mtime":1611412993784,"results":"88","hashOfConfig":"61"},{"size":3336,"mtime":1611412993784,"results":"89","hashOfConfig":"61"},{"size":828,"mtime":1610070979120,"results":"90","hashOfConfig":"61"},{"size":1959,"mtime":1610490291186,"results":"91","hashOfConfig":"61"},{"size":1517,"mtime":1610490291163,"results":"92","hashOfConfig":"61"},{"size":1889,"mtime":1610584087418,"results":"93","hashOfConfig":"61"},{"size":53,"mtime":1608914707674,"results":"94","hashOfConfig":"61"},{"size":465,"mtime":1610490291223,"results":"95","hashOfConfig":"61"},{"size":349,"mtime":1611412993882,"results":"96","hashOfConfig":"61"},{"size":4060,"mtime":1611412993804,"results":"97","hashOfConfig":"61"},{"size":3222,"mtime":1611414121514,"results":"98","hashOfConfig":"61"},{"size":1437,"mtime":1611412993804,"results":"99","hashOfConfig":"61"},{"size":1842,"mtime":1610490291201,"results":"100","hashOfConfig":"61"},{"size":2303,"mtime":1611412993794,"results":"101","hashOfConfig":"61"},{"size":476,"mtime":1610490291199,"results":"102","hashOfConfig":"61"},{"size":246,"mtime":1612391243049,"results":"103","hashOfConfig":"61"},{"size":1945,"mtime":1612990669470,"results":"104","hashOfConfig":"61"},{"size":1394,"mtime":1610490291167,"results":"105","hashOfConfig":"61"},{"size":1836,"mtime":1611412993804,"results":"106","hashOfConfig":"61"},{"size":4113,"mtime":1611412993794,"results":"107","hashOfConfig":"61"},{"size":1888,"mtime":1611412993794,"results":"108","hashOfConfig":"61"},{"size":2525,"mtime":1611412993794,"results":"109","hashOfConfig":"61"},{"size":1711,"mtime":1610490291182,"results":"110","hashOfConfig":"61"},{"size":1616,"mtime":1608252514056,"results":"111","hashOfConfig":"61"},{"size":9444,"mtime":1612992556916,"results":"112","hashOfConfig":"61"},{"size":432,"mtime":1610070979115,"results":"113","hashOfConfig":"61"},{"size":9664,"mtime":1612992548239,"results":"114","hashOfConfig":"61"},{"size":550,"mtime":1612991901431,"results":"115","hashOfConfig":"61"},{"size":1278,"mtime":1612990669460,"results":"116","hashOfConfig":"61"},{"size":834,"mtime":1609886728055,"results":"117","hashOfConfig":"61"},{"size":621,"mtime":1610491512514,"results":"118","hashOfConfig":"61"},{"size":1053,"mtime":1611412993822,"results":"119","hashOfConfig":"61"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},"1gqzz9k",{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"122"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"122"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"122"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"122"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"122"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"122"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"122"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"122"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"122"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"122"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"122"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"122"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"122"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"122"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\index.js",[],["254","255"],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\serviceWorker.js",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\App.js",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Store\\store.js",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\StaticDatas\\themeColor.js",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\PageRouter\\UserStatusProvider.jsx",["256"],"import React, { createContext, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  userIsLoggedIn,\n  userLoginCheck\n} from 'States/userSlice';\n\nconst UserStatusCheck = createContext({});\n\nconst UserStatusProvider = ({ children }) => {\n  const dispatch = useDispatch();\n  const userIsSignIn = useSelector(userIsLoggedIn)\n\n  // check user status and make up date if necessary.\n  useEffect(()=>{\n    !userIsSignIn && dispatch(userLoginCheck());\n  },[userIsSignIn])\n  \n    return (\n        <UserStatusCheck.Provider value={userIsSignIn}>\n            {children}\n        </UserStatusCheck.Provider>\n    );\n};\n\nexport default UserStatusProvider;","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Providers\\StateWrapper.jsx",["257"],"import React, { useEffect } from 'react';\nimport { setMenu } from 'States/menuSlice';\nimport { useDispatch } from 'react-redux';\nimport axios from 'axios';\nimport {Elements} from '@stripe/react-stripe-js';\nimport {loadStripe} from '@stripe/stripe-js';\nimport \"./styles.scss\";\n\nconst StateWrapper = ({children}) => {\n    const dispatch = useDispatch();\n    const stripePromise = loadStripe(\"pk_test_51I8WMcEFoepYxM6pCNMtpNb0Tvh8pTLqzYMNrocMJoqBjSQ4Eo5ls4lplxrmSLTGWydlBrAkJp0a9Zgr6tKK8jTw00fquGZFlE\");\n\n    // const currentMenuState = useSelector(menuListState)\n    useEffect(()=>{\n        axios.get(process.env.REACT_APP_API_RESTAURANT_MENU)\n            .then(res => {\n                dispatch(setMenu(res.data.menu));\n            })\n            .catch(err => console.log(err))\n    },[])\n    return(\n        <Elements stripe={stripePromise}>\n            <div id=\"state-wrapper\" className=\"StateWrapperBody\">\n                {children}\n            </div>\n        </Elements>\n    );\n};\n\nexport default StateWrapper;","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\States\\userSlice.js",["258","259","260"],"import { createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport {\n    CognitoUserPool,\n    CognitoUserAttribute,\n    CognitoUser,\n    AuthenticationDetails\n} from 'amazon-cognito-identity-js';\n\nconst poolData = {\n    UserPoolId: process.env.REACT_APP_USER_POOL,\n    ClientId: process.env.REACT_APP_CLIENT_ID\n};\n// const postURL = process.env.REACT_APP_API_GATEWAY_URL;\nconst userPool = new CognitoUserPool(poolData);\nconst ApiGateWayUserURL = process.env.REACT_APP_API_GATEWAY_URL;\nconst initState = {\n    isLoggedIn: false,\n}\nexport const userSlice = createSlice({\n    name: 'userState',\n    initialState: initState,\n    reducers: {\n        setUserState: (state, action) => {\n            return {...state, ...action.payload};\n        },\n        setIsLoggedIn: (state, action) => {\n            state.isLoggedIn = action.payload;\n        },\n    },\n});\n\nexport const {\n    setUserState,\n    setIsLoggedIn,\n} = userSlice.actions;\n\n// AWS User Login\nexport const userLogin = ({userName, password, history}) => dispatch => {\n    const authenticationData = {\n        Username: userName,\n        Password: password,\n    };\n    const authenticationDetails = new AuthenticationDetails(\n        authenticationData\n    );\n\n    const userData = {\n        Username: userName,\n        Pool: userPool,\n    };\n    const cognitoUser = new CognitoUser(userData);\n\n    cognitoUser.authenticateUser(authenticationDetails, {\n        onSuccess: (result) => {\n            dispatch(setIsLoggedIn(true));\n            history.push('/admin');\n         },\n        onFailure: (err) => {\n            alert(err.message || JSON.stringify(err));\n        },\n    });\n};\n\n// AWS cognito Logout\nexport const userLogout = ({history}) => dispatch => {\n    if(userPool.getCurrentUser()){\n        // To Do: clear init data\n        userPool.getCurrentUser().signOut();\n        dispatch(setUserState(initState))\n        history.push('/');\n    };\n};\n\n// AWS Cognito Get User Data\nexport const userLoginCheck = () => dispatch => {\n    if (userPool.getCurrentUser() != null) {\n        userPool.getCurrentUser().getSession((err, session) => {\n            if(err){console.log('userPool.getCurrentUser() err---->', err)};\n                dispatch(setIsLoggedIn(true));\n            // axios.get(`${ApiGateWayUserURL}?subId=${session?.idToken?.payload?.sub}`, {\n            //     headers: { 'Authorization' : session?.getIdToken()?.getJwtToken() }\n            // })\n            //     .then(res => {\n            //         console.log('userLoginCheck-trigger--->: ', res.data)\n            //         dispatch(setUserState(res.data));\n            //         dispatch(setIsLoggedIn(true));\n            //     })\n            //     .catch(error => console.log('get user error: ', error))\n          });\n    } \n};\n\nexport const userCognitoState = state => state.userState;\nexport const userIsLoggedIn = state => state.userState.isLoggedIn;\nexport default userSlice.reducer;\n","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\PageRouter\\index.jsx",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\States\\menuSlice.js",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\States\\headerSlice.js",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\States\\orderSlice.js",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Pages\\index.jsx",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\PageRouter\\PrivateRoute.jsx",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Pages\\NotExist.jsx",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Pages\\PhotoGallery.jsx",["261"],"import React from 'react';\nimport { photoGallery } from 'StaticDatas';\n\nconst PhotoGallery = () => {\n    return(\n        <ul className=\"PhotoGallery-wrapper\">\n            {photoGallery.map((image, index)=> \n                <li key={`image-${index}-gallery`}>\n                    <img src={image} alt={`image-${index}-gallery`}/>\n                </li>\n            )}\n        </ul>\n    );\n};\n\nexport default PhotoGallery;","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Pages\\Home.jsx",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Pages\\Header.jsx",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Pages\\Footer.jsx",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Pages\\styles.js",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\AdminPages\\index.jsx",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\OrderProcess\\index.jsx",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\ImageBlock\\ReactResponsiveCarousel.jsx",["262"],"import React from 'react';\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport { Carousel } from 'react-responsive-carousel';\n\nconst ReactResponsiveCarousel = ({imgList}) => {\n\n    const createCarouselItemImage = (image, index, options = {}) => (\n        <div key={`ReactResponsiveCarousel-${index}`}>\n            <img src={image} />\n        </div>\n    );\n    \n    const baseChildren = <div>{imgList.map(createCarouselItemImage)}</div>;\n\n    const getConfigurableProps  = {\n        showArrows:  true,\n        showStatus:  true,\n        showIndicators:  false,\n        infiniteLoop:  true,\n        showThumbs:  false,\n        useKeyboardArrows:  true,\n        autoPlay:  true,\n        stopOnHover:  true,\n        swipeable:  true,\n        dynamicHeight:  true,\n        emulateTouch:  true,\n        thumbWidth:  100, \n        selectedItem:  0, \n        interval:  3000, \n        transitionTime:  150, \n        swipeScrollTolerance:  5,\n        centerSlidePercentage: 80,\n    };\n\n    return (\n        <Carousel \n            infiniteLoop\n            centerMode\n            {...getConfigurableProps}\n        >\n            {baseChildren.props.children}\n        </Carousel>\n    );\n};\n\nexport default ReactResponsiveCarousel;","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\Card\\CardItem.jsx",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\OrderProcess\\Cart.jsx",["263","264","265"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { orderDetailState, setCartUpdate, setDeleteItem } from 'States/orderSlice';\nimport { AddBox, RemoveCircle } from '@material-ui/icons';\nimport IndeterminateCheckBoxIcon from '@material-ui/icons/IndeterminateCheckBox';\nimport TextField from '@material-ui/core/TextField';\nimport { FormControl } from '@material-ui/core';\nimport SplitStripeForm from 'Components/Forms/SplitStripeForm';\nimport AliPayBtn from 'Components/Forms/AliPayBtn';\nimport './styles.scss';\n\nconst Cart = ({}) => { \n    const [totalAmount, setTotalAmount] = useState(0)\n    const [buyerDetails, setBuyerDetails] = useState({})\n    const [disableCheckout, setDisableCheckout] = useState(true)\n    const [haveError, setHaveError] = useState('')\n    const cartOrderList = useSelector(orderDetailState);\n    useEffect(()=>{\n        cartOrderList && \n        setTotalAmount(cartOrderList.reduce((accumulator, current) => {\n            return (accumulator + (parseInt(current.orderAmount) * current.price))\n        }, 0));\n    },[cartOrderList])\n    useEffect(()=>{\n        if(!buyerDetails.name || !buyerDetails.phoneNumber){ setDisableCheckout(true)} \n        if(buyerDetails.name && buyerDetails.phoneNumber) {setDisableCheckout(false)}\n    },[buyerDetails])\n    \n    const dollarAndTax = (a) => {return parseInt((a * 1.07 * 100).toFixed(2))};\n    const buyerInputChange = (event) => {\n        event.preventDefault();\n        setBuyerDetails({...buyerDetails, [event.target.name]: event.target.value})\n    }\n\n    const CartItemList = ({ cartItemDetail }) => {\n        const {\n            imgSrc,\n            itemNumber,\n            title,\n            price,\n            orderAmount,\n        } = cartItemDetail;\n        const dispatch = useDispatch();\n        const [currentOrderAmount, setCurrentOrderAmount] = useState(orderAmount)\n        const updatePrice = (parseInt(orderAmount) * price).toFixed(2);\n        \n        const handleCheckoutAddUpdate = (num) => {\n            if(parseInt(currentOrderAmount) < num){\n                setCurrentOrderAmount(parseInt(currentOrderAmount + 1))\n                dispatch(setCartUpdate({...cartItemDetail, orderAmount: parseInt(currentOrderAmount) + 1}))\n            }\n        }\n        const handleCheckoutMinusUpdate = (num) => {\n            if(parseInt(currentOrderAmount) > num){\n                setCurrentOrderAmount(parseInt(currentOrderAmount) - 1)\n                dispatch(setCartUpdate({...cartItemDetail, orderAmount: parseInt(currentOrderAmount) - 1}))\n            }\n            if (parseInt(currentOrderAmount) <= num) {\n                dispatch(setDeleteItem({...cartItemDetail}))\n            }\n        }\n\n        return(\n            <ul className=\"CartItemList-block\">\n                <li className=\"CartItemList-img-block\"><img src={imgSrc} alt={`${title}-img`} /></li>\n                <li className=\"CartItemList-desc-block\">\n                    <span>{itemNumber}</span>\n                    <span>{title}</span>\n                </li>\n                <li className=\"CartItemList-price-block\">\n                    <span className=\"InputNumberWrapper\">\n                        <TextField\n                            id=\"filled-number\"\n                            label=\"\"\n                            type=\"number\"\n                            value={currentOrderAmount}\n                            variant=\"outlined\"\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            InputProps={{\n                                endAdornment: (\n                                    <span className=\"AddMinusIconWrapper\">\n                                        <AddBox onClick={()=>handleCheckoutAddUpdate(10)} style={{color: 'green', size: '16px', cursor: 'pointer'}}/>\n                                        <IndeterminateCheckBoxIcon onClick={()=>handleCheckoutMinusUpdate(1)} style={{color: 'red', size: '16px', cursor: 'pointer'}}/>\n                                    </span>\n                            )}}/>\n                        \n                    </span>\n                    ${updatePrice}\n                </li>\n            </ul>\n        )\n    };\n\n    return (\n        <div className=\"Cart-Wrapper\">\n            <h1>ORDER DETAILS</h1>\n            <h2 className=\"Cart-Items-in-cart-title\">Items in Cart</h2>\n            <div className=\"Cart-Added-Items\">                \n                { (cartOrderList.length < 1) \n                    ? <h2>YOU HAVE NO ADDED ITEM</h2>\n                    : cartOrderList.map((item, idx)=>(\n                        <CartItemList \n                            key={`${item.title}-${idx}`}\n                            cartItemDetail={item} />\n                    ))\n                }\n            </div>\n            <div className=\"Cart-Total-Amount\">\n                <h4>tax: ${(totalAmount * .07).toFixed(2)}</h4>\n                <h3>TOTAL: ${(totalAmount * 1.07).toFixed(2)}</h3>\n            </div>\n\n            {haveError && <p style={{color: 'red'}}>{haveError}</p>}\n            <div className=\"Cart-User-Info\">\n                <FormControl>\n                    <TextField required name=\"name\" id=\"Checkout-Name\" label=\"Name\" onChange={buyerInputChange} />\n                    <TextField name=\"address\" id=\"Checkout-Address\" label=\"Address\" onChange={buyerInputChange} />\n                    <TextField required name=\"phoneNumber\" id=\"Checkout-PhoneNumber\" label=\"Phone Number\" onChange={buyerInputChange} />\n                    <TextField name=\"eMail\" id=\"Checkout-EMail\" label=\"E-Mail\" onChange={buyerInputChange} />\n                </FormControl>\n                {/* <AliPayBtn buyerDetails={ buyerDetails } /> */}\n                <SplitStripeForm \n                    disableCheckout={ disableCheckout }\n                    itemDetails={ cartOrderList }\n                    buyerDetails={ buyerDetails }\n                    dollarAmount={ dollarAndTax(totalAmount) }\n                    setHaveError={ setHaveError }\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default Cart;","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\OrderProcess\\OrderReceipt.jsx",["266"],"import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setClearOrderList } from 'States/orderSlice';\nimport { CancelButton } from 'Components/MUI/MuiComponents/MuiBtn';\nimport { useHistory } from 'react-router-dom';\nimport './styles.scss'; \n\nconst OrderReceipt = () => {\n    let history = useHistory();\n    const dispatch = useDispatch();\n    const wsUri = process.env.REACT_APP_API_WEBSOCKETS;\n    const websocket = new WebSocket(wsUri);\n    \n    // triiger websocket to send order on load, and disable button until websocket successfully update the order\n    useEffect(()=>{\n        websocket.onopen = (event) => {\n            const sendMessage = {\n                message : \"New order available\", \n                action : \"message\"\n            }\n            dispatch(setClearOrderList());\n            websocket.send(JSON.stringify(sendMessage));\n        }\n    },[])\n\n    const handleOnClick = () => {\n        websocket.close();\n        history.push('/')\n    };\n\n    return(\n        <div className=\"OrderReceipt-wrapper\">\n            <h2>Order Receipt</h2>\n            <div>\n                THANK YOU AND YOUR ORDER WILL BE READY SOON\n            </div>\n            <CancelButton \n                label='CLOSE'\n                onClick={handleOnClick}\n                onKeyPress={handleOnClick}\n            />\n        </div>\n    );\n};\n\nexport default OrderReceipt;","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\StaticDatas\\index.js",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\AdminPages\\Admin.jsx",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\AdminPages\\AdminLogin.jsx",["267"],"import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { MuiInputField } from 'Components/MUI';\nimport { SubmitButton, CancelButton } from 'Components/MUI/MuiComponents/MuiBtn';\nimport { userIsLoggedIn, userLogin, userLogout } from 'States/userSlice';\n\nimport './styles.scss';\n\nconst AdminLogin = () => {\n    const userSignIn = useSelector(userIsLoggedIn);\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const [authInput, setAuthInput] = useState({});\n    const [inputErrorMessage, setInputErrorMessage] = useState('');\n\n    useEffect(()=>{\n        (userSignIn === true) && (history.push(\"/admin\"));\n    },[userSignIn]);\n    const LoginSubmitKeyPress = (e) => {\n        if(e.keyCode === 13 || e.charCode === 13 ||  e.key === 'Enter'){\n            e.preventDefault();\n            (authInput.userName && authInput.password) && dispatch(userLogin({...authInput, history}));\n            (!authInput.userName || !authInput.password) \n                ? setInputErrorMessage('FILL IN MISSING INPUT FIELD') \n                : setInputErrorMessage('');\n        }\n    }\n    const LoginSubmit = () => {\n        (authInput.userName && authInput.password) && dispatch(userLogin({...authInput, history}));\n        (!authInput.userName || !authInput.password) \n            ? setInputErrorMessage('FILL IN MISSING INPUT FIELD') \n            : setInputErrorMessage('');\n    };\n\n    // store all input changes\n    const formInputChange = (e) => {\n        const inputValue = (\n            ((e.target.name === 'number') && parseInt(e.target.value)) || \n            ((e.target.name === 'userName') && e.target.value.toLowerCase()) ||\n            e.target.value\n        );\n\n        setAuthInput({ \n            ...authInput, \n            [e.target.name] : inputValue\n        })\n    };\n\n    const inputSettings = [\n        {\n            type: \"text\",\n            name: \"userName\", \n            label: \"E-Mail\",\n            required: true\n        },{\n            type: \"password\",\n            name: \"password\", \n            label: \"password\",\n            required: true\n        }\n    ];\n    \n    return(\n        <div className=\"outter-block-log\">\n            <div className=\"inner-block-log\">\n                {inputErrorMessage && <div>{inputErrorMessage}</div>}\n                <h2>ADMIN LOGIN PAGE</h2>\n                <div className=\"form-container\">\n                    {\n                        inputSettings.map((inputSetting)=>\n                            <MuiInputField \n                                key={inputSetting.name} \n                                { ...inputSetting } \n                                onChange={ formInputChange } \n                                onKeyPress={ LoginSubmitKeyPress }/>\n                        )\n                    }\n                    <SubmitButton \n                        label=\"LOGIN\"\n                        onClick={LoginSubmit} />\n                    <CancelButton\n                        label=\"LOGOUT\"\n                        onClick={ ()=> dispatch(userLogout({history})) } />\n                </div>\n                {/* <span>Dont have a account? <Link to=\"/signup\"> click here</Link></span> */}\n            </div>\n        </div>\n    )\n}\n\nexport default AdminLogin;\n","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\MenuBox\\index.jsx",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\Card\\styles.js",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\AdminPages\\AdminMenu.jsx",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\AdminPages\\AdminOrders.jsx",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\StaticDatas\\footerData.js",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\StaticDatas\\headerData.js",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\StaticDatas\\socialMedia.js",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\Forms\\SplitStripeForm.jsx",["268","269"],"import React, { useState, useEffect, useMemo } from \"react\";\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { postNewOrder } from 'States/orderSlice';\nimport { SubmitButton } from 'Components/MUI/MuiComponents/MuiBtn';\nimport {\n  useStripe,\n  useElements,\n  CardNumberElement,\n  CardCvcElement,\n  CardExpiryElement\n} from \"@stripe/react-stripe-js\";\nimport moment from 'moment';\nimport useResponsiveFontSize from \"./useResponsiveFontSize\";\n\nconst useOptions = () => {\n  const fontSize = useResponsiveFontSize();\n  const options = useMemo(\n    () => ({\n      style: {\n        base: {\n          fontSize,\n          color: \"#424770\",\n          letterSpacing: \"0.025em\",\n          fontFamily: \"Source Code Pro, monospace\",\n          \"::placeholder\": {\n            color: \"#aab7c4\"\n          }\n        },\n        invalid: {\n          color: \"#9e2146\"\n        }\n      }\n    }),\n    [fontSize]\n  );\n\n  return options;\n};\n\nconst stripeTokenHandler = async(\n  token, \n  amount,\n  itemDetails,\n  buyerDetails,\n  dispatch,\n  history\n) => {\n  const handlePurchaseDispatch = () => {\n    const param = {\n        orderNumber: '',\n        orderTime: new Date(),\n        // orderTime: moment().format('MMMM Do YYYY, h:mm:ss a'),\n        fullFillTime: '',\n        fullFillStatus: false,\n        itemDetails: itemDetails,\n        buyerDetails: {...buyerDetails}\n    }\n    dispatch(postNewOrder(param))\n    history.push('/order-receipt') \n  }\n\n  const paymentData = {\n    token: token.id,\n    amount: amount,\n    description: itemDetails.toString()\n  };\n  // Use fetch to send the token ID and any other payment data to your server.\n  // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch\n  const response = await fetch(`${process.env.REACT_APP_API_STRIPE_CHECKOUT}`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(paymentData),\n  });\n\n  // Return and display the result of the charge.\n  response.json()\n    .then(res => {\n      if(res.statusCode === 200){\n        handlePurchaseDispatch();\n      } else {\n        console.log(\"not 200, something else is wrong\")\n      }})\n    .catch(err=> err)\n  // return response.json();\n}\n\nconst SplitStripeForm = ({\n    disableCheckout,\n    itemDetails,\n    buyerDetails,\n    dollarAmount,\n    setHaveError,\n}) => {\n  const stripe = useStripe();\n  const elements = useElements();\n  const options = useOptions();\n  const dispatch = useDispatch();\n  let history = useHistory();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setIsLoading(true);\n    if (!stripe || !elements) {\n      setIsLoading(false);\n      // Stripe.js has not loaded yet. Make sure to disable\n      // form submission until Stripe.js has loaded.\n      return;\n    }\n\n    const card = elements.getElement(CardNumberElement);\n    const result = await stripe.createToken(card);\n    if(result.error){\n      setIsLoading(false);\n      console.log('result-err---->: ', result.error.message);\n      setHaveError(result.error.message);\n    } else {\n      setHaveError('')\n      stripeTokenHandler(\n        result.token, \n        dollarAmount, \n        itemDetails, \n        buyerDetails,\n        dispatch,\n        history);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        Card number\n        <CardNumberElement\n          options={options}\n          onChange={event => event}\n        />\n      </label>\n      <label>\n        Expiration date\n        <CardExpiryElement\n          options={options}\n          onChange={event => event}\n        />\n      </label>\n      <label>\n        CVC\n        <CardCvcElement\n          options={options}\n          onChange={event => event}\n        />\n      </label>\n      <SubmitButton \n          disabled={ (!stripe || isLoading || disableCheckout || (itemDetails.length < 1)) ? true : false }\n          label='CHECK OUT'\n          type=\"submit\"\n      />\n    </form>\n  );\n};\n\nexport default SplitStripeForm;\n","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\Forms\\AliPayBtn.jsx",["270","271","272","273","274"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport { SubmitButton } from 'Components/MUI/MuiComponents/MuiBtn';\nimport {\n    CardElement,\n    Elements,\n    useElements,\n    useStripe\n  } from '@stripe/react-stripe-js';\nimport {loadStripe} from '@stripe/stripe-js';\nimport axios from 'axios';\n\nconst AliPayBtn = ({buyerDetails}) => {\n    const stripe = useStripe();\n    const stripePromise = loadStripe\n    ('pk_test_51I8WMcEFoepYxM6pCNMtpNb0Tvh8pTLqzYMNrocMJoqBjSQ4Eo5ls4lplxrmSLTGWydlBrAkJp0a9Zgr6tKK8jTw00fquGZFlE');\n    const elements = useElements();\n    const [srcId, setSrcId] = useState('');\n    const [clientId, setClientId] = useState('');\n    const [paymentStatus, setPaymentStatus] = useState('');\n    const [chargeAmount, setChargeAmount] = useState();\n\n\n    useEffect(()=>{\n        if(paymentStatus === \"chargeable\"){\n            chargePayment(srcId);\n        }\n    },[paymentStatus])\n\n    // create AliPay source\n    const handleOnClickAliPay = () => {\n        stripe.createSource({\n            type: 'alipay',\n            amount: 1099,\n            currency: 'usd',\n            redirect: {\n              return_url: 'https://mimitale.com',\n            },\n          }).then(function(result) {\n            // handle result.error or result.source\n            console.log(\"result--->: \", result?.source?.redirect?.url);\n            setSrcId(result?.source?.id);\n            setClientId(result?.source?.client_secret);\n          });\n    }\n    \n    // Get source update status\n    const handleReturnSrc = async() => {\n        const paymentIntent = await stripe.retrieveSource({\n            id: srcId,\n            client_secret: clientId,\n          });\n          console.log('paymentIntent-->: ', paymentIntent);\n          console.log('paymentIntent.source.status--->: ', paymentIntent?.source?.status)\n          if(paymentIntent?.source?.status === \"chargeable\"){\n                setPaymentStatus(paymentIntent?.source?.status);\n                setChargeAmount(paymentIntent?.source?.amount);\n          };\n    };\n\n    // Charge if status is Chargeable by useEffect\n    const chargePayment = async() => {\n        // return charge;\n        const paymentData = {\n            token: srcId,\n            amount: chargeAmount,\n            description: buyerDetails.toString()\n        };\n\n        const response = await fetch(`${process.env.REACT_APP_API_STRIPE_CHECKOUT}`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(paymentData),\n        });\n\n        response.json()\n            .then(res => {\n            if(res.statusCode === 200){\n                console.log(\"successful--->: \", res)\n            } else {\n                console.log(\"not 200, something else is wrong--->: \", res)\n            }})\n            .catch(err=> err)\n    };\n\n    return(\n        <Elements stripe={stripePromise}>       \n            <SubmitButton \n                label='Alipay'\n                onClick={handleOnClickAliPay}\n            />\n            <SubmitButton \n                label='Source'\n                onClick={handleReturnSrc}\n            />\n        </Elements>\n    )\n};\n\nexport default AliPayBtn;\n\n","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\MUI\\MuiComponents\\MuiBtn.jsx",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\MUI\\MuiTabs.jsx",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\Card\\ItemCard.jsx",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\Forms\\useResponsiveFontSize.js",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\MUI\\index.jsx",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\MUI\\MuiCheckboxList.jsx",["275"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { CostExplorer } from 'aws-sdk';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  formControl: {\n    margin: theme.spacing(3),\n  },\n  listRoot: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  formControlLabel: {\n    paddingRight: '1rem',\n    '&:hover': {\n      backgroundColor: 'pink'\n    },\n  }\n}));\n\nconst MuiCheckboxList = ({checkBoxState, setCheckBoxStateUpdate, handleChange, listTitle, helpText}) => {\n  const classes = useStyles();\n  console.log('CheckBoxState--->: ', checkBoxState)\n  const handleChangeFunction = (event) => handleChange(event, checkBoxState, setCheckBoxStateUpdate);\n  const FormControllerLabelTemplate = ({title, on}) => (\n    <FormControlLabel\n        className={classes.formControlLabel} \n        control={\n          <Checkbox \n            checked={on} \n            onChange={handleChangeFunction} \n            name={title} />}\n        label={title}\n    />\n  );\n\n  return (\n    <div className={classes.root}>\n      <FormControl component=\"fieldset\" className={classes.formControl}>\n        {listTitle && <FormLabel component=\"legend\">{listTitle}</FormLabel>}\n        <FormGroup className={classes.listRoot}>\n          {\n            checkBoxState.map((item, index)=>\n              <FormControllerLabelTemplate key={`check-list-${index}`} {...item}/>)\n          }\n        </FormGroup>\n        {helpText && <FormHelperText>{helpText}</FormHelperText>}\n      </FormControl>\n    </div>\n  );\n}\n\nexport default MuiCheckboxList;","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\AdminComponents\\MenuBlock.jsx",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\MUI\\MuiNumberInput.jsx",["276"],"import React from 'react';\nimport { AddBox, RemoveCircle } from '@material-ui/icons';\nimport IndeterminateCheckBoxIcon from '@material-ui/icons/IndeterminateCheckBox';\nimport TextField from '@material-ui/core/TextField';\nimport './styles.scss';\n\nconst MuiNumberInput = ({\n    min, \n    max,\n    currentNumber,\n    setCurrentNumber,\n    price = null,\n}) => {\n    const updatePrice = price && (parseInt(currentNumber) * price).toFixed(2);\n\n    const handleCheckoutAddUpdate = (num) => {\n        if(parseInt(currentNumber) < num){\n            setCurrentNumber(parseInt(currentNumber) + 1)\n        }\n    }\n    const handleCheckoutMinusUpdate = (num) => {\n        if(parseInt(currentNumber) > num){\n            setCurrentNumber(parseInt(currentNumber) - 1)\n        }\n    }\n    return(\n        <div className=\"MuiNumberInput-Wrapper\">\n            <span className=\"InputNumberWrapper\">\n                <TextField\n                    id=\"filled-number\"\n                    label=\"\"\n                    type=\"number\"\n                    value={currentNumber}\n                    variant=\"outlined\"\n                    style={{display: 'flex', flexBasis: '100%'}}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    InputProps={{\n                        endAdornment: (\n                            <>\n                                <AddBox onClick={()=>handleCheckoutAddUpdate(max)} style={{color: 'green', cursor: 'pointer'}}/>\n                                <IndeterminateCheckBoxIcon onClick={()=>handleCheckoutMinusUpdate(min)} style={{color: 'red', cursor: 'pointer'}}/>\n                            </>\n                        )}}\n                    />\n            </span>\n            {price && `$${updatePrice}`}\n        </div>\n    );\n};\n\nexport default MuiNumberInput;","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\Forms\\AddCategory.jsx",["277","278"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { menuListState, setAddNewMenuCategory } from 'States/menuSlice';\nimport { MuiInputField } from 'Components/MUI';\nimport { EditButton } from 'Components/MUI/MuiComponents/MuiBtn';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport ImageUpload from '../ImageUpload/ImageUpload';\nimport Modal from '@material-ui/core/Modal';\nimport './styles.scss';\n\nconst AddCategory = ({open, handleToggle}) => {\n    const dispatch = useDispatch();\n    const  menuState= useSelector(menuListState);\n    const [formInputs, setFormInputs] = useState({menuList: []});\n    const [imageURL, setImageURL] = useState('');\n    const [inputError, setInputError] = useState(false);\n    const [toggleUploadImg, setToggleUploadImg] = useState(true);\n    useEffect(()=>{\n        if(imageURL){\n            setFormInputs({\n                ...formInputs,\n                imgSrc: imageURL\n            })\n        }\n    },[imageURL])\n\n    const formInputChange = (e) => {\n        if(e.target.name === 'points' && (/[^\\d]/g).test(e.target.value)){\n            setInputError(true)\n        } else {\n            setInputError(false)\n            setFormInputs({ \n                ...formInputs,\n                [e.target.name] :  e.target.value\n            })\n        }\n    };\n\n    const handleSubmitEdit = () => {\n        dispatch(setAddNewMenuCategory([...menuState, formInputs]));\n        setFormInputs({});\n        setImageURL('');\n        handleToggle();\n    };\n\n    const inputSettings = [{\n            type: \"text\",\n            name: \"title\",\n            placeholder: \"title\"\n        },{\n            type: \"text\",\n            name: \"descriptions\",\n            placeholder: \"descriptions\"\n    }];\n\n\n    return(\n        <Modal\n            open={open}\n            onClose={handleToggle}\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\"\n            style={{\n                overflow: 'auto',\n                display: 'flex',\n                justifyContent: 'center',\n                alignContent: 'center',\n            }}>\n            <div className=\"AddMenuItem-Wrapper\">\n                <div className=\"inner-block\">\n                    <div className=\"form-container\" >\n                        <div className=\"Item-Details-Close\">\n                            <FontAwesomeIcon onClick={handleToggle} icon={faTimes} style={{margin: '1rem', cursor: 'pointer'}} className=\"fa-2x\"/>\n                        </div>\n                        <button onClick={()=> setToggleUploadImg(!toggleUploadImg)}>\n                            {toggleUploadImg ? \"upload image link\" : \"upload image\"}\n                        </button>\n                        { toggleUploadImg \n                            ? <ImageUpload setImageURL={setImageURL}/>\n                            : <MuiInputField\n                                bgColor=\"#fff\"\n                                type=\"text\"\n                                name=\"imgSrc\"\n                                label=\"image link\"\n                                onChange={(e)=> setImageURL(e.target.value)}/>}\n                            \n                        {\n                            inputSettings.map((inputSetting, index)=>\n                                <MuiInputField\n                                    key={`${index}-inputsetting`}\n                                    {...inputSetting}\n                                    bgColor=\"#fff\"\n                                    name={inputSetting.name}\n                                    label={inputSetting.placeholder}\n                                    onChange={ formInputChange }/>\n                            )\n                        }\n                        <EditButton \n                            label=\"ADD\"\n                            onClick={ handleSubmitEdit }/>\n                    </div>\n                </div>\n            </div>\n        </Modal>\n    )\n};\n\nexport default AddCategory;","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\AdminComponents\\OrderBlock.jsx",["279"],"import React from 'react';\nimport { SubmitButton } from 'Components/MUI/MuiComponents/MuiBtn';\nimport moment from 'moment';\nimport axios from 'axios';\nimport './styles.scss';\n\nconst OrderBlock = ({ order, currentOrders, setCurrentOrders, index}) => {\n    const {\n        orderNumber,\n        orderTime,\n        ordId,\n        itemDetails,\n        buyerDetails,\n    } = order; \n\n    const handleOrderFullfill = (orderId) => {\n        const param = {\n            ordId: orderId,\n            fullFillStatus: true,\n            fullFillTime: new Date(),\n            // fullFillTime: moment().format('MMMM Do YYYY, h:mm:ss a'),\n        }\n        axios.put(process.env.REACT_APP_API_RESTAURANT_ORDER, param)\n            .then(res=> {\n                console.log(res.data)\n                if(res.data.update_status === \"fullfilled success\"){\n                    setCurrentOrders(currentOrders.filter(order => order.ordId !== ordId));\n                }\n            })\n            .catch(err=> console.log(err))\n    }\n    const OrderItemList = ({itemNumber, title, orderAmount}) => (\n        <div className=\"OrderItemListWrapper\">\n            <h3>{itemNumber}</h3>\n            <p>{title}</p>\n            <h3>X {orderAmount}</h3>\n        </div>\n    );\n\n    return (\n        <div className=\"OrderBlock-wrapper\">\n            <h3>{index}, order-number: {orderNumber}</h3>\n            <span>order time: {moment(orderTime).format('MMMM Do YYYY, h:mm:ss a')}</span>\n            {  itemDetails?.map((item, index) => {\n               return <OrderItemList key={`orderItem-${index}`} {...item}/>\n            })}\n            <SubmitButton \n                props={{margin: 'auto 0 0 0'}}\n                label='ORDER READY'\n                onClick={()=> handleOrderFullfill(ordId)}\n                onKeyPress={()=> handleOrderFullfill(ordId)}\n            />\n        </div>\n    );\n};\n\nexport default OrderBlock;","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\Card\\ItemDetails.jsx",["280","281","282"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { orderDetailState, setCart, setCartUpdate } from 'States/orderSlice';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { MuiNumberInput } from 'Components/MUI';\nimport { SubmitButton } from 'Components/MUI/MuiComponents/MuiBtn';\n\nimport './styles.scss';\n\n\nconst ItemDetails = ({itemDetails, handleClose, cartOrderList}) => {\n    const dispatch = useDispatch();\n    // const cartOrderList = useSelector(orderDetailState);\n    const {\n        imgSrc,\n        itemNumber,\n        title,\n        description,\n        price,\n    } = itemDetails;\n    const [currentOrderAmount, setCurrentOrderAmount] = useState(\"1\")\n\n    useEffect(()=>{\n        const findDetailHistory = cartOrderList.find(itm => itm.itemNumber === itemDetails.itemNumber);\n        findDetailHistory && setCurrentOrderAmount(findDetailHistory.orderAmount);\n    },[]);\n\n    const handleAddItemToCart = async() => {\n        const findDetailHistory = cartOrderList.find(itm => itm.itemNumber === itemNumber);\n\n        findDetailHistory\n            ? dispatch(setCartUpdate({...itemDetails, orderAmount: currentOrderAmount}))\n            : dispatch(setCart(cartOrderList.concat({...itemDetails, orderAmount: currentOrderAmount})));\n            handleClose();\n    };\n\n    return (\n        <div className=\"Item-Details-Wrapper\">\n            <div className=\"Item-Details-Close\">\n                <FontAwesomeIcon onClick={handleClose} icon={faTimes} style={{margin: '1rem', cursor: 'pointer'}} className=\"fa-2x\"/>\n            </div>\n            <div>\n                <div className=\"Item-Card-Img-block\">\n                    <span>{itemNumber}</span>\n                    <img src={imgSrc} alt={title}/>\n                </div>\n            </div>\n            <div className=\"Item-Details-Text\">\n                <h2>{title}</h2>\n                <p>{description}</p>\n                <h3>${price}</h3>\n                <MuiNumberInput \n                    min=\"1\"\n                    max=\"50\"\n                    currentNumber={currentOrderAmount}\n                    setCurrentNumber={setCurrentOrderAmount}\n                />\n                <SubmitButton \n                    label='ADD TO CART'\n                    onClick={handleAddItemToCart}\n                    onKeyPress={handleAddItemToCart}/>\n            </div>\n        </div>\n    );\n};\n\nexport default ItemDetails;","C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\Card\\ItemCardList.jsx",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\ImageUpload\\ImageUpload.jsx",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\Forms\\AddMenuItem.jsx",["283","284","285","286","287","288","289","290"],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\ImageUpload\\styles.js",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\Forms\\ItemEdit.jsx",["291","292","293","294","295","296","297","298"],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\Forms\\FormSubmitFunctions.js",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\Forms\\FormDefault.js",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\MUI\\MuiInputField.jsx",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\MUI\\MuiButton.jsx",[],"C:\\Users\\PAF\\zWebStuff\\ichot\\src\\Components\\MUI\\styles.js",[],{"ruleId":"299","replacedBy":"300"},{"ruleId":"301","replacedBy":"302"},{"ruleId":"303","severity":1,"message":"304","line":17,"column":5,"nodeType":"305","endLine":17,"endColumn":19,"suggestions":"306"},{"ruleId":"303","severity":1,"message":"304","line":20,"column":7,"nodeType":"305","endLine":20,"endColumn":9,"suggestions":"307"},{"ruleId":"308","severity":1,"message":"309","line":2,"column":8,"nodeType":"310","messageId":"311","endLine":2,"endColumn":13},{"ruleId":"308","severity":1,"message":"312","line":5,"column":5,"nodeType":"310","messageId":"311","endLine":5,"endColumn":25},{"ruleId":"308","severity":1,"message":"313","line":16,"column":7,"nodeType":"310","messageId":"311","endLine":16,"endColumn":24},{"ruleId":"314","severity":1,"message":"315","line":9,"column":21,"nodeType":"316","endLine":9,"endColumn":70},{"ruleId":"317","severity":1,"message":"318","line":9,"column":13,"nodeType":"316","endLine":9,"endColumn":32},{"ruleId":"308","severity":1,"message":"319","line":4,"column":18,"nodeType":"310","messageId":"311","endLine":4,"endColumn":30},{"ruleId":"308","severity":1,"message":"320","line":9,"column":8,"nodeType":"310","messageId":"311","endLine":9,"endColumn":17},{"ruleId":"321","severity":1,"message":"322","line":12,"column":15,"nodeType":"323","messageId":"324","endLine":12,"endColumn":17},{"ruleId":"303","severity":1,"message":"325","line":24,"column":7,"nodeType":"305","endLine":24,"endColumn":9,"suggestions":"326"},{"ruleId":"303","severity":1,"message":"327","line":19,"column":7,"nodeType":"305","endLine":19,"endColumn":19,"suggestions":"328"},{"ruleId":"308","severity":1,"message":"329","line":1,"column":27,"nodeType":"310","messageId":"311","endLine":1,"endColumn":36},{"ruleId":"308","severity":1,"message":"330","line":13,"column":8,"nodeType":"310","messageId":"311","endLine":13,"endColumn":14},{"ruleId":"308","severity":1,"message":"331","line":1,"column":38,"nodeType":"310","messageId":"311","endLine":1,"endColumn":53},{"ruleId":"308","severity":1,"message":"332","line":4,"column":5,"nodeType":"310","messageId":"311","endLine":4,"endColumn":16},{"ruleId":"308","severity":1,"message":"309","line":10,"column":8,"nodeType":"310","messageId":"311","endLine":10,"endColumn":13},{"ruleId":"308","severity":1,"message":"333","line":16,"column":11,"nodeType":"310","messageId":"311","endLine":16,"endColumn":19},{"ruleId":"303","severity":1,"message":"334","line":27,"column":7,"nodeType":"305","endLine":27,"endColumn":22,"suggestions":"335"},{"ruleId":"308","severity":1,"message":"336","line":9,"column":10,"nodeType":"310","messageId":"311","endLine":9,"endColumn":22},{"ruleId":"308","severity":1,"message":"319","line":2,"column":18,"nodeType":"310","messageId":"311","endLine":2,"endColumn":30},{"ruleId":"308","severity":1,"message":"337","line":17,"column":12,"nodeType":"310","messageId":"311","endLine":17,"endColumn":22},{"ruleId":"303","severity":1,"message":"338","line":26,"column":7,"nodeType":"305","endLine":26,"endColumn":17,"suggestions":"339"},{"ruleId":"308","severity":1,"message":"340","line":13,"column":9,"nodeType":"310","messageId":"311","endLine":13,"endColumn":21},{"ruleId":"308","severity":1,"message":"341","line":2,"column":23,"nodeType":"310","messageId":"311","endLine":2,"endColumn":34},{"ruleId":"308","severity":1,"message":"342","line":3,"column":10,"nodeType":"310","messageId":"311","endLine":3,"endColumn":26},{"ruleId":"303","severity":1,"message":"343","line":27,"column":7,"nodeType":"305","endLine":27,"endColumn":9,"suggestions":"344"},{"ruleId":"308","severity":1,"message":"345","line":3,"column":25,"nodeType":"310","messageId":"311","endLine":3,"endColumn":46},{"ruleId":"308","severity":1,"message":"346","line":15,"column":5,"nodeType":"310","messageId":"311","endLine":15,"endColumn":18},{"ruleId":"308","severity":1,"message":"347","line":16,"column":5,"nodeType":"310","messageId":"311","endLine":16,"endColumn":17},{"ruleId":"308","severity":1,"message":"348","line":25,"column":11,"nodeType":"310","messageId":"311","endLine":25,"endColumn":19},{"ruleId":"308","severity":1,"message":"349","line":33,"column":12,"nodeType":"310","messageId":"311","endLine":33,"endColumn":20},{"ruleId":"308","severity":1,"message":"350","line":33,"column":22,"nodeType":"310","messageId":"311","endLine":33,"endColumn":33},{"ruleId":"303","severity":1,"message":"338","line":41,"column":7,"nodeType":"305","endLine":41,"endColumn":17,"suggestions":"351"},{"ruleId":"352","severity":1,"message":"353","line":137,"column":68,"nodeType":"354","messageId":"355","endLine":137,"endColumn":70},{"ruleId":"308","severity":1,"message":"356","line":3,"column":10,"nodeType":"310","messageId":"311","endLine":3,"endColumn":23},{"ruleId":"308","severity":1,"message":"357","line":14,"column":5,"nodeType":"310","messageId":"311","endLine":14,"endColumn":20},{"ruleId":"308","severity":1,"message":"346","line":15,"column":5,"nodeType":"310","messageId":"311","endLine":15,"endColumn":18},{"ruleId":"308","severity":1,"message":"347","line":16,"column":5,"nodeType":"310","messageId":"311","endLine":16,"endColumn":17},{"ruleId":"308","severity":1,"message":"358","line":17,"column":5,"nodeType":"310","messageId":"311","endLine":17,"endColumn":18},{"ruleId":"308","severity":1,"message":"348","line":30,"column":11,"nodeType":"310","messageId":"311","endLine":30,"endColumn":19},{"ruleId":"303","severity":1,"message":"338","line":46,"column":7,"nodeType":"305","endLine":46,"endColumn":17,"suggestions":"359"},{"ruleId":"352","severity":1,"message":"353","line":126,"column":68,"nodeType":"354","messageId":"355","endLine":126,"endColumn":70},"no-native-reassign",["360"],"no-negated-in-lhs",["361"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["362"],["363"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'CognitoUserAttribute' is defined but never used.","'ApiGateWayUserURL' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'RemoveCircle' is defined but never used.","'AliPayBtn' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","React Hook useEffect has missing dependencies: 'dispatch' and 'websocket'. Either include them or remove the dependency array.",["364"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["365"],"'useEffect' is defined but never used.","'moment' is defined but never used.","'useLayoutEffect' is defined but never used.","'CardElement' is defined but never used.","'elements' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'chargePayment' and 'srcId'. Either include them or remove the dependency array.",["366"],"'CostExplorer' is defined but never used.","'inputError' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'formInputs'. Either include it or remove the dependency array. You can also do a functional update 'setFormInputs(f => ...)' if you only need 'formInputs' in the 'setFormInputs' call.",["367"],"'buyerDetails' is assigned a value but never used.","'useSelector' is defined but never used.","'orderDetailState' is defined but never used.","React Hook useEffect has missing dependencies: 'cartOrderList' and 'itemDetails.itemNumber'. Either include them or remove the dependency array.",["368"],"'setAddNewMenuCategory' is defined but never used.","'addOnsDefault' is defined but never used.","'spicyDefault' is defined but never used.","'dispatch' is assigned a value but never used.","'sizeList' is assigned a value but never used.","'setSizeList' is assigned a value but never used.",["369"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'setUpdateMenu' is defined but never used.","'sizeListDefault' is defined but never used.","'initItemState' is defined but never used.",["370"],"no-global-assign","no-unsafe-negation",{"desc":"371","fix":"372"},{"desc":"373","fix":"374"},{"desc":"375","fix":"376"},{"desc":"377","fix":"378"},{"desc":"379","fix":"380"},{"desc":"381","fix":"382"},{"desc":"383","fix":"384"},{"desc":"381","fix":"385"},{"desc":"381","fix":"386"},"Update the dependencies array to be: [dispatch, userIsSignIn]",{"range":"387","text":"388"},"Update the dependencies array to be: [dispatch]",{"range":"389","text":"390"},"Update the dependencies array to be: [dispatch, websocket]",{"range":"391","text":"392"},"Update the dependencies array to be: [history, userSignIn]",{"range":"393","text":"394"},"Update the dependencies array to be: [chargePayment, paymentStatus, srcId]",{"range":"395","text":"396"},"Update the dependencies array to be: [formInputs, imageURL]",{"range":"397","text":"398"},"Update the dependencies array to be: [cartOrderList, itemDetails.itemNumber]",{"range":"399","text":"400"},{"range":"401","text":"398"},{"range":"402","text":"398"},[487,501],"[dispatch, userIsSignIn]",[784,786],"[dispatch]",[905,907],"[dispatch, websocket]",[739,751],"[history, userSignIn]",[906,921],"[chargePayment, paymentStatus, srcId]",[1084,1094],"[formInputs, imageURL]",[1026,1028],"[cartOrderList, itemDetails.itemNumber]",[1674,1684],[1692,1702]]